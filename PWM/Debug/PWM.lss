
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000283e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011e  00800060  0000283e  000028d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000022  0080017e  0080017e  000029f0  2**0
                  ALLOC
  3 .stab         00001b60  00000000  00000000  000029f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001950  00000000  00000000  00004550  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00005ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  00006040  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  00006232  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  0000863d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  000099c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  0000ab9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  0000ad5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  0000b052  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000b9c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e3       	ldi	r30, 0x3E	; 62
      68:	f8 e2       	ldi	r31, 0x28	; 40
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 37       	cpi	r26, 0x7E	; 126
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e7       	ldi	r26, 0x7E	; 126
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 3a       	cpi	r26, 0xA0	; 160
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 17 07 	call	0xe2e	; 0xe2e <main>
      8a:	0c 94 1d 14 	jmp	0x283a	; 0x283a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 e0 10 	jmp	0x21c0	; 0x21c0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a6 e7       	ldi	r26, 0x76	; 118
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 fc 10 	jmp	0x21f8	; 0x21f8 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 ec 10 	jmp	0x21d8	; 0x21d8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 ec 10 	jmp	0x21d8	; 0x21d8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 e0 10 	jmp	0x21c0	; 0x21c0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	86 e7       	ldi	r24, 0x76	; 118
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 fc 10 	jmp	0x21f8	; 0x21f8 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 e8 10 	jmp	0x21d0	; 0x21d0 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	66 e7       	ldi	r22, 0x76	; 118
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 04 11 	jmp	0x2208	; 0x2208 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 ec 10 	jmp	0x21d8	; 0x21d8 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 ec 10 	jmp	0x21d8	; 0x21d8 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 ec 10 	jmp	0x21d8	; 0x21d8 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 f0 10 	jmp	0x21e0	; 0x21e0 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 0c 11 	jmp	0x2218	; 0x2218 <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 e8 10 	jmp	0x21d0	; 0x21d0 <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 04 11 	jmp	0x2208	; 0x2208 <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	e2 58       	subi	r30, 0x82	; 130
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <main>:

u8 fir_raise, fir_fall, sec_raise, high, period;
u32 freq;
f32 duty_cycle;
u8 frequency[14], duty[7];
int main() {
     e2e:	cf 92       	push	r12
     e30:	df 92       	push	r13
     e32:	ef 92       	push	r14
     e34:	ff 92       	push	r15
     e36:	0f 93       	push	r16
     e38:	df 93       	push	r29
     e3a:	cf 93       	push	r28
     e3c:	cd b7       	in	r28, 0x3d	; 61
     e3e:	de b7       	in	r29, 0x3e	; 62

	Lcd_vidinit();
     e40:	0e 94 91 07 	call	0xf22	; 0xf22 <Lcd_vidinit>
		Lcd_vidRowColumn(0, 0); //moves the cursor to start from first row
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	0e 94 18 0b 	call	0x1630	; 0x1630 <Lcd_vidRowColumn>
		Lcd_vidDisplyStr("Freq=");
     e4c:	80 e6       	ldi	r24, 0x60	; 96
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
		Lcd_vidRowColumn(1, 0); //moves the cursor to the second row
     e54:	81 e0       	ldi	r24, 0x01	; 1
     e56:	60 e0       	ldi	r22, 0x00	; 0
     e58:	0e 94 18 0b 	call	0x1630	; 0x1630 <Lcd_vidRowColumn>
		Lcd_vidDisplyStr("Duty=");
     e5c:	86 e6       	ldi	r24, 0x66	; 102
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
		Lcd_vidRowColumn(0, 6);
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	66 e0       	ldi	r22, 0x06	; 6
     e68:	0e 94 18 0b 	call	0x1630	; 0x1630 <Lcd_vidRowColumn>
		TIMER0_Init();
     e6c:	0e 94 9b 0b 	call	0x1736	; 0x1736 <TIMER0_Init>
		TIMER0_PWM(50, 25);
     e70:	82 e3       	ldi	r24, 0x32	; 50
     e72:	69 e1       	ldi	r22, 0x19	; 25
     e74:	0e 94 a9 0b 	call	0x1752	; 0x1752 <TIMER0_PWM>
		while (1) {

			Freq_Duty(fir_raise, fir_fall, sec_raise, high, period, &freq, &duty_cycle);
     e78:	80 91 94 01 	lds	r24, 0x0194
     e7c:	90 91 91 01 	lds	r25, 0x0191
     e80:	20 91 92 01 	lds	r18, 0x0192
     e84:	30 91 90 01 	lds	r19, 0x0190
     e88:	50 91 93 01 	lds	r21, 0x0193
     e8c:	ec e8       	ldi	r30, 0x8C	; 140
     e8e:	f1 e0       	ldi	r31, 0x01	; 1
     e90:	ac e9       	ldi	r26, 0x9C	; 156
     e92:	b1 e0       	ldi	r27, 0x01	; 1
     e94:	69 2f       	mov	r22, r25
     e96:	42 2f       	mov	r20, r18
     e98:	23 2f       	mov	r18, r19
     e9a:	05 2f       	mov	r16, r21
     e9c:	7f 01       	movw	r14, r30
     e9e:	6d 01       	movw	r12, r26
     ea0:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <Freq_Duty>
			ltoa(freq, frequency, 10);
     ea4:	80 91 8c 01 	lds	r24, 0x018C
     ea8:	90 91 8d 01 	lds	r25, 0x018D
     eac:	a0 91 8e 01 	lds	r26, 0x018E
     eb0:	b0 91 8f 01 	lds	r27, 0x018F
     eb4:	2e e7       	ldi	r18, 0x7E	; 126
     eb6:	31 e0       	ldi	r19, 0x01	; 1
     eb8:	bc 01       	movw	r22, r24
     eba:	cd 01       	movw	r24, r26
     ebc:	a9 01       	movw	r20, r18
     ebe:	2a e0       	ldi	r18, 0x0A	; 10
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	0e 94 38 11 	call	0x2270	; 0x2270 <ltoa>
			itoa((int) duty_cycle, duty, 10);
     ec6:	80 91 9c 01 	lds	r24, 0x019C
     eca:	90 91 9d 01 	lds	r25, 0x019D
     ece:	a0 91 9e 01 	lds	r26, 0x019E
     ed2:	b0 91 9f 01 	lds	r27, 0x019F
     ed6:	bc 01       	movw	r22, r24
     ed8:	cd 01       	movw	r24, r26
     eda:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
     ede:	dc 01       	movw	r26, r24
     ee0:	cb 01       	movw	r24, r22
     ee2:	25 e9       	ldi	r18, 0x95	; 149
     ee4:	31 e0       	ldi	r19, 0x01	; 1
     ee6:	b9 01       	movw	r22, r18
     ee8:	4a e0       	ldi	r20, 0x0A	; 10
     eea:	50 e0       	ldi	r21, 0x00	; 0
     eec:	0e 94 17 11 	call	0x222e	; 0x222e <itoa>
			Lcd_vidRowColumn(0, 6);
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	66 e0       	ldi	r22, 0x06	; 6
     ef4:	0e 94 18 0b 	call	0x1630	; 0x1630 <Lcd_vidRowColumn>
			Lcd_vidDisplyStr(frequency);
     ef8:	8e e7       	ldi	r24, 0x7E	; 126
     efa:	91 e0       	ldi	r25, 0x01	; 1
     efc:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
			Lcd_vidDisplyStr(" Hz");
     f00:	8c e6       	ldi	r24, 0x6C	; 108
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
			//Lcd_Cmd(_LCD_CURSOR_SECOND_ROW); //moves the cursor to the second row
			Lcd_vidRowColumn(1, 6);
     f08:	81 e0       	ldi	r24, 0x01	; 1
     f0a:	66 e0       	ldi	r22, 0x06	; 6
     f0c:	0e 94 18 0b 	call	0x1630	; 0x1630 <Lcd_vidRowColumn>
			Lcd_vidDisplyStr(duty);
     f10:	85 e9       	ldi	r24, 0x95	; 149
     f12:	91 e0       	ldi	r25, 0x01	; 1
     f14:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
			Lcd_vidDisplyStr(" %");
     f18:	80 e7       	ldi	r24, 0x70	; 112
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
     f20:	ab cf       	rjmp	.-170    	; 0xe78 <main+0x4a>

00000f22 <Lcd_vidinit>:
#include "util/delay.h"
#include <stdio.h>


void Lcd_vidinit(void)
{
     f22:	df 93       	push	r29
     f24:	cf 93       	push	r28
     f26:	cd b7       	in	r28, 0x3d	; 61
     f28:	de b7       	in	r29, 0x3e	; 62
     f2a:	e4 97       	sbiw	r28, 0x34	; 52
     f2c:	0f b6       	in	r0, 0x3f	; 63
     f2e:	f8 94       	cli
     f30:	de bf       	out	0x3e, r29	; 62
     f32:	0f be       	out	0x3f, r0	; 63
     f34:	cd bf       	out	0x3d, r28	; 61
	/*	configure control pins as output	*/
	Dio_voidconfigChanel(DIO_PORTB, DIO_PIN1, DIO_OUTPUT);
     f36:	81 e0       	ldi	r24, 0x01	; 1
     f38:	61 e0       	ldi	r22, 0x01	; 1
     f3a:	41 e0       	ldi	r20, 0x01	; 1
     f3c:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>
	Dio_voidconfigChanel(DIO_PORTB, DIO_PIN2, DIO_OUTPUT);
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	62 e0       	ldi	r22, 0x02	; 2
     f44:	41 e0       	ldi	r20, 0x01	; 1
     f46:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>
	Dio_voidconfigChanel(DIO_PORTB, DIO_PIN3, DIO_OUTPUT);
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	63 e0       	ldi	r22, 0x03	; 3
     f4e:	41 e0       	ldi	r20, 0x01	; 1
     f50:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>

	/*	configure data pins as output	*/
	Dio_voidconfigChanel(DIO_PORTA, DIO_PIN4, DIO_OUTPUT);
     f54:	80 e0       	ldi	r24, 0x00	; 0
     f56:	64 e0       	ldi	r22, 0x04	; 4
     f58:	41 e0       	ldi	r20, 0x01	; 1
     f5a:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>
	Dio_voidconfigChanel(DIO_PORTA, DIO_PIN5, DIO_OUTPUT);
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	65 e0       	ldi	r22, 0x05	; 5
     f62:	41 e0       	ldi	r20, 0x01	; 1
     f64:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>
	Dio_voidconfigChanel(DIO_PORTA, DIO_PIN6, DIO_OUTPUT);
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	66 e0       	ldi	r22, 0x06	; 6
     f6c:	41 e0       	ldi	r20, 0x01	; 1
     f6e:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>
	Dio_voidconfigChanel(DIO_PORTA, DIO_PIN7, DIO_OUTPUT);
     f72:	80 e0       	ldi	r24, 0x00	; 0
     f74:	67 e0       	ldi	r22, 0x07	; 7
     f76:	41 e0       	ldi	r20, 0x01	; 1
     f78:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <Dio_voidconfigChanel>

	Dio_voidwriteChanel(DIO_PORTB, DIO_PIN2, DIO_LOW);
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	62 e0       	ldi	r22, 0x02	; 2
     f80:	40 e0       	ldi	r20, 0x00	; 0
     f82:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <Dio_voidwriteChanel>
     f86:	80 e0       	ldi	r24, 0x00	; 0
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	a0 e7       	ldi	r26, 0x70	; 112
     f8c:	b1 e4       	ldi	r27, 0x41	; 65
     f8e:	89 ab       	std	Y+49, r24	; 0x31
     f90:	9a ab       	std	Y+50, r25	; 0x32
     f92:	ab ab       	std	Y+51, r26	; 0x33
     f94:	bc ab       	std	Y+52, r27	; 0x34
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f96:	69 a9       	ldd	r22, Y+49	; 0x31
     f98:	7a a9       	ldd	r23, Y+50	; 0x32
     f9a:	8b a9       	ldd	r24, Y+51	; 0x33
     f9c:	9c a9       	ldd	r25, Y+52	; 0x34
     f9e:	20 e0       	ldi	r18, 0x00	; 0
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	4a e7       	ldi	r20, 0x7A	; 122
     fa4:	55 e4       	ldi	r21, 0x45	; 69
     fa6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     faa:	dc 01       	movw	r26, r24
     fac:	cb 01       	movw	r24, r22
     fae:	8d a7       	std	Y+45, r24	; 0x2d
     fb0:	9e a7       	std	Y+46, r25	; 0x2e
     fb2:	af a7       	std	Y+47, r26	; 0x2f
     fb4:	b8 ab       	std	Y+48, r27	; 0x30
	if (__tmp < 1.0)
     fb6:	6d a5       	ldd	r22, Y+45	; 0x2d
     fb8:	7e a5       	ldd	r23, Y+46	; 0x2e
     fba:	8f a5       	ldd	r24, Y+47	; 0x2f
     fbc:	98 a9       	ldd	r25, Y+48	; 0x30
     fbe:	20 e0       	ldi	r18, 0x00	; 0
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	40 e8       	ldi	r20, 0x80	; 128
     fc4:	5f e3       	ldi	r21, 0x3F	; 63
     fc6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     fca:	88 23       	and	r24, r24
     fcc:	2c f4       	brge	.+10     	; 0xfd8 <Lcd_vidinit+0xb6>
		__ticks = 1;
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	9c a7       	std	Y+44, r25	; 0x2c
     fd4:	8b a7       	std	Y+43, r24	; 0x2b
     fd6:	3f c0       	rjmp	.+126    	; 0x1056 <Lcd_vidinit+0x134>
	else if (__tmp > 65535)
     fd8:	6d a5       	ldd	r22, Y+45	; 0x2d
     fda:	7e a5       	ldd	r23, Y+46	; 0x2e
     fdc:	8f a5       	ldd	r24, Y+47	; 0x2f
     fde:	98 a9       	ldd	r25, Y+48	; 0x30
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	3f ef       	ldi	r19, 0xFF	; 255
     fe4:	4f e7       	ldi	r20, 0x7F	; 127
     fe6:	57 e4       	ldi	r21, 0x47	; 71
     fe8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     fec:	18 16       	cp	r1, r24
     fee:	4c f5       	brge	.+82     	; 0x1042 <Lcd_vidinit+0x120>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ff0:	69 a9       	ldd	r22, Y+49	; 0x31
     ff2:	7a a9       	ldd	r23, Y+50	; 0x32
     ff4:	8b a9       	ldd	r24, Y+51	; 0x33
     ff6:	9c a9       	ldd	r25, Y+52	; 0x34
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	40 e2       	ldi	r20, 0x20	; 32
     ffe:	51 e4       	ldi	r21, 0x41	; 65
    1000:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1004:	dc 01       	movw	r26, r24
    1006:	cb 01       	movw	r24, r22
    1008:	bc 01       	movw	r22, r24
    100a:	cd 01       	movw	r24, r26
    100c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1010:	dc 01       	movw	r26, r24
    1012:	cb 01       	movw	r24, r22
    1014:	9c a7       	std	Y+44, r25	; 0x2c
    1016:	8b a7       	std	Y+43, r24	; 0x2b
    1018:	0f c0       	rjmp	.+30     	; 0x1038 <Lcd_vidinit+0x116>
    101a:	80 e9       	ldi	r24, 0x90	; 144
    101c:	91 e0       	ldi	r25, 0x01	; 1
    101e:	9a a7       	std	Y+42, r25	; 0x2a
    1020:	89 a7       	std	Y+41, r24	; 0x29
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1022:	89 a5       	ldd	r24, Y+41	; 0x29
    1024:	9a a5       	ldd	r25, Y+42	; 0x2a
    1026:	01 97       	sbiw	r24, 0x01	; 1
    1028:	f1 f7       	brne	.-4      	; 0x1026 <Lcd_vidinit+0x104>
    102a:	9a a7       	std	Y+42, r25	; 0x2a
    102c:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    102e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1030:	9c a5       	ldd	r25, Y+44	; 0x2c
    1032:	01 97       	sbiw	r24, 0x01	; 1
    1034:	9c a7       	std	Y+44, r25	; 0x2c
    1036:	8b a7       	std	Y+43, r24	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1038:	8b a5       	ldd	r24, Y+43	; 0x2b
    103a:	9c a5       	ldd	r25, Y+44	; 0x2c
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	69 f7       	brne	.-38     	; 0x101a <Lcd_vidinit+0xf8>
    1040:	14 c0       	rjmp	.+40     	; 0x106a <Lcd_vidinit+0x148>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1042:	6d a5       	ldd	r22, Y+45	; 0x2d
    1044:	7e a5       	ldd	r23, Y+46	; 0x2e
    1046:	8f a5       	ldd	r24, Y+47	; 0x2f
    1048:	98 a9       	ldd	r25, Y+48	; 0x30
    104a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    104e:	dc 01       	movw	r26, r24
    1050:	cb 01       	movw	r24, r22
    1052:	9c a7       	std	Y+44, r25	; 0x2c
    1054:	8b a7       	std	Y+43, r24	; 0x2b
    1056:	8b a5       	ldd	r24, Y+43	; 0x2b
    1058:	9c a5       	ldd	r25, Y+44	; 0x2c
    105a:	98 a7       	std	Y+40, r25	; 0x28
    105c:	8f a3       	std	Y+39, r24	; 0x27
    105e:	8f a1       	ldd	r24, Y+39	; 0x27
    1060:	98 a5       	ldd	r25, Y+40	; 0x28
    1062:	01 97       	sbiw	r24, 0x01	; 1
    1064:	f1 f7       	brne	.-4      	; 0x1062 <Lcd_vidinit+0x140>
    1066:	98 a7       	std	Y+40, r25	; 0x28
    1068:	8f a3       	std	Y+39, r24	; 0x27

	_delay_ms(15);

	Lcd_vidCmd(0x03);
    106a:	83 e0       	ldi	r24, 0x03	; 3
    106c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	a0 ea       	ldi	r26, 0xA0	; 160
    1076:	b0 e4       	ldi	r27, 0x40	; 64
    1078:	8b a3       	std	Y+35, r24	; 0x23
    107a:	9c a3       	std	Y+36, r25	; 0x24
    107c:	ad a3       	std	Y+37, r26	; 0x25
    107e:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1080:	6b a1       	ldd	r22, Y+35	; 0x23
    1082:	7c a1       	ldd	r23, Y+36	; 0x24
    1084:	8d a1       	ldd	r24, Y+37	; 0x25
    1086:	9e a1       	ldd	r25, Y+38	; 0x26
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	4a e7       	ldi	r20, 0x7A	; 122
    108e:	55 e4       	ldi	r21, 0x45	; 69
    1090:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1094:	dc 01       	movw	r26, r24
    1096:	cb 01       	movw	r24, r22
    1098:	8f 8f       	std	Y+31, r24	; 0x1f
    109a:	98 a3       	std	Y+32, r25	; 0x20
    109c:	a9 a3       	std	Y+33, r26	; 0x21
    109e:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    10a0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    10a2:	78 a1       	ldd	r23, Y+32	; 0x20
    10a4:	89 a1       	ldd	r24, Y+33	; 0x21
    10a6:	9a a1       	ldd	r25, Y+34	; 0x22
    10a8:	20 e0       	ldi	r18, 0x00	; 0
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	40 e8       	ldi	r20, 0x80	; 128
    10ae:	5f e3       	ldi	r21, 0x3F	; 63
    10b0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    10b4:	88 23       	and	r24, r24
    10b6:	2c f4       	brge	.+10     	; 0x10c2 <Lcd_vidinit+0x1a0>
		__ticks = 1;
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	9e 8f       	std	Y+30, r25	; 0x1e
    10be:	8d 8f       	std	Y+29, r24	; 0x1d
    10c0:	3f c0       	rjmp	.+126    	; 0x1140 <Lcd_vidinit+0x21e>
	else if (__tmp > 65535)
    10c2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    10c4:	78 a1       	ldd	r23, Y+32	; 0x20
    10c6:	89 a1       	ldd	r24, Y+33	; 0x21
    10c8:	9a a1       	ldd	r25, Y+34	; 0x22
    10ca:	20 e0       	ldi	r18, 0x00	; 0
    10cc:	3f ef       	ldi	r19, 0xFF	; 255
    10ce:	4f e7       	ldi	r20, 0x7F	; 127
    10d0:	57 e4       	ldi	r21, 0x47	; 71
    10d2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    10d6:	18 16       	cp	r1, r24
    10d8:	4c f5       	brge	.+82     	; 0x112c <Lcd_vidinit+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10da:	6b a1       	ldd	r22, Y+35	; 0x23
    10dc:	7c a1       	ldd	r23, Y+36	; 0x24
    10de:	8d a1       	ldd	r24, Y+37	; 0x25
    10e0:	9e a1       	ldd	r25, Y+38	; 0x26
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	40 e2       	ldi	r20, 0x20	; 32
    10e8:	51 e4       	ldi	r21, 0x41	; 65
    10ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10ee:	dc 01       	movw	r26, r24
    10f0:	cb 01       	movw	r24, r22
    10f2:	bc 01       	movw	r22, r24
    10f4:	cd 01       	movw	r24, r26
    10f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10fa:	dc 01       	movw	r26, r24
    10fc:	cb 01       	movw	r24, r22
    10fe:	9e 8f       	std	Y+30, r25	; 0x1e
    1100:	8d 8f       	std	Y+29, r24	; 0x1d
    1102:	0f c0       	rjmp	.+30     	; 0x1122 <Lcd_vidinit+0x200>
    1104:	80 e9       	ldi	r24, 0x90	; 144
    1106:	91 e0       	ldi	r25, 0x01	; 1
    1108:	9c 8f       	std	Y+28, r25	; 0x1c
    110a:	8b 8f       	std	Y+27, r24	; 0x1b
    110c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    110e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1110:	01 97       	sbiw	r24, 0x01	; 1
    1112:	f1 f7       	brne	.-4      	; 0x1110 <Lcd_vidinit+0x1ee>
    1114:	9c 8f       	std	Y+28, r25	; 0x1c
    1116:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1118:	8d 8d       	ldd	r24, Y+29	; 0x1d
    111a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    111c:	01 97       	sbiw	r24, 0x01	; 1
    111e:	9e 8f       	std	Y+30, r25	; 0x1e
    1120:	8d 8f       	std	Y+29, r24	; 0x1d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1122:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1124:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1126:	00 97       	sbiw	r24, 0x00	; 0
    1128:	69 f7       	brne	.-38     	; 0x1104 <Lcd_vidinit+0x1e2>
    112a:	14 c0       	rjmp	.+40     	; 0x1154 <Lcd_vidinit+0x232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    112c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    112e:	78 a1       	ldd	r23, Y+32	; 0x20
    1130:	89 a1       	ldd	r24, Y+33	; 0x21
    1132:	9a a1       	ldd	r25, Y+34	; 0x22
    1134:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1138:	dc 01       	movw	r26, r24
    113a:	cb 01       	movw	r24, r22
    113c:	9e 8f       	std	Y+30, r25	; 0x1e
    113e:	8d 8f       	std	Y+29, r24	; 0x1d
    1140:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1142:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1144:	9a 8f       	std	Y+26, r25	; 0x1a
    1146:	89 8f       	std	Y+25, r24	; 0x19
    1148:	89 8d       	ldd	r24, Y+25	; 0x19
    114a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    114c:	01 97       	sbiw	r24, 0x01	; 1
    114e:	f1 f7       	brne	.-4      	; 0x114c <Lcd_vidinit+0x22a>
    1150:	9a 8f       	std	Y+26, r25	; 0x1a
    1152:	89 8f       	std	Y+25, r24	; 0x19
	_delay_ms(5);
	Lcd_vidCmd(0x03);
    1154:	83 e0       	ldi	r24, 0x03	; 3
    1156:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
    115a:	80 e0       	ldi	r24, 0x00	; 0
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	a8 ec       	ldi	r26, 0xC8	; 200
    1160:	b2 e4       	ldi	r27, 0x42	; 66
    1162:	8d 8b       	std	Y+21, r24	; 0x15
    1164:	9e 8b       	std	Y+22, r25	; 0x16
    1166:	af 8b       	std	Y+23, r26	; 0x17
    1168:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    116a:	6d 89       	ldd	r22, Y+21	; 0x15
    116c:	7e 89       	ldd	r23, Y+22	; 0x16
    116e:	8f 89       	ldd	r24, Y+23	; 0x17
    1170:	98 8d       	ldd	r25, Y+24	; 0x18
    1172:	2b ea       	ldi	r18, 0xAB	; 171
    1174:	3a ea       	ldi	r19, 0xAA	; 170
    1176:	4a ea       	ldi	r20, 0xAA	; 170
    1178:	50 e4       	ldi	r21, 0x40	; 64
    117a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    117e:	dc 01       	movw	r26, r24
    1180:	cb 01       	movw	r24, r22
    1182:	89 8b       	std	Y+17, r24	; 0x11
    1184:	9a 8b       	std	Y+18, r25	; 0x12
    1186:	ab 8b       	std	Y+19, r26	; 0x13
    1188:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    118a:	69 89       	ldd	r22, Y+17	; 0x11
    118c:	7a 89       	ldd	r23, Y+18	; 0x12
    118e:	8b 89       	ldd	r24, Y+19	; 0x13
    1190:	9c 89       	ldd	r25, Y+20	; 0x14
    1192:	20 e0       	ldi	r18, 0x00	; 0
    1194:	30 e0       	ldi	r19, 0x00	; 0
    1196:	40 e8       	ldi	r20, 0x80	; 128
    1198:	5f e3       	ldi	r21, 0x3F	; 63
    119a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    119e:	88 23       	and	r24, r24
    11a0:	1c f4       	brge	.+6      	; 0x11a8 <Lcd_vidinit+0x286>
		__ticks = 1;
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	88 8b       	std	Y+16, r24	; 0x10
    11a6:	91 c0       	rjmp	.+290    	; 0x12ca <Lcd_vidinit+0x3a8>
	else if (__tmp > 255)
    11a8:	69 89       	ldd	r22, Y+17	; 0x11
    11aa:	7a 89       	ldd	r23, Y+18	; 0x12
    11ac:	8b 89       	ldd	r24, Y+19	; 0x13
    11ae:	9c 89       	ldd	r25, Y+20	; 0x14
    11b0:	20 e0       	ldi	r18, 0x00	; 0
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	4f e7       	ldi	r20, 0x7F	; 127
    11b6:	53 e4       	ldi	r21, 0x43	; 67
    11b8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    11bc:	18 16       	cp	r1, r24
    11be:	0c f0       	brlt	.+2      	; 0x11c2 <Lcd_vidinit+0x2a0>
    11c0:	7b c0       	rjmp	.+246    	; 0x12b8 <Lcd_vidinit+0x396>
	{
		_delay_ms(__us / 1000.0);
    11c2:	6d 89       	ldd	r22, Y+21	; 0x15
    11c4:	7e 89       	ldd	r23, Y+22	; 0x16
    11c6:	8f 89       	ldd	r24, Y+23	; 0x17
    11c8:	98 8d       	ldd	r25, Y+24	; 0x18
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	4a e7       	ldi	r20, 0x7A	; 122
    11d0:	54 e4       	ldi	r21, 0x44	; 68
    11d2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	8c 87       	std	Y+12, r24	; 0x0c
    11dc:	9d 87       	std	Y+13, r25	; 0x0d
    11de:	ae 87       	std	Y+14, r26	; 0x0e
    11e0:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11e2:	6c 85       	ldd	r22, Y+12	; 0x0c
    11e4:	7d 85       	ldd	r23, Y+13	; 0x0d
    11e6:	8e 85       	ldd	r24, Y+14	; 0x0e
    11e8:	9f 85       	ldd	r25, Y+15	; 0x0f
    11ea:	20 e0       	ldi	r18, 0x00	; 0
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	4a e7       	ldi	r20, 0x7A	; 122
    11f0:	55 e4       	ldi	r21, 0x45	; 69
    11f2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11f6:	dc 01       	movw	r26, r24
    11f8:	cb 01       	movw	r24, r22
    11fa:	88 87       	std	Y+8, r24	; 0x08
    11fc:	99 87       	std	Y+9, r25	; 0x09
    11fe:	aa 87       	std	Y+10, r26	; 0x0a
    1200:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1202:	68 85       	ldd	r22, Y+8	; 0x08
    1204:	79 85       	ldd	r23, Y+9	; 0x09
    1206:	8a 85       	ldd	r24, Y+10	; 0x0a
    1208:	9b 85       	ldd	r25, Y+11	; 0x0b
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	40 e8       	ldi	r20, 0x80	; 128
    1210:	5f e3       	ldi	r21, 0x3F	; 63
    1212:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1216:	88 23       	and	r24, r24
    1218:	2c f4       	brge	.+10     	; 0x1224 <Lcd_vidinit+0x302>
		__ticks = 1;
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	9f 83       	std	Y+7, r25	; 0x07
    1220:	8e 83       	std	Y+6, r24	; 0x06
    1222:	3f c0       	rjmp	.+126    	; 0x12a2 <Lcd_vidinit+0x380>
	else if (__tmp > 65535)
    1224:	68 85       	ldd	r22, Y+8	; 0x08
    1226:	79 85       	ldd	r23, Y+9	; 0x09
    1228:	8a 85       	ldd	r24, Y+10	; 0x0a
    122a:	9b 85       	ldd	r25, Y+11	; 0x0b
    122c:	20 e0       	ldi	r18, 0x00	; 0
    122e:	3f ef       	ldi	r19, 0xFF	; 255
    1230:	4f e7       	ldi	r20, 0x7F	; 127
    1232:	57 e4       	ldi	r21, 0x47	; 71
    1234:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1238:	18 16       	cp	r1, r24
    123a:	4c f5       	brge	.+82     	; 0x128e <Lcd_vidinit+0x36c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    123c:	6c 85       	ldd	r22, Y+12	; 0x0c
    123e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1240:	8e 85       	ldd	r24, Y+14	; 0x0e
    1242:	9f 85       	ldd	r25, Y+15	; 0x0f
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	40 e2       	ldi	r20, 0x20	; 32
    124a:	51 e4       	ldi	r21, 0x41	; 65
    124c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1250:	dc 01       	movw	r26, r24
    1252:	cb 01       	movw	r24, r22
    1254:	bc 01       	movw	r22, r24
    1256:	cd 01       	movw	r24, r26
    1258:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    125c:	dc 01       	movw	r26, r24
    125e:	cb 01       	movw	r24, r22
    1260:	9f 83       	std	Y+7, r25	; 0x07
    1262:	8e 83       	std	Y+6, r24	; 0x06
    1264:	0f c0       	rjmp	.+30     	; 0x1284 <Lcd_vidinit+0x362>
    1266:	80 e9       	ldi	r24, 0x90	; 144
    1268:	91 e0       	ldi	r25, 0x01	; 1
    126a:	9d 83       	std	Y+5, r25	; 0x05
    126c:	8c 83       	std	Y+4, r24	; 0x04
    126e:	8c 81       	ldd	r24, Y+4	; 0x04
    1270:	9d 81       	ldd	r25, Y+5	; 0x05
    1272:	01 97       	sbiw	r24, 0x01	; 1
    1274:	f1 f7       	brne	.-4      	; 0x1272 <Lcd_vidinit+0x350>
    1276:	9d 83       	std	Y+5, r25	; 0x05
    1278:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    127a:	8e 81       	ldd	r24, Y+6	; 0x06
    127c:	9f 81       	ldd	r25, Y+7	; 0x07
    127e:	01 97       	sbiw	r24, 0x01	; 1
    1280:	9f 83       	std	Y+7, r25	; 0x07
    1282:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1284:	8e 81       	ldd	r24, Y+6	; 0x06
    1286:	9f 81       	ldd	r25, Y+7	; 0x07
    1288:	00 97       	sbiw	r24, 0x00	; 0
    128a:	69 f7       	brne	.-38     	; 0x1266 <Lcd_vidinit+0x344>
    128c:	24 c0       	rjmp	.+72     	; 0x12d6 <Lcd_vidinit+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    128e:	68 85       	ldd	r22, Y+8	; 0x08
    1290:	79 85       	ldd	r23, Y+9	; 0x09
    1292:	8a 85       	ldd	r24, Y+10	; 0x0a
    1294:	9b 85       	ldd	r25, Y+11	; 0x0b
    1296:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    129a:	dc 01       	movw	r26, r24
    129c:	cb 01       	movw	r24, r22
    129e:	9f 83       	std	Y+7, r25	; 0x07
    12a0:	8e 83       	std	Y+6, r24	; 0x06
    12a2:	8e 81       	ldd	r24, Y+6	; 0x06
    12a4:	9f 81       	ldd	r25, Y+7	; 0x07
    12a6:	9b 83       	std	Y+3, r25	; 0x03
    12a8:	8a 83       	std	Y+2, r24	; 0x02
    12aa:	8a 81       	ldd	r24, Y+2	; 0x02
    12ac:	9b 81       	ldd	r25, Y+3	; 0x03
    12ae:	01 97       	sbiw	r24, 0x01	; 1
    12b0:	f1 f7       	brne	.-4      	; 0x12ae <Lcd_vidinit+0x38c>
    12b2:	9b 83       	std	Y+3, r25	; 0x03
    12b4:	8a 83       	std	Y+2, r24	; 0x02
    12b6:	0f c0       	rjmp	.+30     	; 0x12d6 <Lcd_vidinit+0x3b4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    12b8:	69 89       	ldd	r22, Y+17	; 0x11
    12ba:	7a 89       	ldd	r23, Y+18	; 0x12
    12bc:	8b 89       	ldd	r24, Y+19	; 0x13
    12be:	9c 89       	ldd	r25, Y+20	; 0x14
    12c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12c4:	dc 01       	movw	r26, r24
    12c6:	cb 01       	movw	r24, r22
    12c8:	88 8b       	std	Y+16, r24	; 0x10
    12ca:	88 89       	ldd	r24, Y+16	; 0x10
    12cc:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    12ce:	89 81       	ldd	r24, Y+1	; 0x01
    12d0:	8a 95       	dec	r24
    12d2:	f1 f7       	brne	.-4      	; 0x12d0 <Lcd_vidinit+0x3ae>
    12d4:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(100);
	Lcd_vidCmd(0x03);
    12d6:	83 e0       	ldi	r24, 0x03	; 3
    12d8:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
	Lcd_vidCmd(0x02);
    12dc:	82 e0       	ldi	r24, 0x02	; 2
    12de:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
	Lcd_vidCmd(_LCD_4BIT_MODE);
    12e2:	88 e2       	ldi	r24, 0x28	; 40
    12e4:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
}
    12e8:	e4 96       	adiw	r28, 0x34	; 52
    12ea:	0f b6       	in	r0, 0x3f	; 63
    12ec:	f8 94       	cli
    12ee:	de bf       	out	0x3e, r29	; 62
    12f0:	0f be       	out	0x3f, r0	; 63
    12f2:	cd bf       	out	0x3d, r28	; 61
    12f4:	cf 91       	pop	r28
    12f6:	df 91       	pop	r29
    12f8:	08 95       	ret

000012fa <Lcd_videnablePulse>:

static void Lcd_videnablePulse(void)
{
    12fa:	df 93       	push	r29
    12fc:	cf 93       	push	r28
    12fe:	cd b7       	in	r28, 0x3d	; 61
    1300:	de b7       	in	r29, 0x3e	; 62
    1302:	a6 97       	sbiw	r28, 0x26	; 38
    1304:	0f b6       	in	r0, 0x3f	; 63
    1306:	f8 94       	cli
    1308:	de bf       	out	0x3e, r29	; 62
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	cd bf       	out	0x3d, r28	; 61
	//send Enable pulse
	Dio_voidwriteChanel(DIO_PORTB, DIO_PIN3, DIO_HIGH);
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	63 e0       	ldi	r22, 0x03	; 3
    1312:	41 e0       	ldi	r20, 0x01	; 1
    1314:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <Dio_voidwriteChanel>
    1318:	80 e0       	ldi	r24, 0x00	; 0
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	a0 e8       	ldi	r26, 0x80	; 128
    131e:	bf e3       	ldi	r27, 0x3F	; 63
    1320:	8b a3       	std	Y+35, r24	; 0x23
    1322:	9c a3       	std	Y+36, r25	; 0x24
    1324:	ad a3       	std	Y+37, r26	; 0x25
    1326:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1328:	6b a1       	ldd	r22, Y+35	; 0x23
    132a:	7c a1       	ldd	r23, Y+36	; 0x24
    132c:	8d a1       	ldd	r24, Y+37	; 0x25
    132e:	9e a1       	ldd	r25, Y+38	; 0x26
    1330:	2b ea       	ldi	r18, 0xAB	; 171
    1332:	3a ea       	ldi	r19, 0xAA	; 170
    1334:	4a ea       	ldi	r20, 0xAA	; 170
    1336:	50 e4       	ldi	r21, 0x40	; 64
    1338:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    133c:	dc 01       	movw	r26, r24
    133e:	cb 01       	movw	r24, r22
    1340:	8f 8f       	std	Y+31, r24	; 0x1f
    1342:	98 a3       	std	Y+32, r25	; 0x20
    1344:	a9 a3       	std	Y+33, r26	; 0x21
    1346:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    1348:	6f 8d       	ldd	r22, Y+31	; 0x1f
    134a:	78 a1       	ldd	r23, Y+32	; 0x20
    134c:	89 a1       	ldd	r24, Y+33	; 0x21
    134e:	9a a1       	ldd	r25, Y+34	; 0x22
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	40 e8       	ldi	r20, 0x80	; 128
    1356:	5f e3       	ldi	r21, 0x3F	; 63
    1358:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    135c:	88 23       	and	r24, r24
    135e:	1c f4       	brge	.+6      	; 0x1366 <Lcd_videnablePulse+0x6c>
		__ticks = 1;
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	8e 8f       	std	Y+30, r24	; 0x1e
    1364:	91 c0       	rjmp	.+290    	; 0x1488 <Lcd_videnablePulse+0x18e>
	else if (__tmp > 255)
    1366:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1368:	78 a1       	ldd	r23, Y+32	; 0x20
    136a:	89 a1       	ldd	r24, Y+33	; 0x21
    136c:	9a a1       	ldd	r25, Y+34	; 0x22
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	4f e7       	ldi	r20, 0x7F	; 127
    1374:	53 e4       	ldi	r21, 0x43	; 67
    1376:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    137a:	18 16       	cp	r1, r24
    137c:	0c f0       	brlt	.+2      	; 0x1380 <Lcd_videnablePulse+0x86>
    137e:	7b c0       	rjmp	.+246    	; 0x1476 <Lcd_videnablePulse+0x17c>
	{
		_delay_ms(__us / 1000.0);
    1380:	6b a1       	ldd	r22, Y+35	; 0x23
    1382:	7c a1       	ldd	r23, Y+36	; 0x24
    1384:	8d a1       	ldd	r24, Y+37	; 0x25
    1386:	9e a1       	ldd	r25, Y+38	; 0x26
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	4a e7       	ldi	r20, 0x7A	; 122
    138e:	54 e4       	ldi	r21, 0x44	; 68
    1390:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1394:	dc 01       	movw	r26, r24
    1396:	cb 01       	movw	r24, r22
    1398:	8a 8f       	std	Y+26, r24	; 0x1a
    139a:	9b 8f       	std	Y+27, r25	; 0x1b
    139c:	ac 8f       	std	Y+28, r26	; 0x1c
    139e:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13a0:	6a 8d       	ldd	r22, Y+26	; 0x1a
    13a2:	7b 8d       	ldd	r23, Y+27	; 0x1b
    13a4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    13a6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    13a8:	20 e0       	ldi	r18, 0x00	; 0
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	4a e7       	ldi	r20, 0x7A	; 122
    13ae:	55 e4       	ldi	r21, 0x45	; 69
    13b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13b4:	dc 01       	movw	r26, r24
    13b6:	cb 01       	movw	r24, r22
    13b8:	8e 8b       	std	Y+22, r24	; 0x16
    13ba:	9f 8b       	std	Y+23, r25	; 0x17
    13bc:	a8 8f       	std	Y+24, r26	; 0x18
    13be:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    13c0:	6e 89       	ldd	r22, Y+22	; 0x16
    13c2:	7f 89       	ldd	r23, Y+23	; 0x17
    13c4:	88 8d       	ldd	r24, Y+24	; 0x18
    13c6:	99 8d       	ldd	r25, Y+25	; 0x19
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	40 e8       	ldi	r20, 0x80	; 128
    13ce:	5f e3       	ldi	r21, 0x3F	; 63
    13d0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    13d4:	88 23       	and	r24, r24
    13d6:	2c f4       	brge	.+10     	; 0x13e2 <Lcd_videnablePulse+0xe8>
		__ticks = 1;
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	9d 8b       	std	Y+21, r25	; 0x15
    13de:	8c 8b       	std	Y+20, r24	; 0x14
    13e0:	3f c0       	rjmp	.+126    	; 0x1460 <Lcd_videnablePulse+0x166>
	else if (__tmp > 65535)
    13e2:	6e 89       	ldd	r22, Y+22	; 0x16
    13e4:	7f 89       	ldd	r23, Y+23	; 0x17
    13e6:	88 8d       	ldd	r24, Y+24	; 0x18
    13e8:	99 8d       	ldd	r25, Y+25	; 0x19
    13ea:	20 e0       	ldi	r18, 0x00	; 0
    13ec:	3f ef       	ldi	r19, 0xFF	; 255
    13ee:	4f e7       	ldi	r20, 0x7F	; 127
    13f0:	57 e4       	ldi	r21, 0x47	; 71
    13f2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    13f6:	18 16       	cp	r1, r24
    13f8:	4c f5       	brge	.+82     	; 0x144c <Lcd_videnablePulse+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13fa:	6a 8d       	ldd	r22, Y+26	; 0x1a
    13fc:	7b 8d       	ldd	r23, Y+27	; 0x1b
    13fe:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1400:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1402:	20 e0       	ldi	r18, 0x00	; 0
    1404:	30 e0       	ldi	r19, 0x00	; 0
    1406:	40 e2       	ldi	r20, 0x20	; 32
    1408:	51 e4       	ldi	r21, 0x41	; 65
    140a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    140e:	dc 01       	movw	r26, r24
    1410:	cb 01       	movw	r24, r22
    1412:	bc 01       	movw	r22, r24
    1414:	cd 01       	movw	r24, r26
    1416:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    141a:	dc 01       	movw	r26, r24
    141c:	cb 01       	movw	r24, r22
    141e:	9d 8b       	std	Y+21, r25	; 0x15
    1420:	8c 8b       	std	Y+20, r24	; 0x14
    1422:	0f c0       	rjmp	.+30     	; 0x1442 <Lcd_videnablePulse+0x148>
    1424:	80 e9       	ldi	r24, 0x90	; 144
    1426:	91 e0       	ldi	r25, 0x01	; 1
    1428:	9b 8b       	std	Y+19, r25	; 0x13
    142a:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    142c:	8a 89       	ldd	r24, Y+18	; 0x12
    142e:	9b 89       	ldd	r25, Y+19	; 0x13
    1430:	01 97       	sbiw	r24, 0x01	; 1
    1432:	f1 f7       	brne	.-4      	; 0x1430 <Lcd_videnablePulse+0x136>
    1434:	9b 8b       	std	Y+19, r25	; 0x13
    1436:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1438:	8c 89       	ldd	r24, Y+20	; 0x14
    143a:	9d 89       	ldd	r25, Y+21	; 0x15
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	9d 8b       	std	Y+21, r25	; 0x15
    1440:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1442:	8c 89       	ldd	r24, Y+20	; 0x14
    1444:	9d 89       	ldd	r25, Y+21	; 0x15
    1446:	00 97       	sbiw	r24, 0x00	; 0
    1448:	69 f7       	brne	.-38     	; 0x1424 <Lcd_videnablePulse+0x12a>
    144a:	24 c0       	rjmp	.+72     	; 0x1494 <Lcd_videnablePulse+0x19a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    144c:	6e 89       	ldd	r22, Y+22	; 0x16
    144e:	7f 89       	ldd	r23, Y+23	; 0x17
    1450:	88 8d       	ldd	r24, Y+24	; 0x18
    1452:	99 8d       	ldd	r25, Y+25	; 0x19
    1454:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1458:	dc 01       	movw	r26, r24
    145a:	cb 01       	movw	r24, r22
    145c:	9d 8b       	std	Y+21, r25	; 0x15
    145e:	8c 8b       	std	Y+20, r24	; 0x14
    1460:	8c 89       	ldd	r24, Y+20	; 0x14
    1462:	9d 89       	ldd	r25, Y+21	; 0x15
    1464:	99 8b       	std	Y+17, r25	; 0x11
    1466:	88 8b       	std	Y+16, r24	; 0x10
    1468:	88 89       	ldd	r24, Y+16	; 0x10
    146a:	99 89       	ldd	r25, Y+17	; 0x11
    146c:	01 97       	sbiw	r24, 0x01	; 1
    146e:	f1 f7       	brne	.-4      	; 0x146c <Lcd_videnablePulse+0x172>
    1470:	99 8b       	std	Y+17, r25	; 0x11
    1472:	88 8b       	std	Y+16, r24	; 0x10
    1474:	0f c0       	rjmp	.+30     	; 0x1494 <Lcd_videnablePulse+0x19a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1476:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1478:	78 a1       	ldd	r23, Y+32	; 0x20
    147a:	89 a1       	ldd	r24, Y+33	; 0x21
    147c:	9a a1       	ldd	r25, Y+34	; 0x22
    147e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1482:	dc 01       	movw	r26, r24
    1484:	cb 01       	movw	r24, r22
    1486:	8e 8f       	std	Y+30, r24	; 0x1e
    1488:	8e 8d       	ldd	r24, Y+30	; 0x1e
    148a:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    148c:	8f 85       	ldd	r24, Y+15	; 0x0f
    148e:	8a 95       	dec	r24
    1490:	f1 f7       	brne	.-4      	; 0x148e <Lcd_videnablePulse+0x194>
    1492:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(1);
	Dio_voidwriteChanel(DIO_PORTB, DIO_PIN3, DIO_LOW);
    1494:	81 e0       	ldi	r24, 0x01	; 1
    1496:	63 e0       	ldi	r22, 0x03	; 3
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <Dio_voidwriteChanel>
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	a0 e0       	ldi	r26, 0x00	; 0
    14a4:	b0 e4       	ldi	r27, 0x40	; 64
    14a6:	8b 87       	std	Y+11, r24	; 0x0b
    14a8:	9c 87       	std	Y+12, r25	; 0x0c
    14aa:	ad 87       	std	Y+13, r26	; 0x0d
    14ac:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    14b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    14b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    14b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	4a e7       	ldi	r20, 0x7A	; 122
    14bc:	55 e4       	ldi	r21, 0x45	; 69
    14be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	8f 83       	std	Y+7, r24	; 0x07
    14c8:	98 87       	std	Y+8, r25	; 0x08
    14ca:	a9 87       	std	Y+9, r26	; 0x09
    14cc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    14ce:	6f 81       	ldd	r22, Y+7	; 0x07
    14d0:	78 85       	ldd	r23, Y+8	; 0x08
    14d2:	89 85       	ldd	r24, Y+9	; 0x09
    14d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    14d6:	20 e0       	ldi	r18, 0x00	; 0
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	40 e8       	ldi	r20, 0x80	; 128
    14dc:	5f e3       	ldi	r21, 0x3F	; 63
    14de:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    14e2:	88 23       	and	r24, r24
    14e4:	2c f4       	brge	.+10     	; 0x14f0 <Lcd_videnablePulse+0x1f6>
		__ticks = 1;
    14e6:	81 e0       	ldi	r24, 0x01	; 1
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	9e 83       	std	Y+6, r25	; 0x06
    14ec:	8d 83       	std	Y+5, r24	; 0x05
    14ee:	3f c0       	rjmp	.+126    	; 0x156e <Lcd_videnablePulse+0x274>
	else if (__tmp > 65535)
    14f0:	6f 81       	ldd	r22, Y+7	; 0x07
    14f2:	78 85       	ldd	r23, Y+8	; 0x08
    14f4:	89 85       	ldd	r24, Y+9	; 0x09
    14f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	3f ef       	ldi	r19, 0xFF	; 255
    14fc:	4f e7       	ldi	r20, 0x7F	; 127
    14fe:	57 e4       	ldi	r21, 0x47	; 71
    1500:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1504:	18 16       	cp	r1, r24
    1506:	4c f5       	brge	.+82     	; 0x155a <Lcd_videnablePulse+0x260>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1508:	6b 85       	ldd	r22, Y+11	; 0x0b
    150a:	7c 85       	ldd	r23, Y+12	; 0x0c
    150c:	8d 85       	ldd	r24, Y+13	; 0x0d
    150e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	40 e2       	ldi	r20, 0x20	; 32
    1516:	51 e4       	ldi	r21, 0x41	; 65
    1518:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	bc 01       	movw	r22, r24
    1522:	cd 01       	movw	r24, r26
    1524:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1528:	dc 01       	movw	r26, r24
    152a:	cb 01       	movw	r24, r22
    152c:	9e 83       	std	Y+6, r25	; 0x06
    152e:	8d 83       	std	Y+5, r24	; 0x05
    1530:	0f c0       	rjmp	.+30     	; 0x1550 <Lcd_videnablePulse+0x256>
    1532:	80 e9       	ldi	r24, 0x90	; 144
    1534:	91 e0       	ldi	r25, 0x01	; 1
    1536:	9c 83       	std	Y+4, r25	; 0x04
    1538:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    153a:	8b 81       	ldd	r24, Y+3	; 0x03
    153c:	9c 81       	ldd	r25, Y+4	; 0x04
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	f1 f7       	brne	.-4      	; 0x153e <Lcd_videnablePulse+0x244>
    1542:	9c 83       	std	Y+4, r25	; 0x04
    1544:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1546:	8d 81       	ldd	r24, Y+5	; 0x05
    1548:	9e 81       	ldd	r25, Y+6	; 0x06
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	9e 83       	std	Y+6, r25	; 0x06
    154e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1550:	8d 81       	ldd	r24, Y+5	; 0x05
    1552:	9e 81       	ldd	r25, Y+6	; 0x06
    1554:	00 97       	sbiw	r24, 0x00	; 0
    1556:	69 f7       	brne	.-38     	; 0x1532 <Lcd_videnablePulse+0x238>
    1558:	14 c0       	rjmp	.+40     	; 0x1582 <Lcd_videnablePulse+0x288>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    155a:	6f 81       	ldd	r22, Y+7	; 0x07
    155c:	78 85       	ldd	r23, Y+8	; 0x08
    155e:	89 85       	ldd	r24, Y+9	; 0x09
    1560:	9a 85       	ldd	r25, Y+10	; 0x0a
    1562:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1566:	dc 01       	movw	r26, r24
    1568:	cb 01       	movw	r24, r22
    156a:	9e 83       	std	Y+6, r25	; 0x06
    156c:	8d 83       	std	Y+5, r24	; 0x05
    156e:	8d 81       	ldd	r24, Y+5	; 0x05
    1570:	9e 81       	ldd	r25, Y+6	; 0x06
    1572:	9a 83       	std	Y+2, r25	; 0x02
    1574:	89 83       	std	Y+1, r24	; 0x01
    1576:	89 81       	ldd	r24, Y+1	; 0x01
    1578:	9a 81       	ldd	r25, Y+2	; 0x02
    157a:	01 97       	sbiw	r24, 0x01	; 1
    157c:	f1 f7       	brne	.-4      	; 0x157a <Lcd_videnablePulse+0x280>
    157e:	9a 83       	std	Y+2, r25	; 0x02
    1580:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    1582:	a6 96       	adiw	r28, 0x26	; 38
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
    158e:	cf 91       	pop	r28
    1590:	df 91       	pop	r29
    1592:	08 95       	ret

00001594 <Lcd_vidDisplayChar>:
void Lcd_vidDisplayChar(u8 chr)
{
    1594:	df 93       	push	r29
    1596:	cf 93       	push	r28
    1598:	00 d0       	rcall	.+0      	; 0x159a <Lcd_vidDisplayChar+0x6>
    159a:	0f 92       	push	r0
    159c:	cd b7       	in	r28, 0x3d	; 61
    159e:	de b7       	in	r29, 0x3e	; 62
    15a0:	8b 83       	std	Y+3, r24	; 0x03
	  MSB    LSB
	0b1101  1001
	1101   0000
	1001   0000
*/
	u8 loc_MSB = (chr & ~LCD_MASK);
    15a2:	8b 81       	ldd	r24, Y+3	; 0x03
    15a4:	80 7f       	andi	r24, 0xF0	; 240
    15a6:	8a 83       	std	Y+2, r24	; 0x02
	u8 loc_LSB = (chr<<4);
    15a8:	8b 81       	ldd	r24, Y+3	; 0x03
    15aa:	82 95       	swap	r24
    15ac:	80 7f       	andi	r24, 0xF0	; 240
    15ae:	89 83       	std	Y+1, r24	; 0x01
	//RS->1
	Dio_voidwriteChanel(DIO_PORTB, DIO_PIN1, DIO_HIGH);
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	61 e0       	ldi	r22, 0x01	; 1
    15b4:	41 e0       	ldi	r20, 0x01	; 1
    15b6:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <Dio_voidwriteChanel>

	//write data MSB to LCD
	Dio_voidWriteChanelGroup(DIO_PORTA, loc_MSB, LCD_MASK);
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	6a 81       	ldd	r22, Y+2	; 0x02
    15be:	4f e0       	ldi	r20, 0x0F	; 15
    15c0:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <Dio_voidWriteChanelGroup>
	//send Enable pulse
	Lcd_videnablePulse();
    15c4:	0e 94 7d 09 	call	0x12fa	; 0x12fa <Lcd_videnablePulse>

	//write data LSB to LCD
	Dio_voidWriteChanelGroup(DIO_PORTA, loc_LSB, LCD_MASK);
    15c8:	80 e0       	ldi	r24, 0x00	; 0
    15ca:	69 81       	ldd	r22, Y+1	; 0x01
    15cc:	4f e0       	ldi	r20, 0x0F	; 15
    15ce:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <Dio_voidWriteChanelGroup>
	//send Enable pulse
	Lcd_videnablePulse();
    15d2:	0e 94 7d 09 	call	0x12fa	; 0x12fa <Lcd_videnablePulse>
}
    15d6:	0f 90       	pop	r0
    15d8:	0f 90       	pop	r0
    15da:	0f 90       	pop	r0
    15dc:	cf 91       	pop	r28
    15de:	df 91       	pop	r29
    15e0:	08 95       	ret

000015e2 <Lcd_vidCmd>:
void Lcd_vidCmd(lcd_Cmd_t cmd)
{
    15e2:	df 93       	push	r29
    15e4:	cf 93       	push	r28
    15e6:	00 d0       	rcall	.+0      	; 0x15e8 <Lcd_vidCmd+0x6>
    15e8:	0f 92       	push	r0
    15ea:	cd b7       	in	r28, 0x3d	; 61
    15ec:	de b7       	in	r29, 0x3e	; 62
    15ee:	8b 83       	std	Y+3, r24	; 0x03
	u8 loc_MSB = cmd & ~LCD_MASK;
    15f0:	8b 81       	ldd	r24, Y+3	; 0x03
    15f2:	80 7f       	andi	r24, 0xF0	; 240
    15f4:	8a 83       	std	Y+2, r24	; 0x02
	u8 loc_LSB = cmd<<4;
    15f6:	8b 81       	ldd	r24, Y+3	; 0x03
    15f8:	82 95       	swap	r24
    15fa:	80 7f       	andi	r24, 0xF0	; 240
    15fc:	89 83       	std	Y+1, r24	; 0x01
	//RS->0
	Dio_voidwriteChanel(DIO_PORTB, DIO_PIN1, DIO_LOW);
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	61 e0       	ldi	r22, 0x01	; 1
    1602:	40 e0       	ldi	r20, 0x00	; 0
    1604:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <Dio_voidwriteChanel>

	//write data MSB to LCD
	Dio_voidWriteChanelGroup(DIO_PORTA, loc_MSB, LCD_MASK);
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	6a 81       	ldd	r22, Y+2	; 0x02
    160c:	4f e0       	ldi	r20, 0x0F	; 15
    160e:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <Dio_voidWriteChanelGroup>
	//send Enable pulse
	Lcd_videnablePulse();
    1612:	0e 94 7d 09 	call	0x12fa	; 0x12fa <Lcd_videnablePulse>

	//write data LSB to LCD
	Dio_voidWriteChanelGroup(DIO_PORTA, loc_LSB, LCD_MASK);
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	69 81       	ldd	r22, Y+1	; 0x01
    161a:	4f e0       	ldi	r20, 0x0F	; 15
    161c:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <Dio_voidWriteChanelGroup>
	//send Enable pulse
	Lcd_videnablePulse();
    1620:	0e 94 7d 09 	call	0x12fa	; 0x12fa <Lcd_videnablePulse>
}
    1624:	0f 90       	pop	r0
    1626:	0f 90       	pop	r0
    1628:	0f 90       	pop	r0
    162a:	cf 91       	pop	r28
    162c:	df 91       	pop	r29
    162e:	08 95       	ret

00001630 <Lcd_vidRowColumn>:

void Lcd_vidRowColumn(u8 row, u8 col)
{
    1630:	df 93       	push	r29
    1632:	cf 93       	push	r28
    1634:	00 d0       	rcall	.+0      	; 0x1636 <Lcd_vidRowColumn+0x6>
    1636:	00 d0       	rcall	.+0      	; 0x1638 <Lcd_vidRowColumn+0x8>
    1638:	cd b7       	in	r28, 0x3d	; 61
    163a:	de b7       	in	r29, 0x3e	; 62
    163c:	89 83       	std	Y+1, r24	; 0x01
    163e:	6a 83       	std	Y+2, r22	; 0x02
	switch (row)
    1640:	89 81       	ldd	r24, Y+1	; 0x01
    1642:	28 2f       	mov	r18, r24
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	3c 83       	std	Y+4, r19	; 0x04
    1648:	2b 83       	std	Y+3, r18	; 0x03
    164a:	8b 81       	ldd	r24, Y+3	; 0x03
    164c:	9c 81       	ldd	r25, Y+4	; 0x04
    164e:	00 97       	sbiw	r24, 0x00	; 0
    1650:	31 f0       	breq	.+12     	; 0x165e <Lcd_vidRowColumn+0x2e>
    1652:	2b 81       	ldd	r18, Y+3	; 0x03
    1654:	3c 81       	ldd	r19, Y+4	; 0x04
    1656:	21 30       	cpi	r18, 0x01	; 1
    1658:	31 05       	cpc	r19, r1
    165a:	31 f0       	breq	.+12     	; 0x1668 <Lcd_vidRowColumn+0x38>
    165c:	09 c0       	rjmp	.+18     	; 0x1670 <Lcd_vidRowColumn+0x40>
	{
	case 0:
		Lcd_vidCmd(0x80 + col);
    165e:	8a 81       	ldd	r24, Y+2	; 0x02
    1660:	80 58       	subi	r24, 0x80	; 128
    1662:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
    1666:	04 c0       	rjmp	.+8      	; 0x1670 <Lcd_vidRowColumn+0x40>
		break;

	case 1:
		Lcd_vidCmd(0xC0 + col);
    1668:	8a 81       	ldd	r24, Y+2	; 0x02
    166a:	80 54       	subi	r24, 0x40	; 64
    166c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <Lcd_vidCmd>
		break;
	}
}
    1670:	0f 90       	pop	r0
    1672:	0f 90       	pop	r0
    1674:	0f 90       	pop	r0
    1676:	0f 90       	pop	r0
    1678:	cf 91       	pop	r28
    167a:	df 91       	pop	r29
    167c:	08 95       	ret

0000167e <Lcd_vidDisplyStr>:
void Lcd_vidDisplyStr(u8* str)
{
    167e:	df 93       	push	r29
    1680:	cf 93       	push	r28
    1682:	00 d0       	rcall	.+0      	; 0x1684 <Lcd_vidDisplyStr+0x6>
    1684:	cd b7       	in	r28, 0x3d	; 61
    1686:	de b7       	in	r29, 0x3e	; 62
    1688:	9a 83       	std	Y+2, r25	; 0x02
    168a:	89 83       	std	Y+1, r24	; 0x01
    168c:	0a c0       	rjmp	.+20     	; 0x16a2 <Lcd_vidDisplyStr+0x24>
	while (*str != '\0')
	{
		Lcd_vidDisplayChar(*str);
    168e:	e9 81       	ldd	r30, Y+1	; 0x01
    1690:	fa 81       	ldd	r31, Y+2	; 0x02
    1692:	80 81       	ld	r24, Z
    1694:	0e 94 ca 0a 	call	0x1594	; 0x1594 <Lcd_vidDisplayChar>
		str++;
    1698:	89 81       	ldd	r24, Y+1	; 0x01
    169a:	9a 81       	ldd	r25, Y+2	; 0x02
    169c:	01 96       	adiw	r24, 0x01	; 1
    169e:	9a 83       	std	Y+2, r25	; 0x02
    16a0:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
}
void Lcd_vidDisplyStr(u8* str)
{
	while (*str != '\0')
    16a2:	e9 81       	ldd	r30, Y+1	; 0x01
    16a4:	fa 81       	ldd	r31, Y+2	; 0x02
    16a6:	80 81       	ld	r24, Z
    16a8:	88 23       	and	r24, r24
    16aa:	89 f7       	brne	.-30     	; 0x168e <Lcd_vidDisplyStr+0x10>
	{
		Lcd_vidDisplayChar(*str);
		str++;
	}
}
    16ac:	0f 90       	pop	r0
    16ae:	0f 90       	pop	r0
    16b0:	cf 91       	pop	r28
    16b2:	df 91       	pop	r29
    16b4:	08 95       	ret

000016b6 <Lcd_vidDisplyInt>:

void Lcd_vidDisplyInt(u32 num)
{
    16b6:	df 93       	push	r29
    16b8:	cf 93       	push	r28
    16ba:	cd b7       	in	r28, 0x3d	; 61
    16bc:	de b7       	in	r29, 0x3e	; 62
    16be:	29 97       	sbiw	r28, 0x09	; 9
    16c0:	0f b6       	in	r0, 0x3f	; 63
    16c2:	f8 94       	cli
    16c4:	de bf       	out	0x3e, r29	; 62
    16c6:	0f be       	out	0x3f, r0	; 63
    16c8:	cd bf       	out	0x3d, r28	; 61
    16ca:	6e 83       	std	Y+6, r22	; 0x06
    16cc:	7f 83       	std	Y+7, r23	; 0x07
    16ce:	88 87       	std	Y+8, r24	; 0x08
    16d0:	99 87       	std	Y+9, r25	; 0x09
	u8 buffer[5];
	sprintf(buffer,"%d",num);
    16d2:	8d b7       	in	r24, 0x3d	; 61
    16d4:	9e b7       	in	r25, 0x3e	; 62
    16d6:	08 97       	sbiw	r24, 0x08	; 8
    16d8:	0f b6       	in	r0, 0x3f	; 63
    16da:	f8 94       	cli
    16dc:	9e bf       	out	0x3e, r25	; 62
    16de:	0f be       	out	0x3f, r0	; 63
    16e0:	8d bf       	out	0x3d, r24	; 61
    16e2:	ed b7       	in	r30, 0x3d	; 61
    16e4:	fe b7       	in	r31, 0x3e	; 62
    16e6:	31 96       	adiw	r30, 0x01	; 1
    16e8:	ce 01       	movw	r24, r28
    16ea:	01 96       	adiw	r24, 0x01	; 1
    16ec:	91 83       	std	Z+1, r25	; 0x01
    16ee:	80 83       	st	Z, r24
    16f0:	83 e7       	ldi	r24, 0x73	; 115
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	93 83       	std	Z+3, r25	; 0x03
    16f6:	82 83       	std	Z+2, r24	; 0x02
    16f8:	8e 81       	ldd	r24, Y+6	; 0x06
    16fa:	9f 81       	ldd	r25, Y+7	; 0x07
    16fc:	a8 85       	ldd	r26, Y+8	; 0x08
    16fe:	b9 85       	ldd	r27, Y+9	; 0x09
    1700:	84 83       	std	Z+4, r24	; 0x04
    1702:	95 83       	std	Z+5, r25	; 0x05
    1704:	a6 83       	std	Z+6, r26	; 0x06
    1706:	b7 83       	std	Z+7, r27	; 0x07
    1708:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <sprintf>
    170c:	8d b7       	in	r24, 0x3d	; 61
    170e:	9e b7       	in	r25, 0x3e	; 62
    1710:	08 96       	adiw	r24, 0x08	; 8
    1712:	0f b6       	in	r0, 0x3f	; 63
    1714:	f8 94       	cli
    1716:	9e bf       	out	0x3e, r25	; 62
    1718:	0f be       	out	0x3f, r0	; 63
    171a:	8d bf       	out	0x3d, r24	; 61
	Lcd_vidDisplyStr(buffer);
    171c:	ce 01       	movw	r24, r28
    171e:	01 96       	adiw	r24, 0x01	; 1
    1720:	0e 94 3f 0b 	call	0x167e	; 0x167e <Lcd_vidDisplyStr>
}
    1724:	29 96       	adiw	r28, 0x09	; 9
    1726:	0f b6       	in	r0, 0x3f	; 63
    1728:	f8 94       	cli
    172a:	de bf       	out	0x3e, r29	; 62
    172c:	0f be       	out	0x3f, r0	; 63
    172e:	cd bf       	out	0x3d, r28	; 61
    1730:	cf 91       	pop	r28
    1732:	df 91       	pop	r29
    1734:	08 95       	ret

00001736 <TIMER0_Init>:
#include "Timer0.h"
#include "Bit_Math.h"
#include <avr/io.h>

void TIMER0_Init(void)
{
    1736:	df 93       	push	r29
    1738:	cf 93       	push	r28
    173a:	cd b7       	in	r28, 0x3d	; 61
    173c:	de b7       	in	r29, 0x3e	; 62
	#if (TIMER_OPERATION_MODE == TIMER0_MODE_INTERVAL/*normal mode*/)
		TIMER0_TCCR0_REG|= TIMER0_INTERVAL_MODE;
	#elif (TIMER_OPERATION_MODE == TIMER0_MODE_CTC)
		TIMER0_TCCR0_REG|= TIMER0_CTC_MODE;
	#elif (TIMER_OPERATION_MODE == TIMER0_MODE_FAST_PWM)
		TIMER0_TCCR0_REG|= TIMER0_PWM_FAST;
    173e:	a3 e5       	ldi	r26, 0x53	; 83
    1740:	b0 e0       	ldi	r27, 0x00	; 0
    1742:	e3 e5       	ldi	r30, 0x53	; 83
    1744:	f0 e0       	ldi	r31, 0x00	; 0
    1746:	80 81       	ld	r24, Z
    1748:	88 64       	ori	r24, 0x48	; 72
    174a:	8c 93       	st	X, r24
	#elif (TIMER_OPERATION_MODE == TIMER0_MODE_PWM_PHASE_CORRECT)
		TIMER0_TCCR0_REG|= TIMER0_PWM_PHASE_CORRECT;
	#else
		#error "You Shall Define Timer Operation Mode In Timer0_Cfg.h"
	#endif
}
    174c:	cf 91       	pop	r28
    174e:	df 91       	pop	r29
    1750:	08 95       	ret

00001752 <TIMER0_PWM>:
#endif
#endif

#if ((TIMER_OPERATION_MODE == TIMER0_MODE_FAST_PWM) || (TIMER_OPERATION_MODE == TIMER0_MODE_PWM_PHASE_CORRECT))
void TIMER0_PWM(u8 freq, u8 dutyCycle)
{
    1752:	df 93       	push	r29
    1754:	cf 93       	push	r28
    1756:	00 d0       	rcall	.+0      	; 0x1758 <TIMER0_PWM+0x6>
    1758:	00 d0       	rcall	.+0      	; 0x175a <TIMER0_PWM+0x8>
    175a:	cd b7       	in	r28, 0x3d	; 61
    175c:	de b7       	in	r29, 0x3e	; 62
    175e:	8b 83       	std	Y+3, r24	; 0x03
    1760:	6c 83       	std	Y+4, r22	; 0x04
	u16 result =0 ;
    1762:	1a 82       	std	Y+2, r1	; 0x02
    1764:	19 82       	std	Y+1, r1	; 0x01
	result = (dutyCycle * TIMER0_TOP)/100;
    1766:	8c 81       	ldd	r24, Y+4	; 0x04
    1768:	48 2f       	mov	r20, r24
    176a:	50 e0       	ldi	r21, 0x00	; 0
    176c:	ca 01       	movw	r24, r20
    176e:	9c 01       	movw	r18, r24
    1770:	22 0f       	add	r18, r18
    1772:	33 1f       	adc	r19, r19
    1774:	c9 01       	movw	r24, r18
    1776:	96 95       	lsr	r25
    1778:	98 2f       	mov	r25, r24
    177a:	88 27       	eor	r24, r24
    177c:	97 95       	ror	r25
    177e:	87 95       	ror	r24
    1780:	82 1b       	sub	r24, r18
    1782:	93 0b       	sbc	r25, r19
    1784:	84 0f       	add	r24, r20
    1786:	95 1f       	adc	r25, r21
    1788:	24 e6       	ldi	r18, 0x64	; 100
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	b9 01       	movw	r22, r18
    178e:	0e 94 aa 10 	call	0x2154	; 0x2154 <__udivmodhi4>
    1792:	cb 01       	movw	r24, r22
    1794:	9a 83       	std	Y+2, r25	; 0x02
    1796:	89 83       	std	Y+1, r24	; 0x01
	TIMER0_OCR0_REG = result;
    1798:	ec e5       	ldi	r30, 0x5C	; 92
    179a:	f0 e0       	ldi	r31, 0x00	; 0
    179c:	89 81       	ldd	r24, Y+1	; 0x01
    179e:	80 83       	st	Z, r24

	/*	Check for frequency then choose prescaler	*/
}
    17a0:	0f 90       	pop	r0
    17a2:	0f 90       	pop	r0
    17a4:	0f 90       	pop	r0
    17a6:	0f 90       	pop	r0
    17a8:	cf 91       	pop	r28
    17aa:	df 91       	pop	r29
    17ac:	08 95       	ret

000017ae <Freq_Duty>:
#endif

void Freq_Duty(u8 a, u8 b, u8 c, u8 h, u8 p, u32 *f, f32 *d)
{
    17ae:	cf 92       	push	r12
    17b0:	df 92       	push	r13
    17b2:	ef 92       	push	r14
    17b4:	ff 92       	push	r15
    17b6:	0f 93       	push	r16
    17b8:	1f 93       	push	r17
    17ba:	df 93       	push	r29
    17bc:	cf 93       	push	r28
    17be:	cd b7       	in	r28, 0x3d	; 61
    17c0:	de b7       	in	r29, 0x3e	; 62
    17c2:	29 97       	sbiw	r28, 0x09	; 9
    17c4:	0f b6       	in	r0, 0x3f	; 63
    17c6:	f8 94       	cli
    17c8:	de bf       	out	0x3e, r29	; 62
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	cd bf       	out	0x3d, r28	; 61
    17ce:	89 83       	std	Y+1, r24	; 0x01
    17d0:	6a 83       	std	Y+2, r22	; 0x02
    17d2:	4b 83       	std	Y+3, r20	; 0x03
    17d4:	2c 83       	std	Y+4, r18	; 0x04
    17d6:	0d 83       	std	Y+5, r16	; 0x05
    17d8:	ff 82       	std	Y+7, r15	; 0x07
    17da:	ee 82       	std	Y+6, r14	; 0x06
    17dc:	d9 86       	std	Y+9, r13	; 0x09
    17de:	c8 86       	std	Y+8, r12	; 0x08
	TCCR1A = 0;
    17e0:	ef e4       	ldi	r30, 0x4F	; 79
    17e2:	f0 e0       	ldi	r31, 0x00	; 0
    17e4:	10 82       	st	Z, r1
	TCCR1B = 0;
    17e6:	ee e4       	ldi	r30, 0x4E	; 78
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	10 82       	st	Z, r1
	TIMER0_TCNT0_REG = 0;
    17ec:	e2 e5       	ldi	r30, 0x52	; 82
    17ee:	f0 e0       	ldi	r31, 0x00	; 0
    17f0:	10 82       	st	Z, r1
	TIMER0_TIFR_REG = (1 << ICF1); // Clear ICF (Input Capture flag) flag
    17f2:	e8 e5       	ldi	r30, 0x58	; 88
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	80 e2       	ldi	r24, 0x20	; 32
    17f8:	80 83       	st	Z, r24

	SET_BIT(TCCR1B,ICES1); // Rising edge
    17fa:	ae e4       	ldi	r26, 0x4E	; 78
    17fc:	b0 e0       	ldi	r27, 0x00	; 0
    17fe:	ee e4       	ldi	r30, 0x4E	; 78
    1800:	f0 e0       	ldi	r31, 0x00	; 0
    1802:	80 81       	ld	r24, Z
    1804:	80 64       	ori	r24, 0x40	; 64
    1806:	8c 93       	st	X, r24
	while ((TIMER0_TIFR_REG & (1 << ICF1)) == 0)
    1808:	e8 e5       	ldi	r30, 0x58	; 88
    180a:	f0 e0       	ldi	r31, 0x00	; 0
    180c:	80 81       	ld	r24, Z
    180e:	88 2f       	mov	r24, r24
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	80 72       	andi	r24, 0x20	; 32
    1814:	90 70       	andi	r25, 0x00	; 0
    1816:	00 97       	sbiw	r24, 0x00	; 0
    1818:	b9 f3       	breq	.-18     	; 0x1808 <Freq_Duty+0x5a>
		;
	a = ICR1; // Take value of capture register
    181a:	e6 e4       	ldi	r30, 0x46	; 70
    181c:	f0 e0       	ldi	r31, 0x00	; 0
    181e:	80 81       	ld	r24, Z
    1820:	91 81       	ldd	r25, Z+1	; 0x01
    1822:	89 83       	std	Y+1, r24	; 0x01
	SET_BIT(TIMER0_TIFR_REG, ICF1); // Clear ICF flag
    1824:	a8 e5       	ldi	r26, 0x58	; 88
    1826:	b0 e0       	ldi	r27, 0x00	; 0
    1828:	e8 e5       	ldi	r30, 0x58	; 88
    182a:	f0 e0       	ldi	r31, 0x00	; 0
    182c:	80 81       	ld	r24, Z
    182e:	80 62       	ori	r24, 0x20	; 32
    1830:	8c 93       	st	X, r24

	CLEAR_BIT(TCCR1B,ICES1); // Falling edge
    1832:	ae e4       	ldi	r26, 0x4E	; 78
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	ee e4       	ldi	r30, 0x4E	; 78
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	80 81       	ld	r24, Z
    183c:	8f 7b       	andi	r24, 0xBF	; 191
    183e:	8c 93       	st	X, r24
	while ((TIMER0_TIFR_REG & (1 << ICF1)) == 0)
    1840:	e8 e5       	ldi	r30, 0x58	; 88
    1842:	f0 e0       	ldi	r31, 0x00	; 0
    1844:	80 81       	ld	r24, Z
    1846:	88 2f       	mov	r24, r24
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	80 72       	andi	r24, 0x20	; 32
    184c:	90 70       	andi	r25, 0x00	; 0
    184e:	00 97       	sbiw	r24, 0x00	; 0
    1850:	b9 f3       	breq	.-18     	; 0x1840 <Freq_Duty+0x92>
		;
	b = ICR1; // Take value of capture register
    1852:	e6 e4       	ldi	r30, 0x46	; 70
    1854:	f0 e0       	ldi	r31, 0x00	; 0
    1856:	80 81       	ld	r24, Z
    1858:	91 81       	ldd	r25, Z+1	; 0x01
    185a:	8a 83       	std	Y+2, r24	; 0x02
	SET_BIT(TIMER0_TIFR_REG, ICF1); // Clear ICF flag
    185c:	a8 e5       	ldi	r26, 0x58	; 88
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	e8 e5       	ldi	r30, 0x58	; 88
    1862:	f0 e0       	ldi	r31, 0x00	; 0
    1864:	80 81       	ld	r24, Z
    1866:	80 62       	ori	r24, 0x20	; 32
    1868:	8c 93       	st	X, r24

	SET_BIT(TCCR1B,ICES1); // Rising edge
    186a:	ae e4       	ldi	r26, 0x4E	; 78
    186c:	b0 e0       	ldi	r27, 0x00	; 0
    186e:	ee e4       	ldi	r30, 0x4E	; 78
    1870:	f0 e0       	ldi	r31, 0x00	; 0
    1872:	80 81       	ld	r24, Z
    1874:	80 64       	ori	r24, 0x40	; 64
    1876:	8c 93       	st	X, r24
	while ((TIMER0_TIFR_REG & (1 << ICF1)) == 0)
    1878:	e8 e5       	ldi	r30, 0x58	; 88
    187a:	f0 e0       	ldi	r31, 0x00	; 0
    187c:	80 81       	ld	r24, Z
    187e:	88 2f       	mov	r24, r24
    1880:	90 e0       	ldi	r25, 0x00	; 0
    1882:	80 72       	andi	r24, 0x20	; 32
    1884:	90 70       	andi	r25, 0x00	; 0
    1886:	00 97       	sbiw	r24, 0x00	; 0
    1888:	b9 f3       	breq	.-18     	; 0x1878 <Freq_Duty+0xca>
		;
	c = ICR1; // Take value of capture register
    188a:	e6 e4       	ldi	r30, 0x46	; 70
    188c:	f0 e0       	ldi	r31, 0x00	; 0
    188e:	80 81       	ld	r24, Z
    1890:	91 81       	ldd	r25, Z+1	; 0x01
    1892:	8b 83       	std	Y+3, r24	; 0x03
	SET_BIT(TIMER0_TIFR_REG, ICF1); // Clear ICF flag
    1894:	a8 e5       	ldi	r26, 0x58	; 88
    1896:	b0 e0       	ldi	r27, 0x00	; 0
    1898:	e8 e5       	ldi	r30, 0x58	; 88
    189a:	f0 e0       	ldi	r31, 0x00	; 0
    189c:	80 81       	ld	r24, Z
    189e:	80 62       	ori	r24, 0x20	; 32
    18a0:	8c 93       	st	X, r24

	TCCR1B = 0; // Stop the timer
    18a2:	ee e4       	ldi	r30, 0x4E	; 78
    18a4:	f0 e0       	ldi	r31, 0x00	; 0
    18a6:	10 82       	st	Z, r1

	if (a < b && b < c) /* Check for valid condition,
    18a8:	99 81       	ldd	r25, Y+1	; 0x01
    18aa:	8a 81       	ldd	r24, Y+2	; 0x02
    18ac:	98 17       	cp	r25, r24
    18ae:	08 f0       	brcs	.+2      	; 0x18b2 <Freq_Duty+0x104>
    18b0:	52 c0       	rjmp	.+164    	; 0x1956 <Freq_Duty+0x1a8>
    18b2:	9a 81       	ldd	r25, Y+2	; 0x02
    18b4:	8b 81       	ldd	r24, Y+3	; 0x03
    18b6:	98 17       	cp	r25, r24
    18b8:	08 f0       	brcs	.+2      	; 0x18bc <Freq_Duty+0x10e>
    18ba:	4d c0       	rjmp	.+154    	; 0x1956 <Freq_Duty+0x1a8>
	 to avoid timer overflow reading */
	{
		h = b - a;
    18bc:	9a 81       	ldd	r25, Y+2	; 0x02
    18be:	89 81       	ldd	r24, Y+1	; 0x01
    18c0:	29 2f       	mov	r18, r25
    18c2:	28 1b       	sub	r18, r24
    18c4:	82 2f       	mov	r24, r18
    18c6:	8c 83       	std	Y+4, r24	; 0x04
		p = c - a;
    18c8:	9b 81       	ldd	r25, Y+3	; 0x03
    18ca:	89 81       	ldd	r24, Y+1	; 0x01
    18cc:	29 2f       	mov	r18, r25
    18ce:	28 1b       	sub	r18, r24
    18d0:	82 2f       	mov	r24, r18
    18d2:	8d 83       	std	Y+5, r24	; 0x05
		*f = F_CPU / p;
    18d4:	8d 81       	ldd	r24, Y+5	; 0x05
    18d6:	28 2f       	mov	r18, r24
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	40 e0       	ldi	r20, 0x00	; 0
    18dc:	50 e0       	ldi	r21, 0x00	; 0
    18de:	80 e0       	ldi	r24, 0x00	; 0
    18e0:	94 e2       	ldi	r25, 0x24	; 36
    18e2:	a4 ef       	ldi	r26, 0xF4	; 244
    18e4:	b0 e0       	ldi	r27, 0x00	; 0
    18e6:	bc 01       	movw	r22, r24
    18e8:	cd 01       	movw	r24, r26
    18ea:	0e 94 be 10 	call	0x217c	; 0x217c <__udivmodsi4>
    18ee:	da 01       	movw	r26, r20
    18f0:	c9 01       	movw	r24, r18
    18f2:	ee 81       	ldd	r30, Y+6	; 0x06
    18f4:	ff 81       	ldd	r31, Y+7	; 0x07
    18f6:	80 83       	st	Z, r24
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	a2 83       	std	Z+2, r26	; 0x02
    18fc:	b3 83       	std	Z+3, r27	; 0x03
		*d = ((float) h / (float) p) * 100;
    18fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1900:	88 2f       	mov	r24, r24
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	a0 e0       	ldi	r26, 0x00	; 0
    1906:	b0 e0       	ldi	r27, 0x00	; 0
    1908:	bc 01       	movw	r22, r24
    190a:	cd 01       	movw	r24, r26
    190c:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    1910:	7b 01       	movw	r14, r22
    1912:	8c 01       	movw	r16, r24
    1914:	8d 81       	ldd	r24, Y+5	; 0x05
    1916:	88 2f       	mov	r24, r24
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	a0 e0       	ldi	r26, 0x00	; 0
    191c:	b0 e0       	ldi	r27, 0x00	; 0
    191e:	bc 01       	movw	r22, r24
    1920:	cd 01       	movw	r24, r26
    1922:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    1926:	9b 01       	movw	r18, r22
    1928:	ac 01       	movw	r20, r24
    192a:	c8 01       	movw	r24, r16
    192c:	b7 01       	movw	r22, r14
    192e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	bc 01       	movw	r22, r24
    1938:	cd 01       	movw	r24, r26
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	30 e0       	ldi	r19, 0x00	; 0
    193e:	48 ec       	ldi	r20, 0xC8	; 200
    1940:	52 e4       	ldi	r21, 0x42	; 66
    1942:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1946:	dc 01       	movw	r26, r24
    1948:	cb 01       	movw	r24, r22
    194a:	e8 85       	ldd	r30, Y+8	; 0x08
    194c:	f9 85       	ldd	r31, Y+9	; 0x09
    194e:	80 83       	st	Z, r24
    1950:	91 83       	std	Z+1, r25	; 0x01
    1952:	a2 83       	std	Z+2, r26	; 0x02
    1954:	b3 83       	std	Z+3, r27	; 0x03
	}
}
    1956:	29 96       	adiw	r28, 0x09	; 9
    1958:	0f b6       	in	r0, 0x3f	; 63
    195a:	f8 94       	cli
    195c:	de bf       	out	0x3e, r29	; 62
    195e:	0f be       	out	0x3f, r0	; 63
    1960:	cd bf       	out	0x3d, r28	; 61
    1962:	cf 91       	pop	r28
    1964:	df 91       	pop	r29
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	ff 90       	pop	r15
    196c:	ef 90       	pop	r14
    196e:	df 90       	pop	r13
    1970:	cf 90       	pop	r12
    1972:	08 95       	ret

00001974 <Ext_Interrupt_Enable>:

#include "EXINT.h"


void Ext_Interrupt_Enable(ext_Int_t intID)
{
    1974:	df 93       	push	r29
    1976:	cf 93       	push	r28
    1978:	00 d0       	rcall	.+0      	; 0x197a <Ext_Interrupt_Enable+0x6>
    197a:	0f 92       	push	r0
    197c:	cd b7       	in	r28, 0x3d	; 61
    197e:	de b7       	in	r29, 0x3e	; 62
    1980:	89 83       	std	Y+1, r24	; 0x01
	switch (intID)
    1982:	89 81       	ldd	r24, Y+1	; 0x01
    1984:	28 2f       	mov	r18, r24
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	3b 83       	std	Y+3, r19	; 0x03
    198a:	2a 83       	std	Y+2, r18	; 0x02
    198c:	8a 81       	ldd	r24, Y+2	; 0x02
    198e:	9b 81       	ldd	r25, Y+3	; 0x03
    1990:	81 30       	cpi	r24, 0x01	; 1
    1992:	91 05       	cpc	r25, r1
    1994:	89 f0       	breq	.+34     	; 0x19b8 <Ext_Interrupt_Enable+0x44>
    1996:	2a 81       	ldd	r18, Y+2	; 0x02
    1998:	3b 81       	ldd	r19, Y+3	; 0x03
    199a:	22 30       	cpi	r18, 0x02	; 2
    199c:	31 05       	cpc	r19, r1
    199e:	a1 f0       	breq	.+40     	; 0x19c8 <Ext_Interrupt_Enable+0x54>
    19a0:	8a 81       	ldd	r24, Y+2	; 0x02
    19a2:	9b 81       	ldd	r25, Y+3	; 0x03
    19a4:	00 97       	sbiw	r24, 0x00	; 0
    19a6:	b9 f4       	brne	.+46     	; 0x19d6 <Ext_Interrupt_Enable+0x62>
	{
	case EXT_INT0:
			SET_BIT(EXT_INT_GICR_REG,6);
    19a8:	ab e5       	ldi	r26, 0x5B	; 91
    19aa:	b0 e0       	ldi	r27, 0x00	; 0
    19ac:	eb e5       	ldi	r30, 0x5B	; 91
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	80 81       	ld	r24, Z
    19b2:	80 64       	ori	r24, 0x40	; 64
    19b4:	8c 93       	st	X, r24
    19b6:	0f c0       	rjmp	.+30     	; 0x19d6 <Ext_Interrupt_Enable+0x62>
			break;

	case EXT_INT1:
			SET_BIT(EXT_INT_GICR_REG,7);
    19b8:	ab e5       	ldi	r26, 0x5B	; 91
    19ba:	b0 e0       	ldi	r27, 0x00	; 0
    19bc:	eb e5       	ldi	r30, 0x5B	; 91
    19be:	f0 e0       	ldi	r31, 0x00	; 0
    19c0:	80 81       	ld	r24, Z
    19c2:	80 68       	ori	r24, 0x80	; 128
    19c4:	8c 93       	st	X, r24
    19c6:	07 c0       	rjmp	.+14     	; 0x19d6 <Ext_Interrupt_Enable+0x62>
			break;

	case EXT_INT2:
			SET_BIT(EXT_INT_GICR_REG,5);
    19c8:	ab e5       	ldi	r26, 0x5B	; 91
    19ca:	b0 e0       	ldi	r27, 0x00	; 0
    19cc:	eb e5       	ldi	r30, 0x5B	; 91
    19ce:	f0 e0       	ldi	r31, 0x00	; 0
    19d0:	80 81       	ld	r24, Z
    19d2:	80 62       	ori	r24, 0x20	; 32
    19d4:	8c 93       	st	X, r24
			break;
	}
}
    19d6:	0f 90       	pop	r0
    19d8:	0f 90       	pop	r0
    19da:	0f 90       	pop	r0
    19dc:	cf 91       	pop	r28
    19de:	df 91       	pop	r29
    19e0:	08 95       	ret

000019e2 <Ext_Interrupt_Disable>:
void Ext_Interrupt_Disable(ext_Int_t intID)
{
    19e2:	df 93       	push	r29
    19e4:	cf 93       	push	r28
    19e6:	00 d0       	rcall	.+0      	; 0x19e8 <Ext_Interrupt_Disable+0x6>
    19e8:	0f 92       	push	r0
    19ea:	cd b7       	in	r28, 0x3d	; 61
    19ec:	de b7       	in	r29, 0x3e	; 62
    19ee:	89 83       	std	Y+1, r24	; 0x01
	switch (intID)
    19f0:	89 81       	ldd	r24, Y+1	; 0x01
    19f2:	28 2f       	mov	r18, r24
    19f4:	30 e0       	ldi	r19, 0x00	; 0
    19f6:	3b 83       	std	Y+3, r19	; 0x03
    19f8:	2a 83       	std	Y+2, r18	; 0x02
    19fa:	8a 81       	ldd	r24, Y+2	; 0x02
    19fc:	9b 81       	ldd	r25, Y+3	; 0x03
    19fe:	81 30       	cpi	r24, 0x01	; 1
    1a00:	91 05       	cpc	r25, r1
    1a02:	89 f0       	breq	.+34     	; 0x1a26 <Ext_Interrupt_Disable+0x44>
    1a04:	2a 81       	ldd	r18, Y+2	; 0x02
    1a06:	3b 81       	ldd	r19, Y+3	; 0x03
    1a08:	22 30       	cpi	r18, 0x02	; 2
    1a0a:	31 05       	cpc	r19, r1
    1a0c:	a1 f0       	breq	.+40     	; 0x1a36 <Ext_Interrupt_Disable+0x54>
    1a0e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a10:	9b 81       	ldd	r25, Y+3	; 0x03
    1a12:	00 97       	sbiw	r24, 0x00	; 0
    1a14:	b9 f4       	brne	.+46     	; 0x1a44 <Ext_Interrupt_Disable+0x62>
	{
	case EXT_INT0:
			CLEAR_BIT(EXT_INT_GICR_REG,6);
    1a16:	ab e5       	ldi	r26, 0x5B	; 91
    1a18:	b0 e0       	ldi	r27, 0x00	; 0
    1a1a:	eb e5       	ldi	r30, 0x5B	; 91
    1a1c:	f0 e0       	ldi	r31, 0x00	; 0
    1a1e:	80 81       	ld	r24, Z
    1a20:	8f 7b       	andi	r24, 0xBF	; 191
    1a22:	8c 93       	st	X, r24
    1a24:	0f c0       	rjmp	.+30     	; 0x1a44 <Ext_Interrupt_Disable+0x62>
			break;

	case EXT_INT1:
			CLEAR_BIT(EXT_INT_GICR_REG,7);
    1a26:	ab e5       	ldi	r26, 0x5B	; 91
    1a28:	b0 e0       	ldi	r27, 0x00	; 0
    1a2a:	eb e5       	ldi	r30, 0x5B	; 91
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	80 81       	ld	r24, Z
    1a30:	8f 77       	andi	r24, 0x7F	; 127
    1a32:	8c 93       	st	X, r24
    1a34:	07 c0       	rjmp	.+14     	; 0x1a44 <Ext_Interrupt_Disable+0x62>
			break;

	case EXT_INT2:
			CLEAR_BIT(EXT_INT_GICR_REG,5);
    1a36:	ab e5       	ldi	r26, 0x5B	; 91
    1a38:	b0 e0       	ldi	r27, 0x00	; 0
    1a3a:	eb e5       	ldi	r30, 0x5B	; 91
    1a3c:	f0 e0       	ldi	r31, 0x00	; 0
    1a3e:	80 81       	ld	r24, Z
    1a40:	8f 7d       	andi	r24, 0xDF	; 223
    1a42:	8c 93       	st	X, r24
			break;
	}

}
    1a44:	0f 90       	pop	r0
    1a46:	0f 90       	pop	r0
    1a48:	0f 90       	pop	r0
    1a4a:	cf 91       	pop	r28
    1a4c:	df 91       	pop	r29
    1a4e:	08 95       	ret

00001a50 <Ext_Interrupt_SncControl>:

void Ext_Interrupt_SncControl(ext_Int_t intID, snc_mode_t mode)
{
    1a50:	df 93       	push	r29
    1a52:	cf 93       	push	r28
    1a54:	00 d0       	rcall	.+0      	; 0x1a56 <Ext_Interrupt_SncControl+0x6>
    1a56:	00 d0       	rcall	.+0      	; 0x1a58 <Ext_Interrupt_SncControl+0x8>
    1a58:	cd b7       	in	r28, 0x3d	; 61
    1a5a:	de b7       	in	r29, 0x3e	; 62
    1a5c:	89 83       	std	Y+1, r24	; 0x01
    1a5e:	6a 83       	std	Y+2, r22	; 0x02
	switch (intID)
    1a60:	89 81       	ldd	r24, Y+1	; 0x01
    1a62:	28 2f       	mov	r18, r24
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	3c 83       	std	Y+4, r19	; 0x04
    1a68:	2b 83       	std	Y+3, r18	; 0x03
    1a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a6e:	81 30       	cpi	r24, 0x01	; 1
    1a70:	91 05       	cpc	r25, r1
    1a72:	91 f0       	breq	.+36     	; 0x1a98 <Ext_Interrupt_SncControl+0x48>
    1a74:	2b 81       	ldd	r18, Y+3	; 0x03
    1a76:	3c 81       	ldd	r19, Y+4	; 0x04
    1a78:	22 30       	cpi	r18, 0x02	; 2
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	e9 f0       	breq	.+58     	; 0x1ab8 <Ext_Interrupt_SncControl+0x68>
    1a7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a80:	9c 81       	ldd	r25, Y+4	; 0x04
    1a82:	00 97       	sbiw	r24, 0x00	; 0
    1a84:	71 f5       	brne	.+92     	; 0x1ae2 <Ext_Interrupt_SncControl+0x92>
	{
		case EXT_INT0:
			EXT_INT_MCUCR_REG |=(mode<<0);
    1a86:	a5 e5       	ldi	r26, 0x55	; 85
    1a88:	b0 e0       	ldi	r27, 0x00	; 0
    1a8a:	e5 e5       	ldi	r30, 0x55	; 85
    1a8c:	f0 e0       	ldi	r31, 0x00	; 0
    1a8e:	90 81       	ld	r25, Z
    1a90:	8a 81       	ldd	r24, Y+2	; 0x02
    1a92:	89 2b       	or	r24, r25
    1a94:	8c 93       	st	X, r24
    1a96:	25 c0       	rjmp	.+74     	; 0x1ae2 <Ext_Interrupt_SncControl+0x92>
			break;

		case EXT_INT1:
			EXT_INT_MCUCR_REG |=(mode<<2);
    1a98:	a5 e5       	ldi	r26, 0x55	; 85
    1a9a:	b0 e0       	ldi	r27, 0x00	; 0
    1a9c:	e5 e5       	ldi	r30, 0x55	; 85
    1a9e:	f0 e0       	ldi	r31, 0x00	; 0
    1aa0:	80 81       	ld	r24, Z
    1aa2:	28 2f       	mov	r18, r24
    1aa4:	8a 81       	ldd	r24, Y+2	; 0x02
    1aa6:	88 2f       	mov	r24, r24
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	88 0f       	add	r24, r24
    1aac:	99 1f       	adc	r25, r25
    1aae:	88 0f       	add	r24, r24
    1ab0:	99 1f       	adc	r25, r25
    1ab2:	82 2b       	or	r24, r18
    1ab4:	8c 93       	st	X, r24
    1ab6:	15 c0       	rjmp	.+42     	; 0x1ae2 <Ext_Interrupt_SncControl+0x92>
			break;

		case EXT_INT2:
			if (mode == FAILING_EDGE)
    1ab8:	8a 81       	ldd	r24, Y+2	; 0x02
    1aba:	82 30       	cpi	r24, 0x02	; 2
    1abc:	41 f4       	brne	.+16     	; 0x1ace <Ext_Interrupt_SncControl+0x7e>
			{
				CLEAR_BIT(EXT_INT_MCUCSR_REG,6);
    1abe:	a4 e5       	ldi	r26, 0x54	; 84
    1ac0:	b0 e0       	ldi	r27, 0x00	; 0
    1ac2:	e4 e5       	ldi	r30, 0x54	; 84
    1ac4:	f0 e0       	ldi	r31, 0x00	; 0
    1ac6:	80 81       	ld	r24, Z
    1ac8:	8f 7b       	andi	r24, 0xBF	; 191
    1aca:	8c 93       	st	X, r24
    1acc:	0a c0       	rjmp	.+20     	; 0x1ae2 <Ext_Interrupt_SncControl+0x92>
			}
			else if (mode == RISING_EDGE)
    1ace:	8a 81       	ldd	r24, Y+2	; 0x02
    1ad0:	83 30       	cpi	r24, 0x03	; 3
    1ad2:	39 f4       	brne	.+14     	; 0x1ae2 <Ext_Interrupt_SncControl+0x92>
			{
				SET_BIT(EXT_INT_MCUCSR_REG,6);
    1ad4:	a4 e5       	ldi	r26, 0x54	; 84
    1ad6:	b0 e0       	ldi	r27, 0x00	; 0
    1ad8:	e4 e5       	ldi	r30, 0x54	; 84
    1ada:	f0 e0       	ldi	r31, 0x00	; 0
    1adc:	80 81       	ld	r24, Z
    1ade:	80 64       	ori	r24, 0x40	; 64
    1ae0:	8c 93       	st	X, r24
			{
				/*	Do Nothing	*/
			}
			break;
	}
}
    1ae2:	0f 90       	pop	r0
    1ae4:	0f 90       	pop	r0
    1ae6:	0f 90       	pop	r0
    1ae8:	0f 90       	pop	r0
    1aea:	cf 91       	pop	r28
    1aec:	df 91       	pop	r29
    1aee:	08 95       	ret

00001af0 <Dio_voidconfigChanel>:

#include "../../../../Source/00_Library/Bit_Math.h"
#include "../../../../Source/00_Library/Std_Types.h"

void Dio_voidconfigChanel(dio_port_t port, dio_pin_t pin,dio_dir_t dir)
{
    1af0:	df 93       	push	r29
    1af2:	cf 93       	push	r28
    1af4:	00 d0       	rcall	.+0      	; 0x1af6 <Dio_voidconfigChanel+0x6>
    1af6:	00 d0       	rcall	.+0      	; 0x1af8 <Dio_voidconfigChanel+0x8>
    1af8:	0f 92       	push	r0
    1afa:	cd b7       	in	r28, 0x3d	; 61
    1afc:	de b7       	in	r29, 0x3e	; 62
    1afe:	89 83       	std	Y+1, r24	; 0x01
    1b00:	6a 83       	std	Y+2, r22	; 0x02
    1b02:	4b 83       	std	Y+3, r20	; 0x03
	switch(port)
    1b04:	89 81       	ldd	r24, Y+1	; 0x01
    1b06:	28 2f       	mov	r18, r24
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	3d 83       	std	Y+5, r19	; 0x05
    1b0c:	2c 83       	std	Y+4, r18	; 0x04
    1b0e:	8c 81       	ldd	r24, Y+4	; 0x04
    1b10:	9d 81       	ldd	r25, Y+5	; 0x05
    1b12:	81 30       	cpi	r24, 0x01	; 1
    1b14:	91 05       	cpc	r25, r1
    1b16:	09 f4       	brne	.+2      	; 0x1b1a <Dio_voidconfigChanel+0x2a>
    1b18:	43 c0       	rjmp	.+134    	; 0x1ba0 <Dio_voidconfigChanel+0xb0>
    1b1a:	2c 81       	ldd	r18, Y+4	; 0x04
    1b1c:	3d 81       	ldd	r19, Y+5	; 0x05
    1b1e:	22 30       	cpi	r18, 0x02	; 2
    1b20:	31 05       	cpc	r19, r1
    1b22:	2c f4       	brge	.+10     	; 0x1b2e <Dio_voidconfigChanel+0x3e>
    1b24:	8c 81       	ldd	r24, Y+4	; 0x04
    1b26:	9d 81       	ldd	r25, Y+5	; 0x05
    1b28:	00 97       	sbiw	r24, 0x00	; 0
    1b2a:	71 f0       	breq	.+28     	; 0x1b48 <Dio_voidconfigChanel+0x58>
    1b2c:	bc c0       	rjmp	.+376    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
    1b2e:	2c 81       	ldd	r18, Y+4	; 0x04
    1b30:	3d 81       	ldd	r19, Y+5	; 0x05
    1b32:	22 30       	cpi	r18, 0x02	; 2
    1b34:	31 05       	cpc	r19, r1
    1b36:	09 f4       	brne	.+2      	; 0x1b3a <Dio_voidconfigChanel+0x4a>
    1b38:	5f c0       	rjmp	.+190    	; 0x1bf8 <Dio_voidconfigChanel+0x108>
    1b3a:	8c 81       	ldd	r24, Y+4	; 0x04
    1b3c:	9d 81       	ldd	r25, Y+5	; 0x05
    1b3e:	83 30       	cpi	r24, 0x03	; 3
    1b40:	91 05       	cpc	r25, r1
    1b42:	09 f4       	brne	.+2      	; 0x1b46 <Dio_voidconfigChanel+0x56>
    1b44:	85 c0       	rjmp	.+266    	; 0x1c50 <Dio_voidconfigChanel+0x160>
    1b46:	af c0       	rjmp	.+350    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
	{
	case DIO_PORTA:
		if (dir == DIO_INPUT)
    1b48:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4a:	88 23       	and	r24, r24
    1b4c:	a9 f4       	brne	.+42     	; 0x1b78 <Dio_voidconfigChanel+0x88>
		{
			CLEAR_BIT(DIO_DDRA_REG,pin);
    1b4e:	aa e3       	ldi	r26, 0x3A	; 58
    1b50:	b0 e0       	ldi	r27, 0x00	; 0
    1b52:	ea e3       	ldi	r30, 0x3A	; 58
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	80 81       	ld	r24, Z
    1b58:	48 2f       	mov	r20, r24
    1b5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b5c:	28 2f       	mov	r18, r24
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	02 2e       	mov	r0, r18
    1b66:	02 c0       	rjmp	.+4      	; 0x1b6c <Dio_voidconfigChanel+0x7c>
    1b68:	88 0f       	add	r24, r24
    1b6a:	99 1f       	adc	r25, r25
    1b6c:	0a 94       	dec	r0
    1b6e:	e2 f7       	brpl	.-8      	; 0x1b68 <Dio_voidconfigChanel+0x78>
    1b70:	80 95       	com	r24
    1b72:	84 23       	and	r24, r20
    1b74:	8c 93       	st	X, r24
    1b76:	97 c0       	rjmp	.+302    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRA_REG,pin);
    1b78:	aa e3       	ldi	r26, 0x3A	; 58
    1b7a:	b0 e0       	ldi	r27, 0x00	; 0
    1b7c:	ea e3       	ldi	r30, 0x3A	; 58
    1b7e:	f0 e0       	ldi	r31, 0x00	; 0
    1b80:	80 81       	ld	r24, Z
    1b82:	48 2f       	mov	r20, r24
    1b84:	8a 81       	ldd	r24, Y+2	; 0x02
    1b86:	28 2f       	mov	r18, r24
    1b88:	30 e0       	ldi	r19, 0x00	; 0
    1b8a:	81 e0       	ldi	r24, 0x01	; 1
    1b8c:	90 e0       	ldi	r25, 0x00	; 0
    1b8e:	02 2e       	mov	r0, r18
    1b90:	02 c0       	rjmp	.+4      	; 0x1b96 <Dio_voidconfigChanel+0xa6>
    1b92:	88 0f       	add	r24, r24
    1b94:	99 1f       	adc	r25, r25
    1b96:	0a 94       	dec	r0
    1b98:	e2 f7       	brpl	.-8      	; 0x1b92 <Dio_voidconfigChanel+0xa2>
    1b9a:	84 2b       	or	r24, r20
    1b9c:	8c 93       	st	X, r24
    1b9e:	83 c0       	rjmp	.+262    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		break;

	case DIO_PORTB:
		if (dir == DIO_INPUT)
    1ba0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba2:	88 23       	and	r24, r24
    1ba4:	a9 f4       	brne	.+42     	; 0x1bd0 <Dio_voidconfigChanel+0xe0>
		{
			CLEAR_BIT(DIO_DDRB_REG,pin);
    1ba6:	a7 e3       	ldi	r26, 0x37	; 55
    1ba8:	b0 e0       	ldi	r27, 0x00	; 0
    1baa:	e7 e3       	ldi	r30, 0x37	; 55
    1bac:	f0 e0       	ldi	r31, 0x00	; 0
    1bae:	80 81       	ld	r24, Z
    1bb0:	48 2f       	mov	r20, r24
    1bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb4:	28 2f       	mov	r18, r24
    1bb6:	30 e0       	ldi	r19, 0x00	; 0
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	02 2e       	mov	r0, r18
    1bbe:	02 c0       	rjmp	.+4      	; 0x1bc4 <Dio_voidconfigChanel+0xd4>
    1bc0:	88 0f       	add	r24, r24
    1bc2:	99 1f       	adc	r25, r25
    1bc4:	0a 94       	dec	r0
    1bc6:	e2 f7       	brpl	.-8      	; 0x1bc0 <Dio_voidconfigChanel+0xd0>
    1bc8:	80 95       	com	r24
    1bca:	84 23       	and	r24, r20
    1bcc:	8c 93       	st	X, r24
    1bce:	6b c0       	rjmp	.+214    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRB_REG,pin);
    1bd0:	a7 e3       	ldi	r26, 0x37	; 55
    1bd2:	b0 e0       	ldi	r27, 0x00	; 0
    1bd4:	e7 e3       	ldi	r30, 0x37	; 55
    1bd6:	f0 e0       	ldi	r31, 0x00	; 0
    1bd8:	80 81       	ld	r24, Z
    1bda:	48 2f       	mov	r20, r24
    1bdc:	8a 81       	ldd	r24, Y+2	; 0x02
    1bde:	28 2f       	mov	r18, r24
    1be0:	30 e0       	ldi	r19, 0x00	; 0
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	02 2e       	mov	r0, r18
    1be8:	02 c0       	rjmp	.+4      	; 0x1bee <Dio_voidconfigChanel+0xfe>
    1bea:	88 0f       	add	r24, r24
    1bec:	99 1f       	adc	r25, r25
    1bee:	0a 94       	dec	r0
    1bf0:	e2 f7       	brpl	.-8      	; 0x1bea <Dio_voidconfigChanel+0xfa>
    1bf2:	84 2b       	or	r24, r20
    1bf4:	8c 93       	st	X, r24
    1bf6:	57 c0       	rjmp	.+174    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		break;

	case DIO_PORTC:
		if (dir == DIO_INPUT)
    1bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bfa:	88 23       	and	r24, r24
    1bfc:	a9 f4       	brne	.+42     	; 0x1c28 <Dio_voidconfigChanel+0x138>
		{
			CLEAR_BIT(DIO_DDRC_REG,pin);
    1bfe:	a4 e3       	ldi	r26, 0x34	; 52
    1c00:	b0 e0       	ldi	r27, 0x00	; 0
    1c02:	e4 e3       	ldi	r30, 0x34	; 52
    1c04:	f0 e0       	ldi	r31, 0x00	; 0
    1c06:	80 81       	ld	r24, Z
    1c08:	48 2f       	mov	r20, r24
    1c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c0c:	28 2f       	mov	r18, r24
    1c0e:	30 e0       	ldi	r19, 0x00	; 0
    1c10:	81 e0       	ldi	r24, 0x01	; 1
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	02 2e       	mov	r0, r18
    1c16:	02 c0       	rjmp	.+4      	; 0x1c1c <Dio_voidconfigChanel+0x12c>
    1c18:	88 0f       	add	r24, r24
    1c1a:	99 1f       	adc	r25, r25
    1c1c:	0a 94       	dec	r0
    1c1e:	e2 f7       	brpl	.-8      	; 0x1c18 <Dio_voidconfigChanel+0x128>
    1c20:	80 95       	com	r24
    1c22:	84 23       	and	r24, r20
    1c24:	8c 93       	st	X, r24
    1c26:	3f c0       	rjmp	.+126    	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRC_REG,pin);
    1c28:	a4 e3       	ldi	r26, 0x34	; 52
    1c2a:	b0 e0       	ldi	r27, 0x00	; 0
    1c2c:	e4 e3       	ldi	r30, 0x34	; 52
    1c2e:	f0 e0       	ldi	r31, 0x00	; 0
    1c30:	80 81       	ld	r24, Z
    1c32:	48 2f       	mov	r20, r24
    1c34:	8a 81       	ldd	r24, Y+2	; 0x02
    1c36:	28 2f       	mov	r18, r24
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	81 e0       	ldi	r24, 0x01	; 1
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	02 2e       	mov	r0, r18
    1c40:	02 c0       	rjmp	.+4      	; 0x1c46 <Dio_voidconfigChanel+0x156>
    1c42:	88 0f       	add	r24, r24
    1c44:	99 1f       	adc	r25, r25
    1c46:	0a 94       	dec	r0
    1c48:	e2 f7       	brpl	.-8      	; 0x1c42 <Dio_voidconfigChanel+0x152>
    1c4a:	84 2b       	or	r24, r20
    1c4c:	8c 93       	st	X, r24
    1c4e:	2b c0       	rjmp	.+86     	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		break;

	case DIO_PORTD:
		if (dir == DIO_INPUT)
    1c50:	8b 81       	ldd	r24, Y+3	; 0x03
    1c52:	88 23       	and	r24, r24
    1c54:	a9 f4       	brne	.+42     	; 0x1c80 <Dio_voidconfigChanel+0x190>
		{
			CLEAR_BIT(DIO_DDRD_REG,pin);
    1c56:	a1 e3       	ldi	r26, 0x31	; 49
    1c58:	b0 e0       	ldi	r27, 0x00	; 0
    1c5a:	e1 e3       	ldi	r30, 0x31	; 49
    1c5c:	f0 e0       	ldi	r31, 0x00	; 0
    1c5e:	80 81       	ld	r24, Z
    1c60:	48 2f       	mov	r20, r24
    1c62:	8a 81       	ldd	r24, Y+2	; 0x02
    1c64:	28 2f       	mov	r18, r24
    1c66:	30 e0       	ldi	r19, 0x00	; 0
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	02 2e       	mov	r0, r18
    1c6e:	02 c0       	rjmp	.+4      	; 0x1c74 <Dio_voidconfigChanel+0x184>
    1c70:	88 0f       	add	r24, r24
    1c72:	99 1f       	adc	r25, r25
    1c74:	0a 94       	dec	r0
    1c76:	e2 f7       	brpl	.-8      	; 0x1c70 <Dio_voidconfigChanel+0x180>
    1c78:	80 95       	com	r24
    1c7a:	84 23       	and	r24, r20
    1c7c:	8c 93       	st	X, r24
    1c7e:	13 c0       	rjmp	.+38     	; 0x1ca6 <Dio_voidconfigChanel+0x1b6>
		}
		else
		{
			SET_BIT(DIO_DDRD_REG,pin);
    1c80:	a1 e3       	ldi	r26, 0x31	; 49
    1c82:	b0 e0       	ldi	r27, 0x00	; 0
    1c84:	e1 e3       	ldi	r30, 0x31	; 49
    1c86:	f0 e0       	ldi	r31, 0x00	; 0
    1c88:	80 81       	ld	r24, Z
    1c8a:	48 2f       	mov	r20, r24
    1c8c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8e:	28 2f       	mov	r18, r24
    1c90:	30 e0       	ldi	r19, 0x00	; 0
    1c92:	81 e0       	ldi	r24, 0x01	; 1
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	02 2e       	mov	r0, r18
    1c98:	02 c0       	rjmp	.+4      	; 0x1c9e <Dio_voidconfigChanel+0x1ae>
    1c9a:	88 0f       	add	r24, r24
    1c9c:	99 1f       	adc	r25, r25
    1c9e:	0a 94       	dec	r0
    1ca0:	e2 f7       	brpl	.-8      	; 0x1c9a <Dio_voidconfigChanel+0x1aa>
    1ca2:	84 2b       	or	r24, r20
    1ca4:	8c 93       	st	X, r24
		}
		break;
	}
}
    1ca6:	0f 90       	pop	r0
    1ca8:	0f 90       	pop	r0
    1caa:	0f 90       	pop	r0
    1cac:	0f 90       	pop	r0
    1cae:	0f 90       	pop	r0
    1cb0:	cf 91       	pop	r28
    1cb2:	df 91       	pop	r29
    1cb4:	08 95       	ret

00001cb6 <Dio_voidwriteChanel>:
void Dio_voidwriteChanel(dio_port_t port, dio_pin_t pin,dio_level_t level)
{
    1cb6:	df 93       	push	r29
    1cb8:	cf 93       	push	r28
    1cba:	00 d0       	rcall	.+0      	; 0x1cbc <Dio_voidwriteChanel+0x6>
    1cbc:	00 d0       	rcall	.+0      	; 0x1cbe <Dio_voidwriteChanel+0x8>
    1cbe:	0f 92       	push	r0
    1cc0:	cd b7       	in	r28, 0x3d	; 61
    1cc2:	de b7       	in	r29, 0x3e	; 62
    1cc4:	89 83       	std	Y+1, r24	; 0x01
    1cc6:	6a 83       	std	Y+2, r22	; 0x02
    1cc8:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
    1cca:	89 81       	ldd	r24, Y+1	; 0x01
    1ccc:	28 2f       	mov	r18, r24
    1cce:	30 e0       	ldi	r19, 0x00	; 0
    1cd0:	3d 83       	std	Y+5, r19	; 0x05
    1cd2:	2c 83       	std	Y+4, r18	; 0x04
    1cd4:	8c 81       	ldd	r24, Y+4	; 0x04
    1cd6:	9d 81       	ldd	r25, Y+5	; 0x05
    1cd8:	81 30       	cpi	r24, 0x01	; 1
    1cda:	91 05       	cpc	r25, r1
    1cdc:	09 f4       	brne	.+2      	; 0x1ce0 <Dio_voidwriteChanel+0x2a>
    1cde:	43 c0       	rjmp	.+134    	; 0x1d66 <Dio_voidwriteChanel+0xb0>
    1ce0:	2c 81       	ldd	r18, Y+4	; 0x04
    1ce2:	3d 81       	ldd	r19, Y+5	; 0x05
    1ce4:	22 30       	cpi	r18, 0x02	; 2
    1ce6:	31 05       	cpc	r19, r1
    1ce8:	2c f4       	brge	.+10     	; 0x1cf4 <Dio_voidwriteChanel+0x3e>
    1cea:	8c 81       	ldd	r24, Y+4	; 0x04
    1cec:	9d 81       	ldd	r25, Y+5	; 0x05
    1cee:	00 97       	sbiw	r24, 0x00	; 0
    1cf0:	71 f0       	breq	.+28     	; 0x1d0e <Dio_voidwriteChanel+0x58>
    1cf2:	bc c0       	rjmp	.+376    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
    1cf4:	2c 81       	ldd	r18, Y+4	; 0x04
    1cf6:	3d 81       	ldd	r19, Y+5	; 0x05
    1cf8:	22 30       	cpi	r18, 0x02	; 2
    1cfa:	31 05       	cpc	r19, r1
    1cfc:	09 f4       	brne	.+2      	; 0x1d00 <Dio_voidwriteChanel+0x4a>
    1cfe:	5f c0       	rjmp	.+190    	; 0x1dbe <Dio_voidwriteChanel+0x108>
    1d00:	8c 81       	ldd	r24, Y+4	; 0x04
    1d02:	9d 81       	ldd	r25, Y+5	; 0x05
    1d04:	83 30       	cpi	r24, 0x03	; 3
    1d06:	91 05       	cpc	r25, r1
    1d08:	09 f4       	brne	.+2      	; 0x1d0c <Dio_voidwriteChanel+0x56>
    1d0a:	85 c0       	rjmp	.+266    	; 0x1e16 <Dio_voidwriteChanel+0x160>
    1d0c:	af c0       	rjmp	.+350    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
	{
	case DIO_PORTA:
		if (level == DIO_HIGH)
    1d0e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d10:	81 30       	cpi	r24, 0x01	; 1
    1d12:	a1 f4       	brne	.+40     	; 0x1d3c <Dio_voidwriteChanel+0x86>
		{
			SET_BIT(DIO_PORTA_REG,pin);
    1d14:	ab e3       	ldi	r26, 0x3B	; 59
    1d16:	b0 e0       	ldi	r27, 0x00	; 0
    1d18:	eb e3       	ldi	r30, 0x3B	; 59
    1d1a:	f0 e0       	ldi	r31, 0x00	; 0
    1d1c:	80 81       	ld	r24, Z
    1d1e:	48 2f       	mov	r20, r24
    1d20:	8a 81       	ldd	r24, Y+2	; 0x02
    1d22:	28 2f       	mov	r18, r24
    1d24:	30 e0       	ldi	r19, 0x00	; 0
    1d26:	81 e0       	ldi	r24, 0x01	; 1
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	02 2e       	mov	r0, r18
    1d2c:	02 c0       	rjmp	.+4      	; 0x1d32 <Dio_voidwriteChanel+0x7c>
    1d2e:	88 0f       	add	r24, r24
    1d30:	99 1f       	adc	r25, r25
    1d32:	0a 94       	dec	r0
    1d34:	e2 f7       	brpl	.-8      	; 0x1d2e <Dio_voidwriteChanel+0x78>
    1d36:	84 2b       	or	r24, r20
    1d38:	8c 93       	st	X, r24
    1d3a:	98 c0       	rjmp	.+304    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTA_REG,pin);
    1d3c:	ab e3       	ldi	r26, 0x3B	; 59
    1d3e:	b0 e0       	ldi	r27, 0x00	; 0
    1d40:	eb e3       	ldi	r30, 0x3B	; 59
    1d42:	f0 e0       	ldi	r31, 0x00	; 0
    1d44:	80 81       	ld	r24, Z
    1d46:	48 2f       	mov	r20, r24
    1d48:	8a 81       	ldd	r24, Y+2	; 0x02
    1d4a:	28 2f       	mov	r18, r24
    1d4c:	30 e0       	ldi	r19, 0x00	; 0
    1d4e:	81 e0       	ldi	r24, 0x01	; 1
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	02 2e       	mov	r0, r18
    1d54:	02 c0       	rjmp	.+4      	; 0x1d5a <Dio_voidwriteChanel+0xa4>
    1d56:	88 0f       	add	r24, r24
    1d58:	99 1f       	adc	r25, r25
    1d5a:	0a 94       	dec	r0
    1d5c:	e2 f7       	brpl	.-8      	; 0x1d56 <Dio_voidwriteChanel+0xa0>
    1d5e:	80 95       	com	r24
    1d60:	84 23       	and	r24, r20
    1d62:	8c 93       	st	X, r24
    1d64:	83 c0       	rjmp	.+262    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		break;

	case DIO_PORTB:
		if (level == DIO_HIGH)
    1d66:	8b 81       	ldd	r24, Y+3	; 0x03
    1d68:	81 30       	cpi	r24, 0x01	; 1
    1d6a:	a1 f4       	brne	.+40     	; 0x1d94 <Dio_voidwriteChanel+0xde>
		{
			SET_BIT(DIO_PORTB_REG,pin);
    1d6c:	a8 e3       	ldi	r26, 0x38	; 56
    1d6e:	b0 e0       	ldi	r27, 0x00	; 0
    1d70:	e8 e3       	ldi	r30, 0x38	; 56
    1d72:	f0 e0       	ldi	r31, 0x00	; 0
    1d74:	80 81       	ld	r24, Z
    1d76:	48 2f       	mov	r20, r24
    1d78:	8a 81       	ldd	r24, Y+2	; 0x02
    1d7a:	28 2f       	mov	r18, r24
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	81 e0       	ldi	r24, 0x01	; 1
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	02 2e       	mov	r0, r18
    1d84:	02 c0       	rjmp	.+4      	; 0x1d8a <Dio_voidwriteChanel+0xd4>
    1d86:	88 0f       	add	r24, r24
    1d88:	99 1f       	adc	r25, r25
    1d8a:	0a 94       	dec	r0
    1d8c:	e2 f7       	brpl	.-8      	; 0x1d86 <Dio_voidwriteChanel+0xd0>
    1d8e:	84 2b       	or	r24, r20
    1d90:	8c 93       	st	X, r24
    1d92:	6c c0       	rjmp	.+216    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTB_REG,pin);
    1d94:	a8 e3       	ldi	r26, 0x38	; 56
    1d96:	b0 e0       	ldi	r27, 0x00	; 0
    1d98:	e8 e3       	ldi	r30, 0x38	; 56
    1d9a:	f0 e0       	ldi	r31, 0x00	; 0
    1d9c:	80 81       	ld	r24, Z
    1d9e:	48 2f       	mov	r20, r24
    1da0:	8a 81       	ldd	r24, Y+2	; 0x02
    1da2:	28 2f       	mov	r18, r24
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	81 e0       	ldi	r24, 0x01	; 1
    1da8:	90 e0       	ldi	r25, 0x00	; 0
    1daa:	02 2e       	mov	r0, r18
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <Dio_voidwriteChanel+0xfc>
    1dae:	88 0f       	add	r24, r24
    1db0:	99 1f       	adc	r25, r25
    1db2:	0a 94       	dec	r0
    1db4:	e2 f7       	brpl	.-8      	; 0x1dae <Dio_voidwriteChanel+0xf8>
    1db6:	80 95       	com	r24
    1db8:	84 23       	and	r24, r20
    1dba:	8c 93       	st	X, r24
    1dbc:	57 c0       	rjmp	.+174    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		break;

	case DIO_PORTC:
		if (level == DIO_HIGH)
    1dbe:	8b 81       	ldd	r24, Y+3	; 0x03
    1dc0:	81 30       	cpi	r24, 0x01	; 1
    1dc2:	a1 f4       	brne	.+40     	; 0x1dec <Dio_voidwriteChanel+0x136>
		{
			SET_BIT(DIO_PORTC_REG,pin);
    1dc4:	a5 e3       	ldi	r26, 0x35	; 53
    1dc6:	b0 e0       	ldi	r27, 0x00	; 0
    1dc8:	e5 e3       	ldi	r30, 0x35	; 53
    1dca:	f0 e0       	ldi	r31, 0x00	; 0
    1dcc:	80 81       	ld	r24, Z
    1dce:	48 2f       	mov	r20, r24
    1dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd2:	28 2f       	mov	r18, r24
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	81 e0       	ldi	r24, 0x01	; 1
    1dd8:	90 e0       	ldi	r25, 0x00	; 0
    1dda:	02 2e       	mov	r0, r18
    1ddc:	02 c0       	rjmp	.+4      	; 0x1de2 <Dio_voidwriteChanel+0x12c>
    1dde:	88 0f       	add	r24, r24
    1de0:	99 1f       	adc	r25, r25
    1de2:	0a 94       	dec	r0
    1de4:	e2 f7       	brpl	.-8      	; 0x1dde <Dio_voidwriteChanel+0x128>
    1de6:	84 2b       	or	r24, r20
    1de8:	8c 93       	st	X, r24
    1dea:	40 c0       	rjmp	.+128    	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTC_REG,pin);
    1dec:	a5 e3       	ldi	r26, 0x35	; 53
    1dee:	b0 e0       	ldi	r27, 0x00	; 0
    1df0:	e5 e3       	ldi	r30, 0x35	; 53
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	80 81       	ld	r24, Z
    1df6:	48 2f       	mov	r20, r24
    1df8:	8a 81       	ldd	r24, Y+2	; 0x02
    1dfa:	28 2f       	mov	r18, r24
    1dfc:	30 e0       	ldi	r19, 0x00	; 0
    1dfe:	81 e0       	ldi	r24, 0x01	; 1
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	02 2e       	mov	r0, r18
    1e04:	02 c0       	rjmp	.+4      	; 0x1e0a <Dio_voidwriteChanel+0x154>
    1e06:	88 0f       	add	r24, r24
    1e08:	99 1f       	adc	r25, r25
    1e0a:	0a 94       	dec	r0
    1e0c:	e2 f7       	brpl	.-8      	; 0x1e06 <Dio_voidwriteChanel+0x150>
    1e0e:	80 95       	com	r24
    1e10:	84 23       	and	r24, r20
    1e12:	8c 93       	st	X, r24
    1e14:	2b c0       	rjmp	.+86     	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		break;

	case DIO_PORTD:
		if (level == DIO_HIGH)
    1e16:	8b 81       	ldd	r24, Y+3	; 0x03
    1e18:	81 30       	cpi	r24, 0x01	; 1
    1e1a:	a1 f4       	brne	.+40     	; 0x1e44 <Dio_voidwriteChanel+0x18e>
		{
			SET_BIT(DIO_PORTD_REG,pin);
    1e1c:	a2 e3       	ldi	r26, 0x32	; 50
    1e1e:	b0 e0       	ldi	r27, 0x00	; 0
    1e20:	e2 e3       	ldi	r30, 0x32	; 50
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	48 2f       	mov	r20, r24
    1e28:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2a:	28 2f       	mov	r18, r24
    1e2c:	30 e0       	ldi	r19, 0x00	; 0
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	02 2e       	mov	r0, r18
    1e34:	02 c0       	rjmp	.+4      	; 0x1e3a <Dio_voidwriteChanel+0x184>
    1e36:	88 0f       	add	r24, r24
    1e38:	99 1f       	adc	r25, r25
    1e3a:	0a 94       	dec	r0
    1e3c:	e2 f7       	brpl	.-8      	; 0x1e36 <Dio_voidwriteChanel+0x180>
    1e3e:	84 2b       	or	r24, r20
    1e40:	8c 93       	st	X, r24
    1e42:	14 c0       	rjmp	.+40     	; 0x1e6c <Dio_voidwriteChanel+0x1b6>
		}
		else
		{
			CLEAR_BIT(DIO_PORTD_REG,pin);
    1e44:	a2 e3       	ldi	r26, 0x32	; 50
    1e46:	b0 e0       	ldi	r27, 0x00	; 0
    1e48:	e2 e3       	ldi	r30, 0x32	; 50
    1e4a:	f0 e0       	ldi	r31, 0x00	; 0
    1e4c:	80 81       	ld	r24, Z
    1e4e:	48 2f       	mov	r20, r24
    1e50:	8a 81       	ldd	r24, Y+2	; 0x02
    1e52:	28 2f       	mov	r18, r24
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	81 e0       	ldi	r24, 0x01	; 1
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	02 2e       	mov	r0, r18
    1e5c:	02 c0       	rjmp	.+4      	; 0x1e62 <Dio_voidwriteChanel+0x1ac>
    1e5e:	88 0f       	add	r24, r24
    1e60:	99 1f       	adc	r25, r25
    1e62:	0a 94       	dec	r0
    1e64:	e2 f7       	brpl	.-8      	; 0x1e5e <Dio_voidwriteChanel+0x1a8>
    1e66:	80 95       	com	r24
    1e68:	84 23       	and	r24, r20
    1e6a:	8c 93       	st	X, r24
		}
		break;
	}
}
    1e6c:	0f 90       	pop	r0
    1e6e:	0f 90       	pop	r0
    1e70:	0f 90       	pop	r0
    1e72:	0f 90       	pop	r0
    1e74:	0f 90       	pop	r0
    1e76:	cf 91       	pop	r28
    1e78:	df 91       	pop	r29
    1e7a:	08 95       	ret

00001e7c <Dio_voidWriteChanelGroup>:

void Dio_voidWriteChanelGroup(dio_port_t port, u8 data, u8 mask)
{
    1e7c:	df 93       	push	r29
    1e7e:	cf 93       	push	r28
    1e80:	00 d0       	rcall	.+0      	; 0x1e82 <Dio_voidWriteChanelGroup+0x6>
    1e82:	00 d0       	rcall	.+0      	; 0x1e84 <Dio_voidWriteChanelGroup+0x8>
    1e84:	0f 92       	push	r0
    1e86:	cd b7       	in	r28, 0x3d	; 61
    1e88:	de b7       	in	r29, 0x3e	; 62
    1e8a:	89 83       	std	Y+1, r24	; 0x01
    1e8c:	6a 83       	std	Y+2, r22	; 0x02
    1e8e:	4b 83       	std	Y+3, r20	; 0x03
	switch(port)
    1e90:	89 81       	ldd	r24, Y+1	; 0x01
    1e92:	28 2f       	mov	r18, r24
    1e94:	30 e0       	ldi	r19, 0x00	; 0
    1e96:	3d 83       	std	Y+5, r19	; 0x05
    1e98:	2c 83       	std	Y+4, r18	; 0x04
    1e9a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e9c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e9e:	81 30       	cpi	r24, 0x01	; 1
    1ea0:	91 05       	cpc	r25, r1
    1ea2:	01 f1       	breq	.+64     	; 0x1ee4 <Dio_voidWriteChanelGroup+0x68>
    1ea4:	2c 81       	ldd	r18, Y+4	; 0x04
    1ea6:	3d 81       	ldd	r19, Y+5	; 0x05
    1ea8:	22 30       	cpi	r18, 0x02	; 2
    1eaa:	31 05       	cpc	r19, r1
    1eac:	2c f4       	brge	.+10     	; 0x1eb8 <Dio_voidWriteChanelGroup+0x3c>
    1eae:	8c 81       	ldd	r24, Y+4	; 0x04
    1eb0:	9d 81       	ldd	r25, Y+5	; 0x05
    1eb2:	00 97       	sbiw	r24, 0x00	; 0
    1eb4:	61 f0       	breq	.+24     	; 0x1ece <Dio_voidWriteChanelGroup+0x52>
    1eb6:	36 c0       	rjmp	.+108    	; 0x1f24 <Dio_voidWriteChanelGroup+0xa8>
    1eb8:	2c 81       	ldd	r18, Y+4	; 0x04
    1eba:	3d 81       	ldd	r19, Y+5	; 0x05
    1ebc:	22 30       	cpi	r18, 0x02	; 2
    1ebe:	31 05       	cpc	r19, r1
    1ec0:	e1 f0       	breq	.+56     	; 0x1efa <Dio_voidWriteChanelGroup+0x7e>
    1ec2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ec4:	9d 81       	ldd	r25, Y+5	; 0x05
    1ec6:	83 30       	cpi	r24, 0x03	; 3
    1ec8:	91 05       	cpc	r25, r1
    1eca:	11 f1       	breq	.+68     	; 0x1f10 <Dio_voidWriteChanelGroup+0x94>
    1ecc:	2b c0       	rjmp	.+86     	; 0x1f24 <Dio_voidWriteChanelGroup+0xa8>
	{
	case DIO_PORTA:
		DIO_PORTA_REG = (DIO_PORTA_REG & mask)|(data);
    1ece:	ab e3       	ldi	r26, 0x3B	; 59
    1ed0:	b0 e0       	ldi	r27, 0x00	; 0
    1ed2:	eb e3       	ldi	r30, 0x3B	; 59
    1ed4:	f0 e0       	ldi	r31, 0x00	; 0
    1ed6:	90 81       	ld	r25, Z
    1ed8:	8b 81       	ldd	r24, Y+3	; 0x03
    1eda:	98 23       	and	r25, r24
    1edc:	8a 81       	ldd	r24, Y+2	; 0x02
    1ede:	89 2b       	or	r24, r25
    1ee0:	8c 93       	st	X, r24
    1ee2:	20 c0       	rjmp	.+64     	; 0x1f24 <Dio_voidWriteChanelGroup+0xa8>
		break;

	case DIO_PORTB:
		DIO_PORTB_REG = (DIO_PORTB_REG & mask)|(data);
    1ee4:	a8 e3       	ldi	r26, 0x38	; 56
    1ee6:	b0 e0       	ldi	r27, 0x00	; 0
    1ee8:	e8 e3       	ldi	r30, 0x38	; 56
    1eea:	f0 e0       	ldi	r31, 0x00	; 0
    1eec:	90 81       	ld	r25, Z
    1eee:	8b 81       	ldd	r24, Y+3	; 0x03
    1ef0:	98 23       	and	r25, r24
    1ef2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef4:	89 2b       	or	r24, r25
    1ef6:	8c 93       	st	X, r24
    1ef8:	15 c0       	rjmp	.+42     	; 0x1f24 <Dio_voidWriteChanelGroup+0xa8>
		break;

	case DIO_PORTC:
		DIO_PORTC_REG = (DIO_PORTC_REG & mask)|(data);
    1efa:	a5 e3       	ldi	r26, 0x35	; 53
    1efc:	b0 e0       	ldi	r27, 0x00	; 0
    1efe:	e5 e3       	ldi	r30, 0x35	; 53
    1f00:	f0 e0       	ldi	r31, 0x00	; 0
    1f02:	90 81       	ld	r25, Z
    1f04:	8b 81       	ldd	r24, Y+3	; 0x03
    1f06:	98 23       	and	r25, r24
    1f08:	8a 81       	ldd	r24, Y+2	; 0x02
    1f0a:	89 2b       	or	r24, r25
    1f0c:	8c 93       	st	X, r24
    1f0e:	0a c0       	rjmp	.+20     	; 0x1f24 <Dio_voidWriteChanelGroup+0xa8>
		break;

	case DIO_PORTD:
		DIO_PORTD_REG = (DIO_PORTD_REG & mask)|(data);
    1f10:	a2 e3       	ldi	r26, 0x32	; 50
    1f12:	b0 e0       	ldi	r27, 0x00	; 0
    1f14:	e2 e3       	ldi	r30, 0x32	; 50
    1f16:	f0 e0       	ldi	r31, 0x00	; 0
    1f18:	90 81       	ld	r25, Z
    1f1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f1c:	98 23       	and	r25, r24
    1f1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f20:	89 2b       	or	r24, r25
    1f22:	8c 93       	st	X, r24
		break;
	}
}
    1f24:	0f 90       	pop	r0
    1f26:	0f 90       	pop	r0
    1f28:	0f 90       	pop	r0
    1f2a:	0f 90       	pop	r0
    1f2c:	0f 90       	pop	r0
    1f2e:	cf 91       	pop	r28
    1f30:	df 91       	pop	r29
    1f32:	08 95       	ret

00001f34 <Dio_udtreadChanel>:

dio_level_t Dio_udtreadChanel(dio_port_t port, dio_pin_t pin)
{
    1f34:	df 93       	push	r29
    1f36:	cf 93       	push	r28
    1f38:	00 d0       	rcall	.+0      	; 0x1f3a <Dio_udtreadChanel+0x6>
    1f3a:	00 d0       	rcall	.+0      	; 0x1f3c <Dio_udtreadChanel+0x8>
    1f3c:	0f 92       	push	r0
    1f3e:	cd b7       	in	r28, 0x3d	; 61
    1f40:	de b7       	in	r29, 0x3e	; 62
    1f42:	8a 83       	std	Y+2, r24	; 0x02
    1f44:	6b 83       	std	Y+3, r22	; 0x03
	dio_level_t loc_result = DIO_LOW;
    1f46:	19 82       	std	Y+1, r1	; 0x01

	switch (port)
    1f48:	8a 81       	ldd	r24, Y+2	; 0x02
    1f4a:	28 2f       	mov	r18, r24
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	3d 83       	std	Y+5, r19	; 0x05
    1f50:	2c 83       	std	Y+4, r18	; 0x04
    1f52:	4c 81       	ldd	r20, Y+4	; 0x04
    1f54:	5d 81       	ldd	r21, Y+5	; 0x05
    1f56:	41 30       	cpi	r20, 0x01	; 1
    1f58:	51 05       	cpc	r21, r1
    1f5a:	79 f1       	breq	.+94     	; 0x1fba <Dio_udtreadChanel+0x86>
    1f5c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f5e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f60:	82 30       	cpi	r24, 0x02	; 2
    1f62:	91 05       	cpc	r25, r1
    1f64:	34 f4       	brge	.+12     	; 0x1f72 <Dio_udtreadChanel+0x3e>
    1f66:	2c 81       	ldd	r18, Y+4	; 0x04
    1f68:	3d 81       	ldd	r19, Y+5	; 0x05
    1f6a:	21 15       	cp	r18, r1
    1f6c:	31 05       	cpc	r19, r1
    1f6e:	69 f0       	breq	.+26     	; 0x1f8a <Dio_udtreadChanel+0x56>
    1f70:	6b c0       	rjmp	.+214    	; 0x2048 <Dio_udtreadChanel+0x114>
    1f72:	4c 81       	ldd	r20, Y+4	; 0x04
    1f74:	5d 81       	ldd	r21, Y+5	; 0x05
    1f76:	42 30       	cpi	r20, 0x02	; 2
    1f78:	51 05       	cpc	r21, r1
    1f7a:	b9 f1       	breq	.+110    	; 0x1fea <Dio_udtreadChanel+0xb6>
    1f7c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f7e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f80:	83 30       	cpi	r24, 0x03	; 3
    1f82:	91 05       	cpc	r25, r1
    1f84:	09 f4       	brne	.+2      	; 0x1f88 <Dio_udtreadChanel+0x54>
    1f86:	49 c0       	rjmp	.+146    	; 0x201a <Dio_udtreadChanel+0xe6>
    1f88:	5f c0       	rjmp	.+190    	; 0x2048 <Dio_udtreadChanel+0x114>
	{
	case DIO_PORTA:
		if (CHECK_BIT(DIO_PINA_REG,pin) == 1)
    1f8a:	e9 e3       	ldi	r30, 0x39	; 57
    1f8c:	f0 e0       	ldi	r31, 0x00	; 0
    1f8e:	80 81       	ld	r24, Z
    1f90:	28 2f       	mov	r18, r24
    1f92:	30 e0       	ldi	r19, 0x00	; 0
    1f94:	8b 81       	ldd	r24, Y+3	; 0x03
    1f96:	88 2f       	mov	r24, r24
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	a9 01       	movw	r20, r18
    1f9c:	02 c0       	rjmp	.+4      	; 0x1fa2 <Dio_udtreadChanel+0x6e>
    1f9e:	55 95       	asr	r21
    1fa0:	47 95       	ror	r20
    1fa2:	8a 95       	dec	r24
    1fa4:	e2 f7       	brpl	.-8      	; 0x1f9e <Dio_udtreadChanel+0x6a>
    1fa6:	ca 01       	movw	r24, r20
    1fa8:	81 70       	andi	r24, 0x01	; 1
    1faa:	90 70       	andi	r25, 0x00	; 0
    1fac:	88 23       	and	r24, r24
    1fae:	19 f0       	breq	.+6      	; 0x1fb6 <Dio_udtreadChanel+0x82>
		{
			loc_result = DIO_HIGH;
    1fb0:	81 e0       	ldi	r24, 0x01	; 1
    1fb2:	89 83       	std	Y+1, r24	; 0x01
    1fb4:	49 c0       	rjmp	.+146    	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    1fb6:	19 82       	std	Y+1, r1	; 0x01
    1fb8:	47 c0       	rjmp	.+142    	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		break;

	case DIO_PORTB:
		if (CHECK_BIT(DIO_PINB_REG,pin) == 1)
    1fba:	e6 e3       	ldi	r30, 0x36	; 54
    1fbc:	f0 e0       	ldi	r31, 0x00	; 0
    1fbe:	80 81       	ld	r24, Z
    1fc0:	28 2f       	mov	r18, r24
    1fc2:	30 e0       	ldi	r19, 0x00	; 0
    1fc4:	8b 81       	ldd	r24, Y+3	; 0x03
    1fc6:	88 2f       	mov	r24, r24
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	a9 01       	movw	r20, r18
    1fcc:	02 c0       	rjmp	.+4      	; 0x1fd2 <Dio_udtreadChanel+0x9e>
    1fce:	55 95       	asr	r21
    1fd0:	47 95       	ror	r20
    1fd2:	8a 95       	dec	r24
    1fd4:	e2 f7       	brpl	.-8      	; 0x1fce <Dio_udtreadChanel+0x9a>
    1fd6:	ca 01       	movw	r24, r20
    1fd8:	81 70       	andi	r24, 0x01	; 1
    1fda:	90 70       	andi	r25, 0x00	; 0
    1fdc:	88 23       	and	r24, r24
    1fde:	19 f0       	breq	.+6      	; 0x1fe6 <Dio_udtreadChanel+0xb2>
		{
			loc_result = DIO_HIGH;
    1fe0:	81 e0       	ldi	r24, 0x01	; 1
    1fe2:	89 83       	std	Y+1, r24	; 0x01
    1fe4:	31 c0       	rjmp	.+98     	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    1fe6:	19 82       	std	Y+1, r1	; 0x01
    1fe8:	2f c0       	rjmp	.+94     	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		break;

	case DIO_PORTC:
		if (CHECK_BIT(DIO_PINC_REG,pin) == 1)
    1fea:	e3 e3       	ldi	r30, 0x33	; 51
    1fec:	f0 e0       	ldi	r31, 0x00	; 0
    1fee:	80 81       	ld	r24, Z
    1ff0:	28 2f       	mov	r18, r24
    1ff2:	30 e0       	ldi	r19, 0x00	; 0
    1ff4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ff6:	88 2f       	mov	r24, r24
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	a9 01       	movw	r20, r18
    1ffc:	02 c0       	rjmp	.+4      	; 0x2002 <Dio_udtreadChanel+0xce>
    1ffe:	55 95       	asr	r21
    2000:	47 95       	ror	r20
    2002:	8a 95       	dec	r24
    2004:	e2 f7       	brpl	.-8      	; 0x1ffe <Dio_udtreadChanel+0xca>
    2006:	ca 01       	movw	r24, r20
    2008:	81 70       	andi	r24, 0x01	; 1
    200a:	90 70       	andi	r25, 0x00	; 0
    200c:	88 23       	and	r24, r24
    200e:	19 f0       	breq	.+6      	; 0x2016 <Dio_udtreadChanel+0xe2>
		{
			loc_result = DIO_HIGH;
    2010:	81 e0       	ldi	r24, 0x01	; 1
    2012:	89 83       	std	Y+1, r24	; 0x01
    2014:	19 c0       	rjmp	.+50     	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    2016:	19 82       	std	Y+1, r1	; 0x01
    2018:	17 c0       	rjmp	.+46     	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		break;

	case DIO_PORTD:
		if (CHECK_BIT(DIO_PIND_REG,pin) == 1)
    201a:	e0 e3       	ldi	r30, 0x30	; 48
    201c:	f0 e0       	ldi	r31, 0x00	; 0
    201e:	80 81       	ld	r24, Z
    2020:	28 2f       	mov	r18, r24
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	8b 81       	ldd	r24, Y+3	; 0x03
    2026:	88 2f       	mov	r24, r24
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	a9 01       	movw	r20, r18
    202c:	02 c0       	rjmp	.+4      	; 0x2032 <Dio_udtreadChanel+0xfe>
    202e:	55 95       	asr	r21
    2030:	47 95       	ror	r20
    2032:	8a 95       	dec	r24
    2034:	e2 f7       	brpl	.-8      	; 0x202e <Dio_udtreadChanel+0xfa>
    2036:	ca 01       	movw	r24, r20
    2038:	81 70       	andi	r24, 0x01	; 1
    203a:	90 70       	andi	r25, 0x00	; 0
    203c:	88 23       	and	r24, r24
    203e:	19 f0       	breq	.+6      	; 0x2046 <Dio_udtreadChanel+0x112>
		{
			loc_result = DIO_HIGH;
    2040:	81 e0       	ldi	r24, 0x01	; 1
    2042:	89 83       	std	Y+1, r24	; 0x01
    2044:	01 c0       	rjmp	.+2      	; 0x2048 <Dio_udtreadChanel+0x114>
		}
		else
		{
			loc_result = DIO_LOW;
    2046:	19 82       	std	Y+1, r1	; 0x01
		}
		break;
	}
	return loc_result;
    2048:	89 81       	ldd	r24, Y+1	; 0x01
}
    204a:	0f 90       	pop	r0
    204c:	0f 90       	pop	r0
    204e:	0f 90       	pop	r0
    2050:	0f 90       	pop	r0
    2052:	0f 90       	pop	r0
    2054:	cf 91       	pop	r28
    2056:	df 91       	pop	r29
    2058:	08 95       	ret

0000205a <Dio_voidflipChanel>:

void Dio_voidflipChanel(dio_port_t port, dio_pin_t pin)
{
    205a:	df 93       	push	r29
    205c:	cf 93       	push	r28
    205e:	00 d0       	rcall	.+0      	; 0x2060 <Dio_voidflipChanel+0x6>
    2060:	00 d0       	rcall	.+0      	; 0x2062 <Dio_voidflipChanel+0x8>
    2062:	cd b7       	in	r28, 0x3d	; 61
    2064:	de b7       	in	r29, 0x3e	; 62
    2066:	89 83       	std	Y+1, r24	; 0x01
    2068:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
    206a:	89 81       	ldd	r24, Y+1	; 0x01
    206c:	28 2f       	mov	r18, r24
    206e:	30 e0       	ldi	r19, 0x00	; 0
    2070:	3c 83       	std	Y+4, r19	; 0x04
    2072:	2b 83       	std	Y+3, r18	; 0x03
    2074:	8b 81       	ldd	r24, Y+3	; 0x03
    2076:	9c 81       	ldd	r25, Y+4	; 0x04
    2078:	81 30       	cpi	r24, 0x01	; 1
    207a:	91 05       	cpc	r25, r1
    207c:	49 f1       	breq	.+82     	; 0x20d0 <Dio_voidflipChanel+0x76>
    207e:	2b 81       	ldd	r18, Y+3	; 0x03
    2080:	3c 81       	ldd	r19, Y+4	; 0x04
    2082:	22 30       	cpi	r18, 0x02	; 2
    2084:	31 05       	cpc	r19, r1
    2086:	2c f4       	brge	.+10     	; 0x2092 <Dio_voidflipChanel+0x38>
    2088:	8b 81       	ldd	r24, Y+3	; 0x03
    208a:	9c 81       	ldd	r25, Y+4	; 0x04
    208c:	00 97       	sbiw	r24, 0x00	; 0
    208e:	61 f0       	breq	.+24     	; 0x20a8 <Dio_voidflipChanel+0x4e>
    2090:	5a c0       	rjmp	.+180    	; 0x2146 <Dio_voidflipChanel+0xec>
    2092:	2b 81       	ldd	r18, Y+3	; 0x03
    2094:	3c 81       	ldd	r19, Y+4	; 0x04
    2096:	22 30       	cpi	r18, 0x02	; 2
    2098:	31 05       	cpc	r19, r1
    209a:	71 f1       	breq	.+92     	; 0x20f8 <Dio_voidflipChanel+0x9e>
    209c:	8b 81       	ldd	r24, Y+3	; 0x03
    209e:	9c 81       	ldd	r25, Y+4	; 0x04
    20a0:	83 30       	cpi	r24, 0x03	; 3
    20a2:	91 05       	cpc	r25, r1
    20a4:	e9 f1       	breq	.+122    	; 0x2120 <Dio_voidflipChanel+0xc6>
    20a6:	4f c0       	rjmp	.+158    	; 0x2146 <Dio_voidflipChanel+0xec>
	{
	case DIO_PORTA:
		TOGGLE_BIT(DIO_PORTA_REG,pin);
    20a8:	ab e3       	ldi	r26, 0x3B	; 59
    20aa:	b0 e0       	ldi	r27, 0x00	; 0
    20ac:	eb e3       	ldi	r30, 0x3B	; 59
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	80 81       	ld	r24, Z
    20b2:	48 2f       	mov	r20, r24
    20b4:	8a 81       	ldd	r24, Y+2	; 0x02
    20b6:	28 2f       	mov	r18, r24
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	81 e0       	ldi	r24, 0x01	; 1
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	02 2e       	mov	r0, r18
    20c0:	02 c0       	rjmp	.+4      	; 0x20c6 <Dio_voidflipChanel+0x6c>
    20c2:	88 0f       	add	r24, r24
    20c4:	99 1f       	adc	r25, r25
    20c6:	0a 94       	dec	r0
    20c8:	e2 f7       	brpl	.-8      	; 0x20c2 <Dio_voidflipChanel+0x68>
    20ca:	84 27       	eor	r24, r20
    20cc:	8c 93       	st	X, r24
    20ce:	3b c0       	rjmp	.+118    	; 0x2146 <Dio_voidflipChanel+0xec>
		break;

	case DIO_PORTB:
		TOGGLE_BIT(DIO_PORTB_REG,pin);
    20d0:	a8 e3       	ldi	r26, 0x38	; 56
    20d2:	b0 e0       	ldi	r27, 0x00	; 0
    20d4:	e8 e3       	ldi	r30, 0x38	; 56
    20d6:	f0 e0       	ldi	r31, 0x00	; 0
    20d8:	80 81       	ld	r24, Z
    20da:	48 2f       	mov	r20, r24
    20dc:	8a 81       	ldd	r24, Y+2	; 0x02
    20de:	28 2f       	mov	r18, r24
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	81 e0       	ldi	r24, 0x01	; 1
    20e4:	90 e0       	ldi	r25, 0x00	; 0
    20e6:	02 2e       	mov	r0, r18
    20e8:	02 c0       	rjmp	.+4      	; 0x20ee <Dio_voidflipChanel+0x94>
    20ea:	88 0f       	add	r24, r24
    20ec:	99 1f       	adc	r25, r25
    20ee:	0a 94       	dec	r0
    20f0:	e2 f7       	brpl	.-8      	; 0x20ea <Dio_voidflipChanel+0x90>
    20f2:	84 27       	eor	r24, r20
    20f4:	8c 93       	st	X, r24
    20f6:	27 c0       	rjmp	.+78     	; 0x2146 <Dio_voidflipChanel+0xec>
		break;

	case DIO_PORTC:
		TOGGLE_BIT(DIO_PORTC_REG,pin);
    20f8:	a5 e3       	ldi	r26, 0x35	; 53
    20fa:	b0 e0       	ldi	r27, 0x00	; 0
    20fc:	e5 e3       	ldi	r30, 0x35	; 53
    20fe:	f0 e0       	ldi	r31, 0x00	; 0
    2100:	80 81       	ld	r24, Z
    2102:	48 2f       	mov	r20, r24
    2104:	8a 81       	ldd	r24, Y+2	; 0x02
    2106:	28 2f       	mov	r18, r24
    2108:	30 e0       	ldi	r19, 0x00	; 0
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	02 2e       	mov	r0, r18
    2110:	02 c0       	rjmp	.+4      	; 0x2116 <Dio_voidflipChanel+0xbc>
    2112:	88 0f       	add	r24, r24
    2114:	99 1f       	adc	r25, r25
    2116:	0a 94       	dec	r0
    2118:	e2 f7       	brpl	.-8      	; 0x2112 <Dio_voidflipChanel+0xb8>
    211a:	84 27       	eor	r24, r20
    211c:	8c 93       	st	X, r24
    211e:	13 c0       	rjmp	.+38     	; 0x2146 <Dio_voidflipChanel+0xec>
		break;

	case DIO_PORTD:
		TOGGLE_BIT(DIO_PORTD_REG,pin);
    2120:	a2 e3       	ldi	r26, 0x32	; 50
    2122:	b0 e0       	ldi	r27, 0x00	; 0
    2124:	e2 e3       	ldi	r30, 0x32	; 50
    2126:	f0 e0       	ldi	r31, 0x00	; 0
    2128:	80 81       	ld	r24, Z
    212a:	48 2f       	mov	r20, r24
    212c:	8a 81       	ldd	r24, Y+2	; 0x02
    212e:	28 2f       	mov	r18, r24
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	81 e0       	ldi	r24, 0x01	; 1
    2134:	90 e0       	ldi	r25, 0x00	; 0
    2136:	02 2e       	mov	r0, r18
    2138:	02 c0       	rjmp	.+4      	; 0x213e <Dio_voidflipChanel+0xe4>
    213a:	88 0f       	add	r24, r24
    213c:	99 1f       	adc	r25, r25
    213e:	0a 94       	dec	r0
    2140:	e2 f7       	brpl	.-8      	; 0x213a <Dio_voidflipChanel+0xe0>
    2142:	84 27       	eor	r24, r20
    2144:	8c 93       	st	X, r24
		break;
	}
}
    2146:	0f 90       	pop	r0
    2148:	0f 90       	pop	r0
    214a:	0f 90       	pop	r0
    214c:	0f 90       	pop	r0
    214e:	cf 91       	pop	r28
    2150:	df 91       	pop	r29
    2152:	08 95       	ret

00002154 <__udivmodhi4>:
    2154:	aa 1b       	sub	r26, r26
    2156:	bb 1b       	sub	r27, r27
    2158:	51 e1       	ldi	r21, 0x11	; 17
    215a:	07 c0       	rjmp	.+14     	; 0x216a <__udivmodhi4_ep>

0000215c <__udivmodhi4_loop>:
    215c:	aa 1f       	adc	r26, r26
    215e:	bb 1f       	adc	r27, r27
    2160:	a6 17       	cp	r26, r22
    2162:	b7 07       	cpc	r27, r23
    2164:	10 f0       	brcs	.+4      	; 0x216a <__udivmodhi4_ep>
    2166:	a6 1b       	sub	r26, r22
    2168:	b7 0b       	sbc	r27, r23

0000216a <__udivmodhi4_ep>:
    216a:	88 1f       	adc	r24, r24
    216c:	99 1f       	adc	r25, r25
    216e:	5a 95       	dec	r21
    2170:	a9 f7       	brne	.-22     	; 0x215c <__udivmodhi4_loop>
    2172:	80 95       	com	r24
    2174:	90 95       	com	r25
    2176:	bc 01       	movw	r22, r24
    2178:	cd 01       	movw	r24, r26
    217a:	08 95       	ret

0000217c <__udivmodsi4>:
    217c:	a1 e2       	ldi	r26, 0x21	; 33
    217e:	1a 2e       	mov	r1, r26
    2180:	aa 1b       	sub	r26, r26
    2182:	bb 1b       	sub	r27, r27
    2184:	fd 01       	movw	r30, r26
    2186:	0d c0       	rjmp	.+26     	; 0x21a2 <__udivmodsi4_ep>

00002188 <__udivmodsi4_loop>:
    2188:	aa 1f       	adc	r26, r26
    218a:	bb 1f       	adc	r27, r27
    218c:	ee 1f       	adc	r30, r30
    218e:	ff 1f       	adc	r31, r31
    2190:	a2 17       	cp	r26, r18
    2192:	b3 07       	cpc	r27, r19
    2194:	e4 07       	cpc	r30, r20
    2196:	f5 07       	cpc	r31, r21
    2198:	20 f0       	brcs	.+8      	; 0x21a2 <__udivmodsi4_ep>
    219a:	a2 1b       	sub	r26, r18
    219c:	b3 0b       	sbc	r27, r19
    219e:	e4 0b       	sbc	r30, r20
    21a0:	f5 0b       	sbc	r31, r21

000021a2 <__udivmodsi4_ep>:
    21a2:	66 1f       	adc	r22, r22
    21a4:	77 1f       	adc	r23, r23
    21a6:	88 1f       	adc	r24, r24
    21a8:	99 1f       	adc	r25, r25
    21aa:	1a 94       	dec	r1
    21ac:	69 f7       	brne	.-38     	; 0x2188 <__udivmodsi4_loop>
    21ae:	60 95       	com	r22
    21b0:	70 95       	com	r23
    21b2:	80 95       	com	r24
    21b4:	90 95       	com	r25
    21b6:	9b 01       	movw	r18, r22
    21b8:	ac 01       	movw	r20, r24
    21ba:	bd 01       	movw	r22, r26
    21bc:	cf 01       	movw	r24, r30
    21be:	08 95       	ret

000021c0 <__prologue_saves__>:
    21c0:	2f 92       	push	r2
    21c2:	3f 92       	push	r3
    21c4:	4f 92       	push	r4
    21c6:	5f 92       	push	r5
    21c8:	6f 92       	push	r6
    21ca:	7f 92       	push	r7
    21cc:	8f 92       	push	r8
    21ce:	9f 92       	push	r9
    21d0:	af 92       	push	r10
    21d2:	bf 92       	push	r11
    21d4:	cf 92       	push	r12
    21d6:	df 92       	push	r13
    21d8:	ef 92       	push	r14
    21da:	ff 92       	push	r15
    21dc:	0f 93       	push	r16
    21de:	1f 93       	push	r17
    21e0:	cf 93       	push	r28
    21e2:	df 93       	push	r29
    21e4:	cd b7       	in	r28, 0x3d	; 61
    21e6:	de b7       	in	r29, 0x3e	; 62
    21e8:	ca 1b       	sub	r28, r26
    21ea:	db 0b       	sbc	r29, r27
    21ec:	0f b6       	in	r0, 0x3f	; 63
    21ee:	f8 94       	cli
    21f0:	de bf       	out	0x3e, r29	; 62
    21f2:	0f be       	out	0x3f, r0	; 63
    21f4:	cd bf       	out	0x3d, r28	; 61
    21f6:	09 94       	ijmp

000021f8 <__epilogue_restores__>:
    21f8:	2a 88       	ldd	r2, Y+18	; 0x12
    21fa:	39 88       	ldd	r3, Y+17	; 0x11
    21fc:	48 88       	ldd	r4, Y+16	; 0x10
    21fe:	5f 84       	ldd	r5, Y+15	; 0x0f
    2200:	6e 84       	ldd	r6, Y+14	; 0x0e
    2202:	7d 84       	ldd	r7, Y+13	; 0x0d
    2204:	8c 84       	ldd	r8, Y+12	; 0x0c
    2206:	9b 84       	ldd	r9, Y+11	; 0x0b
    2208:	aa 84       	ldd	r10, Y+10	; 0x0a
    220a:	b9 84       	ldd	r11, Y+9	; 0x09
    220c:	c8 84       	ldd	r12, Y+8	; 0x08
    220e:	df 80       	ldd	r13, Y+7	; 0x07
    2210:	ee 80       	ldd	r14, Y+6	; 0x06
    2212:	fd 80       	ldd	r15, Y+5	; 0x05
    2214:	0c 81       	ldd	r16, Y+4	; 0x04
    2216:	1b 81       	ldd	r17, Y+3	; 0x03
    2218:	aa 81       	ldd	r26, Y+2	; 0x02
    221a:	b9 81       	ldd	r27, Y+1	; 0x01
    221c:	ce 0f       	add	r28, r30
    221e:	d1 1d       	adc	r29, r1
    2220:	0f b6       	in	r0, 0x3f	; 63
    2222:	f8 94       	cli
    2224:	de bf       	out	0x3e, r29	; 62
    2226:	0f be       	out	0x3f, r0	; 63
    2228:	cd bf       	out	0x3d, r28	; 61
    222a:	ed 01       	movw	r28, r26
    222c:	08 95       	ret

0000222e <itoa>:
    222e:	fb 01       	movw	r30, r22
    2230:	9f 01       	movw	r18, r30
    2232:	e8 94       	clt
    2234:	42 30       	cpi	r20, 0x02	; 2
    2236:	c4 f0       	brlt	.+48     	; 0x2268 <itoa+0x3a>
    2238:	45 32       	cpi	r20, 0x25	; 37
    223a:	b4 f4       	brge	.+44     	; 0x2268 <itoa+0x3a>
    223c:	4a 30       	cpi	r20, 0x0A	; 10
    223e:	29 f4       	brne	.+10     	; 0x224a <itoa+0x1c>
    2240:	97 fb       	bst	r25, 7
    2242:	1e f4       	brtc	.+6      	; 0x224a <itoa+0x1c>
    2244:	90 95       	com	r25
    2246:	81 95       	neg	r24
    2248:	9f 4f       	sbci	r25, 0xFF	; 255
    224a:	64 2f       	mov	r22, r20
    224c:	77 27       	eor	r23, r23
    224e:	0e 94 aa 10 	call	0x2154	; 0x2154 <__udivmodhi4>
    2252:	80 5d       	subi	r24, 0xD0	; 208
    2254:	8a 33       	cpi	r24, 0x3A	; 58
    2256:	0c f0       	brlt	.+2      	; 0x225a <itoa+0x2c>
    2258:	89 5d       	subi	r24, 0xD9	; 217
    225a:	81 93       	st	Z+, r24
    225c:	cb 01       	movw	r24, r22
    225e:	00 97       	sbiw	r24, 0x00	; 0
    2260:	a1 f7       	brne	.-24     	; 0x224a <itoa+0x1c>
    2262:	16 f4       	brtc	.+4      	; 0x2268 <itoa+0x3a>
    2264:	5d e2       	ldi	r21, 0x2D	; 45
    2266:	51 93       	st	Z+, r21
    2268:	10 82       	st	Z, r1
    226a:	c9 01       	movw	r24, r18
    226c:	0c 94 83 13 	jmp	0x2706	; 0x2706 <strrev>

00002270 <ltoa>:
    2270:	fa 01       	movw	r30, r20
    2272:	cf 93       	push	r28
    2274:	ff 93       	push	r31
    2276:	ef 93       	push	r30
    2278:	22 30       	cpi	r18, 0x02	; 2
    227a:	44 f1       	brlt	.+80     	; 0x22cc <ltoa+0x5c>
    227c:	25 32       	cpi	r18, 0x25	; 37
    227e:	34 f5       	brge	.+76     	; 0x22cc <ltoa+0x5c>
    2280:	c2 2f       	mov	r28, r18
    2282:	e8 94       	clt
    2284:	ca 30       	cpi	r28, 0x0A	; 10
    2286:	49 f4       	brne	.+18     	; 0x229a <ltoa+0x2a>
    2288:	97 fb       	bst	r25, 7
    228a:	3e f4       	brtc	.+14     	; 0x229a <ltoa+0x2a>
    228c:	90 95       	com	r25
    228e:	80 95       	com	r24
    2290:	70 95       	com	r23
    2292:	61 95       	neg	r22
    2294:	7f 4f       	sbci	r23, 0xFF	; 255
    2296:	8f 4f       	sbci	r24, 0xFF	; 255
    2298:	9f 4f       	sbci	r25, 0xFF	; 255
    229a:	2c 2f       	mov	r18, r28
    229c:	33 27       	eor	r19, r19
    229e:	44 27       	eor	r20, r20
    22a0:	55 27       	eor	r21, r21
    22a2:	ff 93       	push	r31
    22a4:	ef 93       	push	r30
    22a6:	0e 94 be 10 	call	0x217c	; 0x217c <__udivmodsi4>
    22aa:	ef 91       	pop	r30
    22ac:	ff 91       	pop	r31
    22ae:	60 5d       	subi	r22, 0xD0	; 208
    22b0:	6a 33       	cpi	r22, 0x3A	; 58
    22b2:	0c f0       	brlt	.+2      	; 0x22b6 <ltoa+0x46>
    22b4:	69 5d       	subi	r22, 0xD9	; 217
    22b6:	61 93       	st	Z+, r22
    22b8:	b9 01       	movw	r22, r18
    22ba:	ca 01       	movw	r24, r20
    22bc:	60 50       	subi	r22, 0x00	; 0
    22be:	70 40       	sbci	r23, 0x00	; 0
    22c0:	80 40       	sbci	r24, 0x00	; 0
    22c2:	90 40       	sbci	r25, 0x00	; 0
    22c4:	51 f7       	brne	.-44     	; 0x229a <ltoa+0x2a>
    22c6:	16 f4       	brtc	.+4      	; 0x22cc <ltoa+0x5c>
    22c8:	cd e2       	ldi	r28, 0x2D	; 45
    22ca:	c1 93       	st	Z+, r28
    22cc:	10 82       	st	Z, r1
    22ce:	8f 91       	pop	r24
    22d0:	9f 91       	pop	r25
    22d2:	cf 91       	pop	r28
    22d4:	0c 94 83 13 	jmp	0x2706	; 0x2706 <strrev>

000022d8 <sprintf>:
    22d8:	ae e0       	ldi	r26, 0x0E	; 14
    22da:	b0 e0       	ldi	r27, 0x00	; 0
    22dc:	e2 e7       	ldi	r30, 0x72	; 114
    22de:	f1 e1       	ldi	r31, 0x11	; 17
    22e0:	0c 94 ee 10 	jmp	0x21dc	; 0x21dc <__prologue_saves__+0x1c>
    22e4:	0d 89       	ldd	r16, Y+21	; 0x15
    22e6:	1e 89       	ldd	r17, Y+22	; 0x16
    22e8:	86 e0       	ldi	r24, 0x06	; 6
    22ea:	8c 83       	std	Y+4, r24	; 0x04
    22ec:	1a 83       	std	Y+2, r17	; 0x02
    22ee:	09 83       	std	Y+1, r16	; 0x01
    22f0:	8f ef       	ldi	r24, 0xFF	; 255
    22f2:	9f e7       	ldi	r25, 0x7F	; 127
    22f4:	9e 83       	std	Y+6, r25	; 0x06
    22f6:	8d 83       	std	Y+5, r24	; 0x05
    22f8:	9e 01       	movw	r18, r28
    22fa:	27 5e       	subi	r18, 0xE7	; 231
    22fc:	3f 4f       	sbci	r19, 0xFF	; 255
    22fe:	ce 01       	movw	r24, r28
    2300:	01 96       	adiw	r24, 0x01	; 1
    2302:	6f 89       	ldd	r22, Y+23	; 0x17
    2304:	78 8d       	ldd	r23, Y+24	; 0x18
    2306:	a9 01       	movw	r20, r18
    2308:	0e 94 90 11 	call	0x2320	; 0x2320 <vfprintf>
    230c:	2f 81       	ldd	r18, Y+7	; 0x07
    230e:	38 85       	ldd	r19, Y+8	; 0x08
    2310:	02 0f       	add	r16, r18
    2312:	13 1f       	adc	r17, r19
    2314:	f8 01       	movw	r30, r16
    2316:	10 82       	st	Z, r1
    2318:	2e 96       	adiw	r28, 0x0e	; 14
    231a:	e4 e0       	ldi	r30, 0x04	; 4
    231c:	0c 94 0a 11 	jmp	0x2214	; 0x2214 <__epilogue_restores__+0x1c>

00002320 <vfprintf>:
    2320:	ab e0       	ldi	r26, 0x0B	; 11
    2322:	b0 e0       	ldi	r27, 0x00	; 0
    2324:	e6 e9       	ldi	r30, 0x96	; 150
    2326:	f1 e1       	ldi	r31, 0x11	; 17
    2328:	0c 94 e0 10 	jmp	0x21c0	; 0x21c0 <__prologue_saves__>
    232c:	3c 01       	movw	r6, r24
    232e:	2b 01       	movw	r4, r22
    2330:	5a 01       	movw	r10, r20
    2332:	fc 01       	movw	r30, r24
    2334:	17 82       	std	Z+7, r1	; 0x07
    2336:	16 82       	std	Z+6, r1	; 0x06
    2338:	83 81       	ldd	r24, Z+3	; 0x03
    233a:	81 fd       	sbrc	r24, 1
    233c:	03 c0       	rjmp	.+6      	; 0x2344 <vfprintf+0x24>
    233e:	6f ef       	ldi	r22, 0xFF	; 255
    2340:	7f ef       	ldi	r23, 0xFF	; 255
    2342:	c6 c1       	rjmp	.+908    	; 0x26d0 <vfprintf+0x3b0>
    2344:	9a e0       	ldi	r25, 0x0A	; 10
    2346:	89 2e       	mov	r8, r25
    2348:	1e 01       	movw	r2, r28
    234a:	08 94       	sec
    234c:	21 1c       	adc	r2, r1
    234e:	31 1c       	adc	r3, r1
    2350:	f3 01       	movw	r30, r6
    2352:	23 81       	ldd	r18, Z+3	; 0x03
    2354:	f2 01       	movw	r30, r4
    2356:	23 fd       	sbrc	r18, 3
    2358:	85 91       	lpm	r24, Z+
    235a:	23 ff       	sbrs	r18, 3
    235c:	81 91       	ld	r24, Z+
    235e:	2f 01       	movw	r4, r30
    2360:	88 23       	and	r24, r24
    2362:	09 f4       	brne	.+2      	; 0x2366 <vfprintf+0x46>
    2364:	b2 c1       	rjmp	.+868    	; 0x26ca <vfprintf+0x3aa>
    2366:	85 32       	cpi	r24, 0x25	; 37
    2368:	39 f4       	brne	.+14     	; 0x2378 <vfprintf+0x58>
    236a:	23 fd       	sbrc	r18, 3
    236c:	85 91       	lpm	r24, Z+
    236e:	23 ff       	sbrs	r18, 3
    2370:	81 91       	ld	r24, Z+
    2372:	2f 01       	movw	r4, r30
    2374:	85 32       	cpi	r24, 0x25	; 37
    2376:	29 f4       	brne	.+10     	; 0x2382 <vfprintf+0x62>
    2378:	90 e0       	ldi	r25, 0x00	; 0
    237a:	b3 01       	movw	r22, r6
    237c:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    2380:	e7 cf       	rjmp	.-50     	; 0x2350 <vfprintf+0x30>
    2382:	98 2f       	mov	r25, r24
    2384:	ff 24       	eor	r15, r15
    2386:	ee 24       	eor	r14, r14
    2388:	99 24       	eor	r9, r9
    238a:	ff e1       	ldi	r31, 0x1F	; 31
    238c:	ff 15       	cp	r31, r15
    238e:	d0 f0       	brcs	.+52     	; 0x23c4 <vfprintf+0xa4>
    2390:	9b 32       	cpi	r25, 0x2B	; 43
    2392:	69 f0       	breq	.+26     	; 0x23ae <vfprintf+0x8e>
    2394:	9c 32       	cpi	r25, 0x2C	; 44
    2396:	28 f4       	brcc	.+10     	; 0x23a2 <vfprintf+0x82>
    2398:	90 32       	cpi	r25, 0x20	; 32
    239a:	59 f0       	breq	.+22     	; 0x23b2 <vfprintf+0x92>
    239c:	93 32       	cpi	r25, 0x23	; 35
    239e:	91 f4       	brne	.+36     	; 0x23c4 <vfprintf+0xa4>
    23a0:	0e c0       	rjmp	.+28     	; 0x23be <vfprintf+0x9e>
    23a2:	9d 32       	cpi	r25, 0x2D	; 45
    23a4:	49 f0       	breq	.+18     	; 0x23b8 <vfprintf+0x98>
    23a6:	90 33       	cpi	r25, 0x30	; 48
    23a8:	69 f4       	brne	.+26     	; 0x23c4 <vfprintf+0xa4>
    23aa:	41 e0       	ldi	r20, 0x01	; 1
    23ac:	24 c0       	rjmp	.+72     	; 0x23f6 <vfprintf+0xd6>
    23ae:	52 e0       	ldi	r21, 0x02	; 2
    23b0:	f5 2a       	or	r15, r21
    23b2:	84 e0       	ldi	r24, 0x04	; 4
    23b4:	f8 2a       	or	r15, r24
    23b6:	28 c0       	rjmp	.+80     	; 0x2408 <vfprintf+0xe8>
    23b8:	98 e0       	ldi	r25, 0x08	; 8
    23ba:	f9 2a       	or	r15, r25
    23bc:	25 c0       	rjmp	.+74     	; 0x2408 <vfprintf+0xe8>
    23be:	e0 e1       	ldi	r30, 0x10	; 16
    23c0:	fe 2a       	or	r15, r30
    23c2:	22 c0       	rjmp	.+68     	; 0x2408 <vfprintf+0xe8>
    23c4:	f7 fc       	sbrc	r15, 7
    23c6:	29 c0       	rjmp	.+82     	; 0x241a <vfprintf+0xfa>
    23c8:	89 2f       	mov	r24, r25
    23ca:	80 53       	subi	r24, 0x30	; 48
    23cc:	8a 30       	cpi	r24, 0x0A	; 10
    23ce:	70 f4       	brcc	.+28     	; 0x23ec <vfprintf+0xcc>
    23d0:	f6 fe       	sbrs	r15, 6
    23d2:	05 c0       	rjmp	.+10     	; 0x23de <vfprintf+0xbe>
    23d4:	98 9c       	mul	r9, r8
    23d6:	90 2c       	mov	r9, r0
    23d8:	11 24       	eor	r1, r1
    23da:	98 0e       	add	r9, r24
    23dc:	15 c0       	rjmp	.+42     	; 0x2408 <vfprintf+0xe8>
    23de:	e8 9c       	mul	r14, r8
    23e0:	e0 2c       	mov	r14, r0
    23e2:	11 24       	eor	r1, r1
    23e4:	e8 0e       	add	r14, r24
    23e6:	f0 e2       	ldi	r31, 0x20	; 32
    23e8:	ff 2a       	or	r15, r31
    23ea:	0e c0       	rjmp	.+28     	; 0x2408 <vfprintf+0xe8>
    23ec:	9e 32       	cpi	r25, 0x2E	; 46
    23ee:	29 f4       	brne	.+10     	; 0x23fa <vfprintf+0xda>
    23f0:	f6 fc       	sbrc	r15, 6
    23f2:	6b c1       	rjmp	.+726    	; 0x26ca <vfprintf+0x3aa>
    23f4:	40 e4       	ldi	r20, 0x40	; 64
    23f6:	f4 2a       	or	r15, r20
    23f8:	07 c0       	rjmp	.+14     	; 0x2408 <vfprintf+0xe8>
    23fa:	9c 36       	cpi	r25, 0x6C	; 108
    23fc:	19 f4       	brne	.+6      	; 0x2404 <vfprintf+0xe4>
    23fe:	50 e8       	ldi	r21, 0x80	; 128
    2400:	f5 2a       	or	r15, r21
    2402:	02 c0       	rjmp	.+4      	; 0x2408 <vfprintf+0xe8>
    2404:	98 36       	cpi	r25, 0x68	; 104
    2406:	49 f4       	brne	.+18     	; 0x241a <vfprintf+0xfa>
    2408:	f2 01       	movw	r30, r4
    240a:	23 fd       	sbrc	r18, 3
    240c:	95 91       	lpm	r25, Z+
    240e:	23 ff       	sbrs	r18, 3
    2410:	91 91       	ld	r25, Z+
    2412:	2f 01       	movw	r4, r30
    2414:	99 23       	and	r25, r25
    2416:	09 f0       	breq	.+2      	; 0x241a <vfprintf+0xfa>
    2418:	b8 cf       	rjmp	.-144    	; 0x238a <vfprintf+0x6a>
    241a:	89 2f       	mov	r24, r25
    241c:	85 54       	subi	r24, 0x45	; 69
    241e:	83 30       	cpi	r24, 0x03	; 3
    2420:	18 f0       	brcs	.+6      	; 0x2428 <vfprintf+0x108>
    2422:	80 52       	subi	r24, 0x20	; 32
    2424:	83 30       	cpi	r24, 0x03	; 3
    2426:	38 f4       	brcc	.+14     	; 0x2436 <vfprintf+0x116>
    2428:	44 e0       	ldi	r20, 0x04	; 4
    242a:	50 e0       	ldi	r21, 0x00	; 0
    242c:	a4 0e       	add	r10, r20
    242e:	b5 1e       	adc	r11, r21
    2430:	5f e3       	ldi	r21, 0x3F	; 63
    2432:	59 83       	std	Y+1, r21	; 0x01
    2434:	0f c0       	rjmp	.+30     	; 0x2454 <vfprintf+0x134>
    2436:	93 36       	cpi	r25, 0x63	; 99
    2438:	31 f0       	breq	.+12     	; 0x2446 <vfprintf+0x126>
    243a:	93 37       	cpi	r25, 0x73	; 115
    243c:	79 f0       	breq	.+30     	; 0x245c <vfprintf+0x13c>
    243e:	93 35       	cpi	r25, 0x53	; 83
    2440:	09 f0       	breq	.+2      	; 0x2444 <vfprintf+0x124>
    2442:	56 c0       	rjmp	.+172    	; 0x24f0 <vfprintf+0x1d0>
    2444:	20 c0       	rjmp	.+64     	; 0x2486 <vfprintf+0x166>
    2446:	f5 01       	movw	r30, r10
    2448:	80 81       	ld	r24, Z
    244a:	89 83       	std	Y+1, r24	; 0x01
    244c:	42 e0       	ldi	r20, 0x02	; 2
    244e:	50 e0       	ldi	r21, 0x00	; 0
    2450:	a4 0e       	add	r10, r20
    2452:	b5 1e       	adc	r11, r21
    2454:	61 01       	movw	r12, r2
    2456:	01 e0       	ldi	r16, 0x01	; 1
    2458:	10 e0       	ldi	r17, 0x00	; 0
    245a:	12 c0       	rjmp	.+36     	; 0x2480 <vfprintf+0x160>
    245c:	f5 01       	movw	r30, r10
    245e:	c0 80       	ld	r12, Z
    2460:	d1 80       	ldd	r13, Z+1	; 0x01
    2462:	f6 fc       	sbrc	r15, 6
    2464:	03 c0       	rjmp	.+6      	; 0x246c <vfprintf+0x14c>
    2466:	6f ef       	ldi	r22, 0xFF	; 255
    2468:	7f ef       	ldi	r23, 0xFF	; 255
    246a:	02 c0       	rjmp	.+4      	; 0x2470 <vfprintf+0x150>
    246c:	69 2d       	mov	r22, r9
    246e:	70 e0       	ldi	r23, 0x00	; 0
    2470:	42 e0       	ldi	r20, 0x02	; 2
    2472:	50 e0       	ldi	r21, 0x00	; 0
    2474:	a4 0e       	add	r10, r20
    2476:	b5 1e       	adc	r11, r21
    2478:	c6 01       	movw	r24, r12
    247a:	0e 94 78 13 	call	0x26f0	; 0x26f0 <strnlen>
    247e:	8c 01       	movw	r16, r24
    2480:	5f e7       	ldi	r21, 0x7F	; 127
    2482:	f5 22       	and	r15, r21
    2484:	14 c0       	rjmp	.+40     	; 0x24ae <vfprintf+0x18e>
    2486:	f5 01       	movw	r30, r10
    2488:	c0 80       	ld	r12, Z
    248a:	d1 80       	ldd	r13, Z+1	; 0x01
    248c:	f6 fc       	sbrc	r15, 6
    248e:	03 c0       	rjmp	.+6      	; 0x2496 <vfprintf+0x176>
    2490:	6f ef       	ldi	r22, 0xFF	; 255
    2492:	7f ef       	ldi	r23, 0xFF	; 255
    2494:	02 c0       	rjmp	.+4      	; 0x249a <vfprintf+0x17a>
    2496:	69 2d       	mov	r22, r9
    2498:	70 e0       	ldi	r23, 0x00	; 0
    249a:	42 e0       	ldi	r20, 0x02	; 2
    249c:	50 e0       	ldi	r21, 0x00	; 0
    249e:	a4 0e       	add	r10, r20
    24a0:	b5 1e       	adc	r11, r21
    24a2:	c6 01       	movw	r24, r12
    24a4:	0e 94 6d 13 	call	0x26da	; 0x26da <strnlen_P>
    24a8:	8c 01       	movw	r16, r24
    24aa:	50 e8       	ldi	r21, 0x80	; 128
    24ac:	f5 2a       	or	r15, r21
    24ae:	f3 fe       	sbrs	r15, 3
    24b0:	07 c0       	rjmp	.+14     	; 0x24c0 <vfprintf+0x1a0>
    24b2:	1a c0       	rjmp	.+52     	; 0x24e8 <vfprintf+0x1c8>
    24b4:	80 e2       	ldi	r24, 0x20	; 32
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	b3 01       	movw	r22, r6
    24ba:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    24be:	ea 94       	dec	r14
    24c0:	8e 2d       	mov	r24, r14
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	08 17       	cp	r16, r24
    24c6:	19 07       	cpc	r17, r25
    24c8:	a8 f3       	brcs	.-22     	; 0x24b4 <vfprintf+0x194>
    24ca:	0e c0       	rjmp	.+28     	; 0x24e8 <vfprintf+0x1c8>
    24cc:	f6 01       	movw	r30, r12
    24ce:	f7 fc       	sbrc	r15, 7
    24d0:	85 91       	lpm	r24, Z+
    24d2:	f7 fe       	sbrs	r15, 7
    24d4:	81 91       	ld	r24, Z+
    24d6:	6f 01       	movw	r12, r30
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	b3 01       	movw	r22, r6
    24dc:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    24e0:	e1 10       	cpse	r14, r1
    24e2:	ea 94       	dec	r14
    24e4:	01 50       	subi	r16, 0x01	; 1
    24e6:	10 40       	sbci	r17, 0x00	; 0
    24e8:	01 15       	cp	r16, r1
    24ea:	11 05       	cpc	r17, r1
    24ec:	79 f7       	brne	.-34     	; 0x24cc <vfprintf+0x1ac>
    24ee:	ea c0       	rjmp	.+468    	; 0x26c4 <vfprintf+0x3a4>
    24f0:	94 36       	cpi	r25, 0x64	; 100
    24f2:	11 f0       	breq	.+4      	; 0x24f8 <vfprintf+0x1d8>
    24f4:	99 36       	cpi	r25, 0x69	; 105
    24f6:	69 f5       	brne	.+90     	; 0x2552 <vfprintf+0x232>
    24f8:	f7 fe       	sbrs	r15, 7
    24fa:	08 c0       	rjmp	.+16     	; 0x250c <vfprintf+0x1ec>
    24fc:	f5 01       	movw	r30, r10
    24fe:	20 81       	ld	r18, Z
    2500:	31 81       	ldd	r19, Z+1	; 0x01
    2502:	42 81       	ldd	r20, Z+2	; 0x02
    2504:	53 81       	ldd	r21, Z+3	; 0x03
    2506:	84 e0       	ldi	r24, 0x04	; 4
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	0a c0       	rjmp	.+20     	; 0x2520 <vfprintf+0x200>
    250c:	f5 01       	movw	r30, r10
    250e:	80 81       	ld	r24, Z
    2510:	91 81       	ldd	r25, Z+1	; 0x01
    2512:	9c 01       	movw	r18, r24
    2514:	44 27       	eor	r20, r20
    2516:	37 fd       	sbrc	r19, 7
    2518:	40 95       	com	r20
    251a:	54 2f       	mov	r21, r20
    251c:	82 e0       	ldi	r24, 0x02	; 2
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	a8 0e       	add	r10, r24
    2522:	b9 1e       	adc	r11, r25
    2524:	9f e6       	ldi	r25, 0x6F	; 111
    2526:	f9 22       	and	r15, r25
    2528:	57 ff       	sbrs	r21, 7
    252a:	09 c0       	rjmp	.+18     	; 0x253e <vfprintf+0x21e>
    252c:	50 95       	com	r21
    252e:	40 95       	com	r20
    2530:	30 95       	com	r19
    2532:	21 95       	neg	r18
    2534:	3f 4f       	sbci	r19, 0xFF	; 255
    2536:	4f 4f       	sbci	r20, 0xFF	; 255
    2538:	5f 4f       	sbci	r21, 0xFF	; 255
    253a:	e0 e8       	ldi	r30, 0x80	; 128
    253c:	fe 2a       	or	r15, r30
    253e:	ca 01       	movw	r24, r20
    2540:	b9 01       	movw	r22, r18
    2542:	a1 01       	movw	r20, r2
    2544:	2a e0       	ldi	r18, 0x0A	; 10
    2546:	30 e0       	ldi	r19, 0x00	; 0
    2548:	0e 94 bf 13 	call	0x277e	; 0x277e <__ultoa_invert>
    254c:	d8 2e       	mov	r13, r24
    254e:	d2 18       	sub	r13, r2
    2550:	40 c0       	rjmp	.+128    	; 0x25d2 <vfprintf+0x2b2>
    2552:	95 37       	cpi	r25, 0x75	; 117
    2554:	29 f4       	brne	.+10     	; 0x2560 <vfprintf+0x240>
    2556:	1f 2d       	mov	r17, r15
    2558:	1f 7e       	andi	r17, 0xEF	; 239
    255a:	2a e0       	ldi	r18, 0x0A	; 10
    255c:	30 e0       	ldi	r19, 0x00	; 0
    255e:	1d c0       	rjmp	.+58     	; 0x259a <vfprintf+0x27a>
    2560:	1f 2d       	mov	r17, r15
    2562:	19 7f       	andi	r17, 0xF9	; 249
    2564:	9f 36       	cpi	r25, 0x6F	; 111
    2566:	61 f0       	breq	.+24     	; 0x2580 <vfprintf+0x260>
    2568:	90 37       	cpi	r25, 0x70	; 112
    256a:	20 f4       	brcc	.+8      	; 0x2574 <vfprintf+0x254>
    256c:	98 35       	cpi	r25, 0x58	; 88
    256e:	09 f0       	breq	.+2      	; 0x2572 <vfprintf+0x252>
    2570:	ac c0       	rjmp	.+344    	; 0x26ca <vfprintf+0x3aa>
    2572:	0f c0       	rjmp	.+30     	; 0x2592 <vfprintf+0x272>
    2574:	90 37       	cpi	r25, 0x70	; 112
    2576:	39 f0       	breq	.+14     	; 0x2586 <vfprintf+0x266>
    2578:	98 37       	cpi	r25, 0x78	; 120
    257a:	09 f0       	breq	.+2      	; 0x257e <vfprintf+0x25e>
    257c:	a6 c0       	rjmp	.+332    	; 0x26ca <vfprintf+0x3aa>
    257e:	04 c0       	rjmp	.+8      	; 0x2588 <vfprintf+0x268>
    2580:	28 e0       	ldi	r18, 0x08	; 8
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	0a c0       	rjmp	.+20     	; 0x259a <vfprintf+0x27a>
    2586:	10 61       	ori	r17, 0x10	; 16
    2588:	14 fd       	sbrc	r17, 4
    258a:	14 60       	ori	r17, 0x04	; 4
    258c:	20 e1       	ldi	r18, 0x10	; 16
    258e:	30 e0       	ldi	r19, 0x00	; 0
    2590:	04 c0       	rjmp	.+8      	; 0x259a <vfprintf+0x27a>
    2592:	14 fd       	sbrc	r17, 4
    2594:	16 60       	ori	r17, 0x06	; 6
    2596:	20 e1       	ldi	r18, 0x10	; 16
    2598:	32 e0       	ldi	r19, 0x02	; 2
    259a:	17 ff       	sbrs	r17, 7
    259c:	08 c0       	rjmp	.+16     	; 0x25ae <vfprintf+0x28e>
    259e:	f5 01       	movw	r30, r10
    25a0:	60 81       	ld	r22, Z
    25a2:	71 81       	ldd	r23, Z+1	; 0x01
    25a4:	82 81       	ldd	r24, Z+2	; 0x02
    25a6:	93 81       	ldd	r25, Z+3	; 0x03
    25a8:	44 e0       	ldi	r20, 0x04	; 4
    25aa:	50 e0       	ldi	r21, 0x00	; 0
    25ac:	08 c0       	rjmp	.+16     	; 0x25be <vfprintf+0x29e>
    25ae:	f5 01       	movw	r30, r10
    25b0:	80 81       	ld	r24, Z
    25b2:	91 81       	ldd	r25, Z+1	; 0x01
    25b4:	bc 01       	movw	r22, r24
    25b6:	80 e0       	ldi	r24, 0x00	; 0
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	42 e0       	ldi	r20, 0x02	; 2
    25bc:	50 e0       	ldi	r21, 0x00	; 0
    25be:	a4 0e       	add	r10, r20
    25c0:	b5 1e       	adc	r11, r21
    25c2:	a1 01       	movw	r20, r2
    25c4:	0e 94 bf 13 	call	0x277e	; 0x277e <__ultoa_invert>
    25c8:	d8 2e       	mov	r13, r24
    25ca:	d2 18       	sub	r13, r2
    25cc:	8f e7       	ldi	r24, 0x7F	; 127
    25ce:	f8 2e       	mov	r15, r24
    25d0:	f1 22       	and	r15, r17
    25d2:	f6 fe       	sbrs	r15, 6
    25d4:	0b c0       	rjmp	.+22     	; 0x25ec <vfprintf+0x2cc>
    25d6:	5e ef       	ldi	r21, 0xFE	; 254
    25d8:	f5 22       	and	r15, r21
    25da:	d9 14       	cp	r13, r9
    25dc:	38 f4       	brcc	.+14     	; 0x25ec <vfprintf+0x2cc>
    25de:	f4 fe       	sbrs	r15, 4
    25e0:	07 c0       	rjmp	.+14     	; 0x25f0 <vfprintf+0x2d0>
    25e2:	f2 fc       	sbrc	r15, 2
    25e4:	05 c0       	rjmp	.+10     	; 0x25f0 <vfprintf+0x2d0>
    25e6:	8f ee       	ldi	r24, 0xEF	; 239
    25e8:	f8 22       	and	r15, r24
    25ea:	02 c0       	rjmp	.+4      	; 0x25f0 <vfprintf+0x2d0>
    25ec:	1d 2d       	mov	r17, r13
    25ee:	01 c0       	rjmp	.+2      	; 0x25f2 <vfprintf+0x2d2>
    25f0:	19 2d       	mov	r17, r9
    25f2:	f4 fe       	sbrs	r15, 4
    25f4:	0d c0       	rjmp	.+26     	; 0x2610 <vfprintf+0x2f0>
    25f6:	fe 01       	movw	r30, r28
    25f8:	ed 0d       	add	r30, r13
    25fa:	f1 1d       	adc	r31, r1
    25fc:	80 81       	ld	r24, Z
    25fe:	80 33       	cpi	r24, 0x30	; 48
    2600:	19 f4       	brne	.+6      	; 0x2608 <vfprintf+0x2e8>
    2602:	99 ee       	ldi	r25, 0xE9	; 233
    2604:	f9 22       	and	r15, r25
    2606:	08 c0       	rjmp	.+16     	; 0x2618 <vfprintf+0x2f8>
    2608:	1f 5f       	subi	r17, 0xFF	; 255
    260a:	f2 fe       	sbrs	r15, 2
    260c:	05 c0       	rjmp	.+10     	; 0x2618 <vfprintf+0x2f8>
    260e:	03 c0       	rjmp	.+6      	; 0x2616 <vfprintf+0x2f6>
    2610:	8f 2d       	mov	r24, r15
    2612:	86 78       	andi	r24, 0x86	; 134
    2614:	09 f0       	breq	.+2      	; 0x2618 <vfprintf+0x2f8>
    2616:	1f 5f       	subi	r17, 0xFF	; 255
    2618:	0f 2d       	mov	r16, r15
    261a:	f3 fc       	sbrc	r15, 3
    261c:	14 c0       	rjmp	.+40     	; 0x2646 <vfprintf+0x326>
    261e:	f0 fe       	sbrs	r15, 0
    2620:	0f c0       	rjmp	.+30     	; 0x2640 <vfprintf+0x320>
    2622:	1e 15       	cp	r17, r14
    2624:	10 f0       	brcs	.+4      	; 0x262a <vfprintf+0x30a>
    2626:	9d 2c       	mov	r9, r13
    2628:	0b c0       	rjmp	.+22     	; 0x2640 <vfprintf+0x320>
    262a:	9d 2c       	mov	r9, r13
    262c:	9e 0c       	add	r9, r14
    262e:	91 1a       	sub	r9, r17
    2630:	1e 2d       	mov	r17, r14
    2632:	06 c0       	rjmp	.+12     	; 0x2640 <vfprintf+0x320>
    2634:	80 e2       	ldi	r24, 0x20	; 32
    2636:	90 e0       	ldi	r25, 0x00	; 0
    2638:	b3 01       	movw	r22, r6
    263a:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    263e:	1f 5f       	subi	r17, 0xFF	; 255
    2640:	1e 15       	cp	r17, r14
    2642:	c0 f3       	brcs	.-16     	; 0x2634 <vfprintf+0x314>
    2644:	04 c0       	rjmp	.+8      	; 0x264e <vfprintf+0x32e>
    2646:	1e 15       	cp	r17, r14
    2648:	10 f4       	brcc	.+4      	; 0x264e <vfprintf+0x32e>
    264a:	e1 1a       	sub	r14, r17
    264c:	01 c0       	rjmp	.+2      	; 0x2650 <vfprintf+0x330>
    264e:	ee 24       	eor	r14, r14
    2650:	04 ff       	sbrs	r16, 4
    2652:	0f c0       	rjmp	.+30     	; 0x2672 <vfprintf+0x352>
    2654:	80 e3       	ldi	r24, 0x30	; 48
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	b3 01       	movw	r22, r6
    265a:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    265e:	02 ff       	sbrs	r16, 2
    2660:	1d c0       	rjmp	.+58     	; 0x269c <vfprintf+0x37c>
    2662:	01 fd       	sbrc	r16, 1
    2664:	03 c0       	rjmp	.+6      	; 0x266c <vfprintf+0x34c>
    2666:	88 e7       	ldi	r24, 0x78	; 120
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	0e c0       	rjmp	.+28     	; 0x2688 <vfprintf+0x368>
    266c:	88 e5       	ldi	r24, 0x58	; 88
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	0b c0       	rjmp	.+22     	; 0x2688 <vfprintf+0x368>
    2672:	80 2f       	mov	r24, r16
    2674:	86 78       	andi	r24, 0x86	; 134
    2676:	91 f0       	breq	.+36     	; 0x269c <vfprintf+0x37c>
    2678:	01 ff       	sbrs	r16, 1
    267a:	02 c0       	rjmp	.+4      	; 0x2680 <vfprintf+0x360>
    267c:	8b e2       	ldi	r24, 0x2B	; 43
    267e:	01 c0       	rjmp	.+2      	; 0x2682 <vfprintf+0x362>
    2680:	80 e2       	ldi	r24, 0x20	; 32
    2682:	f7 fc       	sbrc	r15, 7
    2684:	8d e2       	ldi	r24, 0x2D	; 45
    2686:	90 e0       	ldi	r25, 0x00	; 0
    2688:	b3 01       	movw	r22, r6
    268a:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    268e:	06 c0       	rjmp	.+12     	; 0x269c <vfprintf+0x37c>
    2690:	80 e3       	ldi	r24, 0x30	; 48
    2692:	90 e0       	ldi	r25, 0x00	; 0
    2694:	b3 01       	movw	r22, r6
    2696:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    269a:	9a 94       	dec	r9
    269c:	d9 14       	cp	r13, r9
    269e:	c0 f3       	brcs	.-16     	; 0x2690 <vfprintf+0x370>
    26a0:	da 94       	dec	r13
    26a2:	f1 01       	movw	r30, r2
    26a4:	ed 0d       	add	r30, r13
    26a6:	f1 1d       	adc	r31, r1
    26a8:	80 81       	ld	r24, Z
    26aa:	90 e0       	ldi	r25, 0x00	; 0
    26ac:	b3 01       	movw	r22, r6
    26ae:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    26b2:	dd 20       	and	r13, r13
    26b4:	a9 f7       	brne	.-22     	; 0x26a0 <vfprintf+0x380>
    26b6:	06 c0       	rjmp	.+12     	; 0x26c4 <vfprintf+0x3a4>
    26b8:	80 e2       	ldi	r24, 0x20	; 32
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	b3 01       	movw	r22, r6
    26be:	0e 94 93 13 	call	0x2726	; 0x2726 <fputc>
    26c2:	ea 94       	dec	r14
    26c4:	ee 20       	and	r14, r14
    26c6:	c1 f7       	brne	.-16     	; 0x26b8 <vfprintf+0x398>
    26c8:	43 ce       	rjmp	.-890    	; 0x2350 <vfprintf+0x30>
    26ca:	f3 01       	movw	r30, r6
    26cc:	66 81       	ldd	r22, Z+6	; 0x06
    26ce:	77 81       	ldd	r23, Z+7	; 0x07
    26d0:	cb 01       	movw	r24, r22
    26d2:	2b 96       	adiw	r28, 0x0b	; 11
    26d4:	e2 e1       	ldi	r30, 0x12	; 18
    26d6:	0c 94 fc 10 	jmp	0x21f8	; 0x21f8 <__epilogue_restores__>

000026da <strnlen_P>:
    26da:	fc 01       	movw	r30, r24
    26dc:	05 90       	lpm	r0, Z+
    26de:	61 50       	subi	r22, 0x01	; 1
    26e0:	70 40       	sbci	r23, 0x00	; 0
    26e2:	01 10       	cpse	r0, r1
    26e4:	d8 f7       	brcc	.-10     	; 0x26dc <strnlen_P+0x2>
    26e6:	80 95       	com	r24
    26e8:	90 95       	com	r25
    26ea:	8e 0f       	add	r24, r30
    26ec:	9f 1f       	adc	r25, r31
    26ee:	08 95       	ret

000026f0 <strnlen>:
    26f0:	fc 01       	movw	r30, r24
    26f2:	61 50       	subi	r22, 0x01	; 1
    26f4:	70 40       	sbci	r23, 0x00	; 0
    26f6:	01 90       	ld	r0, Z+
    26f8:	01 10       	cpse	r0, r1
    26fa:	d8 f7       	brcc	.-10     	; 0x26f2 <strnlen+0x2>
    26fc:	80 95       	com	r24
    26fe:	90 95       	com	r25
    2700:	8e 0f       	add	r24, r30
    2702:	9f 1f       	adc	r25, r31
    2704:	08 95       	ret

00002706 <strrev>:
    2706:	dc 01       	movw	r26, r24
    2708:	fc 01       	movw	r30, r24
    270a:	67 2f       	mov	r22, r23
    270c:	71 91       	ld	r23, Z+
    270e:	77 23       	and	r23, r23
    2710:	e1 f7       	brne	.-8      	; 0x270a <strrev+0x4>
    2712:	32 97       	sbiw	r30, 0x02	; 2
    2714:	04 c0       	rjmp	.+8      	; 0x271e <strrev+0x18>
    2716:	7c 91       	ld	r23, X
    2718:	6d 93       	st	X+, r22
    271a:	70 83       	st	Z, r23
    271c:	62 91       	ld	r22, -Z
    271e:	ae 17       	cp	r26, r30
    2720:	bf 07       	cpc	r27, r31
    2722:	c8 f3       	brcs	.-14     	; 0x2716 <strrev+0x10>
    2724:	08 95       	ret

00002726 <fputc>:
    2726:	0f 93       	push	r16
    2728:	1f 93       	push	r17
    272a:	cf 93       	push	r28
    272c:	df 93       	push	r29
    272e:	8c 01       	movw	r16, r24
    2730:	eb 01       	movw	r28, r22
    2732:	8b 81       	ldd	r24, Y+3	; 0x03
    2734:	81 ff       	sbrs	r24, 1
    2736:	1b c0       	rjmp	.+54     	; 0x276e <fputc+0x48>
    2738:	82 ff       	sbrs	r24, 2
    273a:	0d c0       	rjmp	.+26     	; 0x2756 <fputc+0x30>
    273c:	2e 81       	ldd	r18, Y+6	; 0x06
    273e:	3f 81       	ldd	r19, Y+7	; 0x07
    2740:	8c 81       	ldd	r24, Y+4	; 0x04
    2742:	9d 81       	ldd	r25, Y+5	; 0x05
    2744:	28 17       	cp	r18, r24
    2746:	39 07       	cpc	r19, r25
    2748:	64 f4       	brge	.+24     	; 0x2762 <fputc+0x3c>
    274a:	e8 81       	ld	r30, Y
    274c:	f9 81       	ldd	r31, Y+1	; 0x01
    274e:	01 93       	st	Z+, r16
    2750:	f9 83       	std	Y+1, r31	; 0x01
    2752:	e8 83       	st	Y, r30
    2754:	06 c0       	rjmp	.+12     	; 0x2762 <fputc+0x3c>
    2756:	e8 85       	ldd	r30, Y+8	; 0x08
    2758:	f9 85       	ldd	r31, Y+9	; 0x09
    275a:	80 2f       	mov	r24, r16
    275c:	09 95       	icall
    275e:	89 2b       	or	r24, r25
    2760:	31 f4       	brne	.+12     	; 0x276e <fputc+0x48>
    2762:	8e 81       	ldd	r24, Y+6	; 0x06
    2764:	9f 81       	ldd	r25, Y+7	; 0x07
    2766:	01 96       	adiw	r24, 0x01	; 1
    2768:	9f 83       	std	Y+7, r25	; 0x07
    276a:	8e 83       	std	Y+6, r24	; 0x06
    276c:	02 c0       	rjmp	.+4      	; 0x2772 <fputc+0x4c>
    276e:	0f ef       	ldi	r16, 0xFF	; 255
    2770:	1f ef       	ldi	r17, 0xFF	; 255
    2772:	c8 01       	movw	r24, r16
    2774:	df 91       	pop	r29
    2776:	cf 91       	pop	r28
    2778:	1f 91       	pop	r17
    277a:	0f 91       	pop	r16
    277c:	08 95       	ret

0000277e <__ultoa_invert>:
    277e:	fa 01       	movw	r30, r20
    2780:	aa 27       	eor	r26, r26
    2782:	28 30       	cpi	r18, 0x08	; 8
    2784:	51 f1       	breq	.+84     	; 0x27da <__ultoa_invert+0x5c>
    2786:	20 31       	cpi	r18, 0x10	; 16
    2788:	81 f1       	breq	.+96     	; 0x27ea <__ultoa_invert+0x6c>
    278a:	e8 94       	clt
    278c:	6f 93       	push	r22
    278e:	6e 7f       	andi	r22, 0xFE	; 254
    2790:	6e 5f       	subi	r22, 0xFE	; 254
    2792:	7f 4f       	sbci	r23, 0xFF	; 255
    2794:	8f 4f       	sbci	r24, 0xFF	; 255
    2796:	9f 4f       	sbci	r25, 0xFF	; 255
    2798:	af 4f       	sbci	r26, 0xFF	; 255
    279a:	b1 e0       	ldi	r27, 0x01	; 1
    279c:	3e d0       	rcall	.+124    	; 0x281a <__ultoa_invert+0x9c>
    279e:	b4 e0       	ldi	r27, 0x04	; 4
    27a0:	3c d0       	rcall	.+120    	; 0x281a <__ultoa_invert+0x9c>
    27a2:	67 0f       	add	r22, r23
    27a4:	78 1f       	adc	r23, r24
    27a6:	89 1f       	adc	r24, r25
    27a8:	9a 1f       	adc	r25, r26
    27aa:	a1 1d       	adc	r26, r1
    27ac:	68 0f       	add	r22, r24
    27ae:	79 1f       	adc	r23, r25
    27b0:	8a 1f       	adc	r24, r26
    27b2:	91 1d       	adc	r25, r1
    27b4:	a1 1d       	adc	r26, r1
    27b6:	6a 0f       	add	r22, r26
    27b8:	71 1d       	adc	r23, r1
    27ba:	81 1d       	adc	r24, r1
    27bc:	91 1d       	adc	r25, r1
    27be:	a1 1d       	adc	r26, r1
    27c0:	20 d0       	rcall	.+64     	; 0x2802 <__ultoa_invert+0x84>
    27c2:	09 f4       	brne	.+2      	; 0x27c6 <__ultoa_invert+0x48>
    27c4:	68 94       	set
    27c6:	3f 91       	pop	r19
    27c8:	2a e0       	ldi	r18, 0x0A	; 10
    27ca:	26 9f       	mul	r18, r22
    27cc:	11 24       	eor	r1, r1
    27ce:	30 19       	sub	r19, r0
    27d0:	30 5d       	subi	r19, 0xD0	; 208
    27d2:	31 93       	st	Z+, r19
    27d4:	de f6       	brtc	.-74     	; 0x278c <__ultoa_invert+0xe>
    27d6:	cf 01       	movw	r24, r30
    27d8:	08 95       	ret
    27da:	46 2f       	mov	r20, r22
    27dc:	47 70       	andi	r20, 0x07	; 7
    27de:	40 5d       	subi	r20, 0xD0	; 208
    27e0:	41 93       	st	Z+, r20
    27e2:	b3 e0       	ldi	r27, 0x03	; 3
    27e4:	0f d0       	rcall	.+30     	; 0x2804 <__ultoa_invert+0x86>
    27e6:	c9 f7       	brne	.-14     	; 0x27da <__ultoa_invert+0x5c>
    27e8:	f6 cf       	rjmp	.-20     	; 0x27d6 <__ultoa_invert+0x58>
    27ea:	46 2f       	mov	r20, r22
    27ec:	4f 70       	andi	r20, 0x0F	; 15
    27ee:	40 5d       	subi	r20, 0xD0	; 208
    27f0:	4a 33       	cpi	r20, 0x3A	; 58
    27f2:	18 f0       	brcs	.+6      	; 0x27fa <__ultoa_invert+0x7c>
    27f4:	49 5d       	subi	r20, 0xD9	; 217
    27f6:	31 fd       	sbrc	r19, 1
    27f8:	40 52       	subi	r20, 0x20	; 32
    27fa:	41 93       	st	Z+, r20
    27fc:	02 d0       	rcall	.+4      	; 0x2802 <__ultoa_invert+0x84>
    27fe:	a9 f7       	brne	.-22     	; 0x27ea <__ultoa_invert+0x6c>
    2800:	ea cf       	rjmp	.-44     	; 0x27d6 <__ultoa_invert+0x58>
    2802:	b4 e0       	ldi	r27, 0x04	; 4
    2804:	a6 95       	lsr	r26
    2806:	97 95       	ror	r25
    2808:	87 95       	ror	r24
    280a:	77 95       	ror	r23
    280c:	67 95       	ror	r22
    280e:	ba 95       	dec	r27
    2810:	c9 f7       	brne	.-14     	; 0x2804 <__ultoa_invert+0x86>
    2812:	00 97       	sbiw	r24, 0x00	; 0
    2814:	61 05       	cpc	r22, r1
    2816:	71 05       	cpc	r23, r1
    2818:	08 95       	ret
    281a:	9b 01       	movw	r18, r22
    281c:	ac 01       	movw	r20, r24
    281e:	0a 2e       	mov	r0, r26
    2820:	06 94       	lsr	r0
    2822:	57 95       	ror	r21
    2824:	47 95       	ror	r20
    2826:	37 95       	ror	r19
    2828:	27 95       	ror	r18
    282a:	ba 95       	dec	r27
    282c:	c9 f7       	brne	.-14     	; 0x2820 <__ultoa_invert+0xa2>
    282e:	62 0f       	add	r22, r18
    2830:	73 1f       	adc	r23, r19
    2832:	84 1f       	adc	r24, r20
    2834:	95 1f       	adc	r25, r21
    2836:	a0 1d       	adc	r26, r0
    2838:	08 95       	ret

0000283a <_exit>:
    283a:	f8 94       	cli

0000283c <__stop_program>:
    283c:	ff cf       	rjmp	.-2      	; 0x283c <__stop_program>
